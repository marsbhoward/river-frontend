{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/searchbox.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { listMovies } from '../actions/movieActions';\nimport MoviesList from './MoviesList';\nlet moviesList;\n\nclass Searchbox extends Component {\n  constructor() {\n    super();\n\n    this.searchMovie = event => {\n      let keyword = event.target.value.toLowerCase();\n      this.setState({\n        search: keyword\n      });\n    };\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"Loading Titles...\");\n      } else {\n        let movieList;\n        words.filter(word => word.length > 6);\n        movieList = this.props.movieCards.filter(movieCard => {\n          if (this.state.search.length >= 3) {\n            console.log(movieList);\n            return movieCard;\n          } else {\n            moviesList = '';\n          }\n        }).map((movie, index) => {\n          moviesList = this.props.movieCards.map((movie, index) => {\n            return React.createElement(MoviesList, {\n              key: index,\n              search: this.state.search,\n              movie: movie,\n              movieID: index + 1,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 48\n              },\n              __self: this\n            });\n          });\n        });\n      }\n    };\n\n    this.state = {\n      search: '',\n      MoiveData: \"\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(this);\n    this.props.listMovies();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name-input\",\n      className: \"input\",\n      placeholder: \"Search by title\",\n      onChange: e => this.searchMovie(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), this.handleLoading(), React.createElement(\"div\", {\n      className: \"movie-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, moviesList));\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    loading: state.MoviesReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  listMovies\n})(Searchbox);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/searchbox.js"],"names":["React","Component","connect","listMovies","MoviesList","moviesList","Searchbox","constructor","searchMovie","event","keyword","target","value","toLowerCase","setState","search","handleLoading","props","loading","movieList","words","filter","word","length","movieCards","movieCard","state","console","log","map","movie","index","MoiveData","componentDidMount","render","e","mapDispatchToProps","MoviesReducer","movies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { listMovies } from '../actions/movieActions'\nimport MoviesList from './MoviesList';\n\nlet  moviesList\n\nclass Searchbox extends Component {\n constructor(){\n    super();\n\n    this.state={\n      search:'',\n      MoiveData: \"\"\n    };\n  }\n\n  componentDidMount() {\n    console.log(this)\n    this.props.listMovies()\n  }\n\n  searchMovie=(event)=>{\n    let keyword = event.target.value.toLowerCase();\n    this.setState({search:keyword})\n    \n  }  \t\n\n  handleLoading = () => {\n    if(this.props.loading) {\n      return <div>Loading Titles...</div>\n    } \n    else { \n      let movieList\n    \n      words.filter(word => word.length > 6);\n\n      movieList = this.props.movieCards.filter(movieCard=>{\n      if(this.state.search.length >= 3 ){\n            console.log(movieList)\n            return movieCard\n      }\n      else{\n        moviesList = ''\n      }        \n      }).map((movie,index)=>{\n        moviesList = this.props.movieCards.map((movie, index) => {\n          return <MoviesList key={index} search={this.state.search}  movie={movie} movieID={(index+1)}/>\n        })\n      })\n    }\n  }\n\n  render(){\n  \treturn(\n  \t\t<div>\n  \t\t\t<input type=\"text\" id='name-input' className=\"input\" placeholder=\"Search by title\"  onChange={(e)=>this.searchMovie(e)} />\n  \t\t\t{this.handleLoading()}\n        <div className=\"movie-list\">\n            {moviesList}\n        </div>\n  \t\t</div>\n  \t)\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    loading: state.MoviesReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {listMovies})(Searchbox)"]},"metadata":{},"sourceType":"module"}