{"ast":null,"code":"'use strict';\n\nconst URL = require('node-url-utils');\n/*\n *\n *\n */\n\n\nfunction seenreq(options) {\n  let Repo = null;\n  const Normalizers = [];\n  options = options || {};\n\n  if (!options.repo || options.repo === 'default' || options.repo === 'memory') {\n    Repo = require('./lib/repo/default.js');\n  } else {\n    const moduleName = `seenreq-repo-${options.repo}`;\n\n    try {\n      Repo = require(moduleName);\n    } catch (e) {\n      console.error(`\\nCannot load module ${moduleName}, please run 'npm install ${moduleName}' and retry\\n`);\n      throw e;\n    }\n  }\n\n  this.repo = new Repo(options);\n\n  if (!options.normalizer) {\n    Normalizers.push(require('./lib/normalizer/default.js'));\n  } else {\n    let moduleNames = null;\n\n    if (typeof options.normalizer === 'string') {\n      moduleNames = [options.normalizer];\n    } else {\n      moduleNames = options.normalizer;\n    }\n\n    moduleNames.map(moduleName => {\n      moduleName = `seenreq-nmlz-${moduleName}`;\n\n      try {\n        Normalizers.push(require(moduleName));\n      } catch (e) {\n        console.error(`Cannot load module ${moduleName}, please run 'npm install ${moduleName}' and retry`);\n      }\n    });\n  }\n\n  this.normalizers = Normalizers.map(ctor => new ctor(options));\n  this.globalOptions = options;\n}\n/* Initialize repo\n * - callback\n *  @return Promise if there is no callback\n */\n\n\nseenreq.prototype.initialize = function () {\n  return this.repo.initialize();\n};\n/* Generate method + full uri + body string.\n * - req, String|Object\n * - [options], Object\n * @return, Object. e.g {sign, options}\n */\n\n\nseenreq.prototype.normalize = function (req, options) {\n  if (!req) {\n    throw new Error('Argument req is required.');\n  }\n\n  const opt = {\n    method: 'GET',\n    body: null\n  };\n  options = Object.assign({}, this.globalOptions, options);\n\n  if (typeof req === 'string') {\n    opt.uri = req;\n  } else if (typeof req === 'object') {\n    Object.assign(opt, req);\n    opt.uri = opt.uri || opt.url;\n  }\n  /* A normalizedRequest is an object of request with some modified keys and values */\n\n\n  const normalizedRequest = this.normalizers.reduce((r, cur) => cur.normalize(r, options), opt);\n  const sign = [[normalizedRequest.method, URL.normalize(normalizedRequest.uri, options)].join(' '), normalizedRequest.body].join('\\r\\n');\n  const requestArgsSet = new Set(['uri', 'url', 'qs', 'method', 'headers', 'body', 'form', 'json', 'multipart', 'followRedirect', 'followAllRedirects', 'maxRedirects', 'encoding', 'pool', 'timeout', 'proxy', 'auth', 'oauth', 'strictSSL', 'jar', 'aws', 'gzip', 'time', 'tunnel', 'proxyHeaderWhiteList', 'proxyHeaderExclusiveList', 'localAddress', 'forever']);\n  Object.keys(normalizedRequest).filter(key => !requestArgsSet.has(key)).forEach(key => options[key] = normalizedRequest[key]);\n  return {\n    sign,\n    options\n  };\n};\n\nseenreq.prototype.exists = function (req, options) {\n  if (!req) {\n    throw new Error('Argument req is required.');\n  }\n\n  if (!(req instanceof Array)) {\n    req = [req];\n  }\n\n  const rs = req.map(r => this.normalize(r, options));\n  return this.repo.exists(rs, options).then(rst => rst.length == 1 ? rst[0] : rst);\n};\n\nseenreq.prototype.dispose = function () {\n  return this.repo.dispose();\n};\n\nmodule.exports = seenreq;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river/frontend/app/node_modules/seenreq/index.js"],"names":["URL","require","seenreq","options","Repo","Normalizers","repo","moduleName","e","console","error","normalizer","push","moduleNames","map","normalizers","ctor","globalOptions","prototype","initialize","normalize","req","Error","opt","method","body","Object","assign","uri","url","normalizedRequest","reduce","r","cur","sign","join","requestArgsSet","Set","keys","filter","key","has","forEach","exists","Array","rs","then","rst","length","dispose","module","exports"],"mappings":"AACA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,gBAAD,CAAnB;AAEA;;;;;;AAKA,SAASC,OAAT,CAAiBC,OAAjB,EAA0B;AACzB,MAAIC,IAAI,GAAG,IAAX;AACA,QAAMC,WAAW,GAAG,EAApB;AAEAF,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AACA,MAAG,CAACA,OAAO,CAACG,IAAT,IAAiBH,OAAO,CAACG,IAAR,KAAe,SAAhC,IAA6CH,OAAO,CAACG,IAAR,KAAe,QAA/D,EAAwE;AACvEF,IAAAA,IAAI,GAAGH,OAAO,CAAC,uBAAD,CAAd;AACA,GAFD,MAEK;AACJ,UAAMM,UAAU,GAAI,gBAAeJ,OAAO,CAACG,IAAK,EAAhD;;AACA,QAAG;AACFF,MAAAA,IAAI,GAAGH,OAAO,CAACM,UAAD,CAAd;AACA,KAFD,CAEC,OAAMC,CAAN,EAAQ;AACRC,MAAAA,OAAO,CAACC,KAAR,CAAe,wBAAuBH,UAAW,6BAA4BA,UAAW,eAAxF;AACA,YAAMC,CAAN;AACA;AACD;;AAED,OAAKF,IAAL,GAAY,IAAIF,IAAJ,CAASD,OAAT,CAAZ;;AAEA,MAAG,CAACA,OAAO,CAACQ,UAAZ,EAAuB;AACtBN,IAAAA,WAAW,CAACO,IAAZ,CAAiBX,OAAO,CAAC,6BAAD,CAAxB;AACA,GAFD,MAEK;AACJ,QAAIY,WAAW,GAAG,IAAlB;;AACA,QAAG,OAAOV,OAAO,CAACQ,UAAf,KAA8B,QAAjC,EAA0C;AACzCE,MAAAA,WAAW,GAAG,CAACV,OAAO,CAACQ,UAAT,CAAd;AACA,KAFD,MAEK;AACJE,MAAAA,WAAW,GAAGV,OAAO,CAACQ,UAAtB;AACA;;AAEDE,IAAAA,WAAW,CAACC,GAAZ,CAAgBP,UAAU,IAAE;AAC3BA,MAAAA,UAAU,GAAI,gBAAeA,UAAW,EAAxC;;AACA,UAAG;AACFF,QAAAA,WAAW,CAACO,IAAZ,CAAiBX,OAAO,CAACM,UAAD,CAAxB;AACA,OAFD,CAEC,OAAMC,CAAN,EAAQ;AACRC,QAAAA,OAAO,CAACC,KAAR,CAAe,sBAAqBH,UAAW,6BAA4BA,UAAW,aAAtF;AACA;AACD,KAPD;AAQA;;AAED,OAAKQ,WAAL,GAAmBV,WAAW,CAACS,GAAZ,CAAgBE,IAAI,IAAI,IAAIA,IAAJ,CAASb,OAAT,CAAxB,CAAnB;AACA,OAAKc,aAAL,GAAqBd,OAArB;AACA;AAED;;;;;;AAIAD,OAAO,CAACgB,SAAR,CAAkBC,UAAlB,GAA+B,YAAU;AACxC,SAAO,KAAKb,IAAL,CAAUa,UAAV,EAAP;AACA,CAFD;AAIA;;;;;;;AAKAjB,OAAO,CAACgB,SAAR,CAAkBE,SAAlB,GAA8B,UAASC,GAAT,EAAclB,OAAd,EAAuB;AACpD,MAAG,CAACkB,GAAJ,EAAQ;AACP,UAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACA;;AAED,QAAMC,GAAG,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,IAAI,EAAE;AAFK,GAAZ;AAKAtB,EAAAA,OAAO,GAAGuB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiB,KAAKV,aAAtB,EAAoCd,OAApC,CAAV;;AAEA,MAAI,OAAOkB,GAAP,KAAe,QAAnB,EAA6B;AAC5BE,IAAAA,GAAG,CAACK,GAAJ,GAAUP,GAAV;AACA,GAFD,MAEM,IAAG,OAAOA,GAAP,KAAe,QAAlB,EAA2B;AAChCK,IAAAA,MAAM,CAACC,MAAP,CAAcJ,GAAd,EAAmBF,GAAnB;AACAE,IAAAA,GAAG,CAACK,GAAJ,GAAUL,GAAG,CAACK,GAAJ,IAAWL,GAAG,CAACM,GAAzB;AACA;AAED;;;AACA,QAAMC,iBAAiB,GAAG,KAAKf,WAAL,CAAiBgB,MAAjB,CAAwB,CAACC,CAAD,EAAIC,GAAJ,KAAYA,GAAG,CAACb,SAAJ,CAAcY,CAAd,EAAgB7B,OAAhB,CAApC,EAA8DoB,GAA9D,CAA1B;AACA,QAAOW,IAAI,GAAG,CACb,CAACJ,iBAAiB,CAACN,MAAnB,EAA2BxB,GAAG,CAACoB,SAAJ,CAAcU,iBAAiB,CAACF,GAAhC,EAAqCzB,OAArC,CAA3B,EAA0EgC,IAA1E,CAA+E,GAA/E,CADa,EACwEL,iBAAiB,CAACL,IAD1F,EAEZU,IAFY,CAEP,MAFO,CAAd;AAIA,QAAMC,cAAc,GAAG,IAAIC,GAAJ,CAAQ,CAAC,KAAD,EAAO,KAAP,EAAa,IAAb,EAAkB,QAAlB,EAA2B,SAA3B,EAAqC,MAArC,EAA4C,MAA5C,EAAmD,MAAnD,EAA0D,WAA1D,EAAsE,gBAAtE,EAAuF,oBAAvF,EAA6G,cAA7G,EAA4H,UAA5H,EAAuI,MAAvI,EAA8I,SAA9I,EAAwJ,OAAxJ,EAAgK,MAAhK,EAAuK,OAAvK,EAA+K,WAA/K,EAA2L,KAA3L,EAAiM,KAAjM,EAAuM,MAAvM,EAA8M,MAA9M,EAAqN,QAArN,EAA8N,sBAA9N,EAAqP,0BAArP,EAAgR,cAAhR,EAA+R,SAA/R,CAAR,CAAvB;AAEAX,EAAAA,MAAM,CAACY,IAAP,CAAYR,iBAAZ,EAA+BS,MAA/B,CAAsCC,GAAG,IAAI,CAACJ,cAAc,CAACK,GAAf,CAAmBD,GAAnB,CAA9C,EAAwEE,OAAxE,CAAgFF,GAAG,IAAErC,OAAO,CAACqC,GAAD,CAAP,GAAaV,iBAAiB,CAACU,GAAD,CAAnH;AACA,SAAO;AAACN,IAAAA,IAAD;AAAM/B,IAAAA;AAAN,GAAP;AACA,CA7BD;;AA+BAD,OAAO,CAACgB,SAAR,CAAkByB,MAAlB,GAA2B,UAAStB,GAAT,EAAclB,OAAd,EAAuB;AACjD,MAAG,CAACkB,GAAJ,EAAQ;AACP,UAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACA;;AAED,MAAI,EAAED,GAAG,YAAYuB,KAAjB,CAAJ,EAA6B;AAC5BvB,IAAAA,GAAG,GAAG,CAACA,GAAD,CAAN;AACA;;AAED,QAAMwB,EAAE,GAAGxB,GAAG,CAACP,GAAJ,CAAQkB,CAAC,IAAE,KAAKZ,SAAL,CAAeY,CAAf,EAAiB7B,OAAjB,CAAX,CAAX;AACA,SAAO,KAAKG,IAAL,CAAUqC,MAAV,CAAiBE,EAAjB,EAAqB1C,OAArB,EAA8B2C,IAA9B,CAAoCC,GAAG,IAAIA,GAAG,CAACC,MAAJ,IAAc,CAAd,GAAkBD,GAAG,CAAC,CAAD,CAArB,GAA2BA,GAAtE,CAAP;AACA,CAXD;;AAaA7C,OAAO,CAACgB,SAAR,CAAkB+B,OAAlB,GAA4B,YAAW;AACtC,SAAO,KAAK3C,IAAL,CAAU2C,OAAV,EAAP;AACA,CAFD;;AAIAC,MAAM,CAACC,OAAP,GAAiBjD,OAAjB","sourcesContent":["\n'use strict';\n\nconst URL = require('node-url-utils');\n\n/*\n *\n *\n */\n\nfunction seenreq(options) {\n\tlet Repo = null;\n\tconst Normalizers = [];\n    \n\toptions = options || {};\n\tif(!options.repo || options.repo==='default' || options.repo==='memory'){\n\t\tRepo = require('./lib/repo/default.js');\n\t}else{\n\t\tconst moduleName = `seenreq-repo-${options.repo}`;\n\t\ttry{\n\t\t\tRepo = require(moduleName);\n\t\t}catch(e){\n\t\t\tconsole.error(`\\nCannot load module ${moduleName}, please run 'npm install ${moduleName}' and retry\\n`);\n\t\t\tthrow e;\n\t\t}\n\t}\n    \n\tthis.repo = new Repo(options);\n    \n\tif(!options.normalizer){\n\t\tNormalizers.push(require('./lib/normalizer/default.js'));\n\t}else{\n\t\tlet moduleNames = null;\n\t\tif(typeof options.normalizer === 'string'){\n\t\t\tmoduleNames = [options.normalizer];\n\t\t}else{\n\t\t\tmoduleNames = options.normalizer;\n\t\t}\n\n\t\tmoduleNames.map(moduleName=>{\n\t\t\tmoduleName = `seenreq-nmlz-${moduleName}`;\n\t\t\ttry{\n\t\t\t\tNormalizers.push(require(moduleName));\n\t\t\t}catch(e){\n\t\t\t\tconsole.error(`Cannot load module ${moduleName}, please run 'npm install ${moduleName}' and retry`);\n\t\t\t}\n\t\t});\n\t}\n    \n\tthis.normalizers = Normalizers.map(ctor => new ctor(options));\n\tthis.globalOptions = options;\n}\n\n/* Initialize repo\n * - callback\n *  @return Promise if there is no callback\n */\nseenreq.prototype.initialize = function(){\n\treturn this.repo.initialize();\n};\n\n/* Generate method + full uri + body string.\n * - req, String|Object\n * - [options], Object\n * @return, Object. e.g {sign, options}\n */\nseenreq.prototype.normalize = function(req, options) {\n\tif(!req){\n\t\tthrow new Error('Argument req is required.');\n\t}\n    \n\tconst opt = {\n\t\tmethod: 'GET',\n\t\tbody: null\n\t};\n\n\toptions = Object.assign({},this.globalOptions,options);\n\n\tif (typeof req === 'string') {\n\t\topt.uri = req;\n\t}else if(typeof req === 'object'){\n\t\tObject.assign(opt, req);\n\t\topt.uri = opt.uri || opt.url;\n\t}\n\n\t/* A normalizedRequest is an object of request with some modified keys and values */\n\tconst normalizedRequest = this.normalizers.reduce((r, cur) => cur.normalize(r,options), opt);\n\tconst  sign = [\n\t\t[normalizedRequest.method, URL.normalize(normalizedRequest.uri, options)].join(' '), normalizedRequest.body\n\t].join('\\r\\n');\n    \n\tconst requestArgsSet = new Set(['uri','url','qs','method','headers','body','form','json','multipart','followRedirect','followAllRedirects', 'maxRedirects','encoding','pool','timeout','proxy','auth','oauth','strictSSL','jar','aws','gzip','time','tunnel','proxyHeaderWhiteList','proxyHeaderExclusiveList','localAddress','forever']);\n    \n\tObject.keys(normalizedRequest).filter(key => !requestArgsSet.has(key) ).forEach(key=>options[key]=normalizedRequest[key]);\n\treturn {sign,options};\n};\n\nseenreq.prototype.exists = function(req, options) {\n\tif(!req){\n\t\tthrow new Error('Argument req is required.');\n\t}\n\n\tif (!(req instanceof Array)) {\n\t\treq = [req];\n\t}\n\t\n\tconst rs = req.map(r=>this.normalize(r,options));\n\treturn this.repo.exists(rs, options).then( rst => rst.length == 1 ? rst[0] : rst);\n};\n\nseenreq.prototype.dispose = function() {\n\treturn this.repo.dispose();\n};\n\nmodule.exports = seenreq;\n"]},"metadata":{},"sourceType":"script"}