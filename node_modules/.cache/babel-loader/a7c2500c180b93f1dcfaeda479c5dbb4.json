{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/MovieInfo.js\";\nimport React, { Component } from 'react';\nimport Video from './Video';\n\nclass MovieInfo extends Component {\n  componentDidMount() {}\n\n  render() {\n    let currentMovie = this.props.currentMovie;\n    let videoId = this.props.trailer;\n    let fullSrc = 'https://www.youtube.com/embed/' + this.props.trailer;\n    let errorMsg;\n\n    if (videoId === \"kJQP7kiw5Fk\") {\n      errorMsg = \"due to an issue with this sites connection to youtube the trailer can not be viewed at this time\";\n      this.props.handler(\"default\");\n    } else {\n      this.props.handler(videoId);\n    }\n\n    const ratings = currentMovie.Ratings.map((rating, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"\\xBB \", rating.Source, \": \", rating.Value, \" \\xAB\"));\n    return React.createElement(\"div\", {\n      className: \"show_Movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"selected_Movie\",\n      alt: currentMovie.Title,\n      src: currentMovie.Poster,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \" Rated: \", currentMovie.Rated), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \" Year: \", currentMovie.Year), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \" Genre: \", currentMovie.Genre, \" \"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \" Actors: \", currentMovie.Actors, \" \"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \" Director: \", currentMovie.Director, \" \"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \" Awards: \", currentMovie.Awards, \" \"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \" Ratings \"), React.createElement(\"ul\", {\n      style: {\n        display: 'inline',\n        margin: 40,\n        listStyle: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \" \", ratings, \" \"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \" Plot\"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, currentMovie.Plot, \" \"), React.createElement(Video, {\n      fullSrc: fullSrc,\n      videoId: videoId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, errorMsg));\n  }\n\n}\n\nexport default MovieInfo;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/MovieInfo.js"],"names":["React","Component","Video","MovieInfo","componentDidMount","render","currentMovie","props","videoId","trailer","fullSrc","errorMsg","handler","ratings","Ratings","map","rating","index","Source","Value","Title","Poster","Rated","Year","Genre","Actors","Director","Awards","display","margin","listStyle","Plot"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAEhCG,EAAAA,iBAAiB,GAAG,CACnB;;AAEDC,EAAAA,MAAM,GAAG;AACR,QAAIC,YAAY,GAAG,KAAKC,KAAL,CAAWD,YAA9B;AACC,QAAIE,OAAO,GAAG,KAAKD,KAAL,CAAWE,OAAzB;AACA,QAAIC,OAAO,GAAG,mCAAmC,KAAKH,KAAL,CAAWE,OAA5D;AACA,QAAIE,QAAJ;;AAEA,QAAIH,OAAO,KAAK,aAAhB,EAA8B;AAC5BG,MAAAA,QAAQ,GAAG,kGAAX;AACA,WAAKJ,KAAL,CAAWK,OAAX,CAAmB,SAAnB;AACD,KAHD,MAII;AACF,WAAKL,KAAL,CAAWK,OAAX,CAAmBJ,OAAnB;AACD;;AAEF,UAAMK,OAAO,GAAGP,YAAY,CAACQ,OAAb,CAAqBC,GAArB,CAAyB,CAACC,MAAD,EAASC,KAAT,KACxC;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAoBD,MAAM,CAACE,MAA3B,QAAqCF,MAAM,CAACG,KAA5C,UADe,CAAhB;AAIC,WACC;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAE,gBAAhB;AAAiC,MAAA,GAAG,EAAEb,YAAY,CAACc,KAAnD;AAA0D,MAAA,GAAG,EAAEd,YAAY,CAACe,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAaf,YAAY,CAACgB,KAA1B,CAFL,EAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAYhB,YAAY,CAACiB,IAAzB,CAHL,EAIK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAajB,YAAY,CAACkB,KAA1B,MAJL,EAKK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAclB,YAAY,CAACmB,MAA3B,MALL,EAMK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgBnB,YAAY,CAACoB,QAA7B,MANL,EAOK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAcpB,YAAY,CAACqB,MAA3B,MAPL,EAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARD,EASG;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,QAAV;AAAmBC,QAAAA,MAAM,EAAE,EAA3B;AAA+BC,QAAAA,SAAS,EAAE;AAA1C,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgEjB,OAAhE,MATH,EAUK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVL,EAWK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKP,YAAY,CAACyB,IAAlB,MAXL,EAYG,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAGrB,OAAjB;AAA0B,MAAA,OAAO,EAAIF,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZH,EAaG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIG,QAAJ,CAbH,CADD;AAiBD;;AAxC+B;;AA0ClC,eAAeR,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Video from './Video';\n\nclass MovieInfo extends Component {\n\n  componentDidMount() {\n  }\n\n  render() {\n  \tlet currentMovie = this.props.currentMovie\n    let videoId = this.props.trailer\n    let fullSrc = 'https://www.youtube.com/embed/' + this.props.trailer\n    let errorMsg\n\n    if (videoId === \"kJQP7kiw5Fk\"){\n      errorMsg = \"due to an issue with this sites connection to youtube the trailer can not be viewed at this time\";\n      this.props.handler(\"default\")\n    }\n    else{\n      this.props.handler(videoId)\n    }\n\n  \tconst ratings = currentMovie.Ratings.map((rating, index) =>(\n  \t\t<li  key={index}>» {rating.Source}: {rating.Value} «</li>  \n \t  ));    \n\n    return (\n    \t<div className = \"show_Movie\" >\n        <img className= \"selected_Movie\" alt={currentMovie.Title} src={currentMovie.Poster}></img>\n          <h4> Rated: {currentMovie.Rated}</h4>   \n          <h4> Year: {currentMovie.Year}</h4> \n          <h4> Genre: {currentMovie.Genre} </h4>\n          <h5> Actors: {currentMovie.Actors} </h5>\n          <h5> Director: {currentMovie.Director} </h5>\n          <h5> Awards: {currentMovie.Awards} </h5>\n\t\t    <h4> Ratings </h4>\n        <ul style={{display: 'inline',margin: 40, listStyle: 'none'}}> {ratings} </ul>\n          <h4> Plot</h4>\n          <h5>{currentMovie.Plot} </h5>\n        <Video fullSrc= {fullSrc} videoId = {videoId}/>\n        <p>{errorMsg}</p>        \n      </div>\n    )\n  }\n}\nexport default MovieInfo;\n\n"]},"metadata":{},"sourceType":"module"}