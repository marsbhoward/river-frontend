{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/InfoPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTrailers } from '../actions/trailerActions';\nimport MovieInfo from '../components/MovieInfo';\n\nclass InfoPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, \"Loading Movies...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \"loaded\"));\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.currentMovie.Title);\n    this.props.fetchTrailers(this.props.currentMovie.Title);\n  }\n\n  render() {\n    return React.createElement(MovieInfo, {\n      currentMovie: this.props.currentMovie,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    trailer: state.TrailersReducer.trailer,\n    loading: state.TrailersReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  fetchTrailers\n})(InfoPage);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/InfoPage.js"],"names":["React","Component","connect","fetchTrailers","MovieInfo","InfoPage","handleLoading","props","loading","componentDidMount","console","log","currentMovie","Title","render","mapDispatchToProps","state","trailer","TrailersReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAM/BK,aAN+B,GAMf,MAAM;AACpB,UAAG,KAAKC,KAAL,CAAWC,OAAd,EAAuB;AACrB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACD,OAFD,MAEO;AACL,eACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,CADA;AAKD;AACF,KAhB8B;AAAA;;AAC/BC,EAAAA,iBAAiB,GAAG;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWK,YAAX,CAAwBC,KAApC;AACA,SAAKN,KAAL,CAAWJ,aAAX,CAAyB,KAAKI,KAAL,CAAWK,YAAX,CAAwBC,KAAjD;AACC;;AAcDC,EAAAA,MAAM,GAAG;AACP,WACC,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKP,KAAL,CAAWK,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAGD;;AAtB8B;;AAyBjC,MAAMG,kBAAkB,GAAGC,KAAK,IAAI;AAClC,SAAO;AACLC,IAAAA,OAAO,EAAED,KAAK,CAACE,eAAN,CAAsBD,OAD1B;AAELT,IAAAA,OAAO,EAAEQ,KAAK,CAACE,eAAN,CAAsBV;AAF1B,GAAP;AAID,CALD;;AAOA,eAAeN,OAAO,CAACa,kBAAD,EAAqB;AAACZ,EAAAA;AAAD,CAArB,CAAP,CAA6CE,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTrailers } from '../actions/trailerActions'\nimport MovieInfo from '../components/MovieInfo';\n\nclass InfoPage extends Component {  \n  componentDidMount() {\n  console.log(this.props.currentMovie.Title)\n  this.props.fetchTrailers(this.props.currentMovie.Title)\n  }\n\n  handleLoading = () => {\n    if(this.props.loading) {\n      return <div>Loading Movies...</div>\n    } else {\n      return (\n      <div>\n      <h1>loaded</h1>\n      </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n    \t<MovieInfo currentMovie={this.props.currentMovie}/>\n \t);\n  }\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    trailer: state.TrailersReducer.trailer,\n    loading: state.TrailersReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {fetchTrailers})(InfoPage)"]},"metadata":{},"sourceType":"module"}