{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/searchbox.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { listMovies } from '../actions/movieActions';\nimport MoviesList from './MoviesList';\nimport { Auth0Context } from \"../react-auth0-spa\";\nimport { findDOMNode } from 'react-dom';\nimport $ from 'jquery';\nlet moviesList;\nlet count = 0; //close sereach area if input box lose fousand input box is empty\n\nclass Searchbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getStuff = () => {\n      let theSearchState = '';\n      let theSetClass = '';\n\n      if (this.props.sBoxOpenState === false) {\n        theSearchState = /*#__PURE__*/React.createElement(\"p\", {\n          className: \"searchBar\",\n          onClick: this.handleClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 23\n          }\n        }, \" Search \");\n      } else {\n        theSearchState = /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          id: \"name-input\",\n          className: \"searchBar\",\n          placeholder: \"Search by title\",\n          onClick: this.props.pointer,\n          onChange: e => this.searchMovie(e),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 23\n          }\n        });\n        theSetClass = 'searchBackground';\n      }\n\n      return [theSearchState, theSetClass];\n    };\n\n    this.handleClick = () => {\n      this.props.resetCount(); //this.setState({open:true})\n      //console.log(this.state.open)\n    };\n\n    this.loseFocus = () => {\n      console.log(\"lost focus\");\n      this.props.resetCount();\n    };\n\n    this.searchMovie = event => {\n      let keyword = event.target.value.toLowerCase();\n      this.setState({\n        search: keyword\n      });\n    };\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return ' ';\n      } else {\n        if (this.props.movieCards === undefined) {\n          window.location.reload();\n        }\n\n        let movieList;\n        movieList = this.props.movieCards.filter(movieCard => {\n          if (this.state.search.length >= 3) {\n            return movieCard;\n          } else {\n            moviesList = '';\n          }\n        }).map((movie, index) => {\n          moviesList = this.props.movieCards.map((movie, index) => {\n            return /*#__PURE__*/React.createElement(MoviesList, {\n              key: index,\n              search: this.state.search,\n              movie: movie,\n              movieID: index + 1,\n              cardStyle: \"height: -webkit-fill-available; overflow: hidden;\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 18\n              }\n            });\n          });\n        });\n      }\n    };\n\n    this.state = {\n      search: '',\n      MoiveData: \"\",\n      searchState: '',\n      setClass: ''\n    };\n  }\n\n  handleStuff() {\n    let results = this.getStuff();\n    this.setState({\n      searchState: results[0],\n      setClass: results[1]\n    });\n  }\n\n  componentDidMount() {\n    this.props.listMovies();\n    this.handleStuff();\n  }\n\n  componentDidUpdate() {\n    console.log(this.props.sBoxCount);\n\n    if (this.props.sBoxCount < 1) {\n      this.handleStuff();\n      this.props.addCount();\n    }\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n\n      /* onClick={() => this.loseFocus(this.props.target)} */\n      React.createElement(\"div\", {\n        className: \"searchBar\",\n        onClick: this.props.pointer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 5\n        }\n      }, this.state.searchState, this.handleLoading(), /*#__PURE__*/React.createElement(\"div\", {\n        onClick: this.props.pointer,\n        onBlur: () => this.loseFocus(),\n        className: this.state.setClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-list\",\n        onClick: this.props.pointer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }, moviesList)))\n    );\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    loading: state.MoviesReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  listMovies\n})(Searchbox);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/searchbox.js"],"names":["React","Component","connect","listMovies","MoviesList","Auth0Context","findDOMNode","$","moviesList","count","Searchbox","constructor","props","getStuff","theSearchState","theSetClass","sBoxOpenState","handleClick","pointer","e","searchMovie","resetCount","loseFocus","console","log","event","keyword","target","value","toLowerCase","setState","search","handleLoading","loading","movieCards","undefined","window","location","reload","movieList","filter","movieCard","state","length","map","movie","index","MoiveData","searchState","setClass","handleStuff","results","componentDidMount","componentDidUpdate","sBoxCount","addCount","render","mapDispatchToProps","MoviesReducer","movies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { listMovies } from '../actions/movieActions'\nimport MoviesList from './MoviesList';\nimport { Auth0Context } from \"../react-auth0-spa\";\nimport { findDOMNode } from 'react-dom';\nimport $ from 'jquery'; \n\nlet  moviesList\nlet count = 0\n//close sereach area if input box lose fousand input box is empty\n\nclass Searchbox extends Component {\n constructor(props){\n    super(props);\n\n    this.state={\n      search:'',\n      MoiveData: \"\",\n      searchState: '',\n      setClass: '',\n      \n    };\n  }\n\n  getStuff=()=>{\n    let theSearchState =''\n    let theSetClass = ''\n    if (this.props.sBoxOpenState === false){\n      theSearchState= <p className={\"searchBar\"} onClick={this.handleClick}> Search </p>\n      } \n    else{\n      theSearchState= <input type=\"text\" id=\"name-input\" className=\"searchBar\" placeholder=\"Search by title\" onClick={this.props.pointer} onChange={(e)=>this.searchMovie(e)} />\n      theSetClass= 'searchBackground'\n      }\n    return [theSearchState, theSetClass]\n  }\n\n  handleStuff(){\n    let results = this.getStuff()\n    this.setState({\n      searchState: results[0],\n      setClass: results[1]\n    }) \n  }\n\n  componentDidMount() {\n    \n    this.props.listMovies()\n    this.handleStuff()\n  }\n\n  componentDidUpdate(){\n    console.log(this.props.sBoxCount)\n    if (this.props.sBoxCount < 1){\n      this.handleStuff()\n      this.props.addCount()\n    }\n  }\n\n\n  handleClick=()=>{\n    this.props.resetCount()\n    //this.setState({open:true})\n    //console.log(this.state.open)\n  }\n\n  loseFocus=()=>{\n    console.log(\"lost focus\")\n    this.props.resetCount()\n  }\n\n  searchMovie=(event)=>{\n    let keyword = event.target.value.toLowerCase();\n    this.setState({search:keyword})\n    \n  }  \t\n\n  handleLoading = () => {\n    if(this.props.loading) {\n      return ' '\n    } \n    else {\n      if (this.props.movieCards === undefined){\n        window.location.reload();\n      } \n      let movieList\n    \n\n      movieList = this.props.movieCards.filter(movieCard=>{\n      if(this.state.search.length >= 3 ){\n            return movieCard\n      }\n      else{\n        moviesList = ''\n      }        \n      }).map((movie,index)=>{\n        moviesList = this.props.movieCards.map((movie, index) => {\n          return <MoviesList key={index} search={this.state.search}  movie={movie} movieID={(index+1)} cardStyle='height: -webkit-fill-available;\n          overflow: hidden;'/>\n        })\n      })\n    }\n  }\n\n  render(){\n  \treturn(\n      /* onClick={() => this.loseFocus(this.props.target)} */\n  \t\t<div className=\"searchBar\" onClick={this.props.pointer} >\n  \t\t\t{this.state.searchState}\n  \t\t\t{this.handleLoading()}\n        <div onClick={this.props.pointer} onBlur= {() => this.loseFocus()} className={this.state.setClass} >\n          <div className=\"search-list\" onClick={this.props.pointer}>\n              {moviesList}\n          </div>\n        </div>\n  \t\t</div>\n  \t)\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    loading: state.MoviesReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {listMovies})(Searchbox)"]},"metadata":{},"sourceType":"module"}