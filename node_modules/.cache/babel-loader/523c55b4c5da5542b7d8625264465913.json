{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river/frontend/app/src/containers/MoviesPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../actions/movieActions';\nimport { fetchStreams } from '../actions/streamActions';\nimport MovieList from '../components/MovieList';\n\nclass MoviesPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, \"Loading Movies...\");\n      } else {\n        return React.createElement(MovieList, {\n          movieCards: this.props.movieCards,\n          currentStream: this.props.currentStream,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(this);\n    this.props.fetchMovies();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Movies\"), this.handleLoading());\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    currentStream: state.StreamsReducer.currentStream,\n    loading: state.MoviesReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  fetchMovies\n})(MoviesPage);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river/frontend/app/src/containers/MoviesPage.js"],"names":["React","Component","connect","fetchMovies","fetchStreams","MovieList","MoviesPage","handleLoading","props","loading","movieCards","currentStream","componentDidMount","console","log","render","mapDispatchToProps","state","MoviesReducer","movies","StreamsReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAGA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAOjCM,aAPiC,GAOjB,MAAM;AACpB,UAAG,KAAKC,KAAL,CAAWC,OAAd,EAAuB;AACrB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACD,OAFD,MAEO;AACL,eAAO,oBAAC,SAAD;AAAW,UAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE,UAAlC;AAA8C,UAAA,aAAa,EAAE,KAAKF,KAAL,CAAWG,aAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KAbgC;AAAA;;AAEjCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACE,SAAKN,KAAL,CAAWL,WAAX;AACH;;AAUDY,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG,KAAKR,aAAL,EAFH,CADF;AAMD;;AAtBgC;;AA2BnC,MAAMS,kBAAkB,GAAGC,KAAK,IAAI;AAClC,SAAO;AACLP,IAAAA,UAAU,EAAEO,KAAK,CAACC,aAAN,CAAoBC,MAD3B;AAELR,IAAAA,aAAa,EAAGM,KAAK,CAACG,cAAN,CAAqBT,aAFhC;AAGLF,IAAAA,OAAO,EAAEQ,KAAK,CAACC,aAAN,CAAoBT;AAHxB,GAAP;AAKD,CAND;;AAQA,eAAeP,OAAO,CAACc,kBAAD,EAAqB;AAACb,EAAAA;AAAD,CAArB,CAAP,CAA2CG,UAA3C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../actions/movieActions'\nimport { fetchStreams } from '../actions/streamActions'\nimport MovieList from '../components/MovieList'\n\n\nclass MoviesPage extends Component {   \n  \n  componentDidMount() {\n    console.log(this)\n      this.props.fetchMovies()\n  }\n  \n  handleLoading = () => {\n    if(this.props.loading) {\n      return <div>Loading Movies...</div>\n    } else {\n      return <MovieList movieCards={this.props.movieCards} currentStream={this.props.currentStream} />\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Movies</h1>\n        {this.handleLoading()}\n      </div>\n    );\n  }\n}\n\n\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    currentStream : state.StreamsReducer.currentStream,\n    loading: state.MoviesReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {fetchMovies})(MoviesPage)"]},"metadata":{},"sourceType":"module"}