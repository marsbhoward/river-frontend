{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river/frontend/app/src/containers/StreamsPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../actions/streamActions';\nimport StreamList from '../components/StreamList';\n\nclass StreamsPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(StreamList, {\n          streamInfo: this.props.streamInfo,\n          currentStream: this.props.currentStream,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Streams\"), this.handleLoading());\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    streamInfo: state.streams,\n    currentStream: state.currentStream,\n    loading: state.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  fetchStreams\n})(StreamsPage);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river/frontend/app/src/containers/StreamsPage.js"],"names":["React","Component","connect","fetchStreams","StreamList","StreamsPage","handleLoading","props","loading","streamInfo","currentStream","componentDidMount","render","mapDispatchToProps","state","streams"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAGA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAMlCK,aANkC,GAMlB,MAAM;AACpB,UAAG,KAAKC,KAAL,CAAWC,OAAd,EAAuB;AACrB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,OAFD,MAEO;AACL,eAAO,oBAAC,UAAD;AAAY,UAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE,UAAnC;AAA+C,UAAA,aAAa,EAAE,KAAKF,KAAL,CAAWG,aAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KAZiC;AAAA;;AAElCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,KAAL,CAAWJ,YAAX;AACD;;AAUDS,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEG,KAAKN,aAAL,EAFH,CADF;AAMD;;AArBiC;;AA0BpC,MAAMO,kBAAkB,GAAGC,KAAK,IAAI;AAClC,SAAO;AACLL,IAAAA,UAAU,EAAEK,KAAK,CAACC,OADb;AAELL,IAAAA,aAAa,EAAEI,KAAK,CAACJ,aAFhB;AAGLF,IAAAA,OAAO,EAAEM,KAAK,CAACN;AAHV,GAAP;AAKD,CAND;;AAQA,eAAeN,OAAO,CAACW,kBAAD,EAAqB;AAAEV,EAAAA;AAAF,CAArB,CAAP,CAA8CE,WAA9C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../actions/streamActions'\nimport StreamList from '../components/StreamList'\n\n\nclass StreamsPage extends Component {   \n  \n  componentDidMount() {\n    this.props.fetchStreams()\n  }\n  \n  handleLoading = () => {\n    if(this.props.loading) {\n      return <div>Loading...</div>\n    } else {\n      return <StreamList streamInfo={this.props.streamInfo} currentStream={this.props.currentStream} />\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Streams</h1>\n        {this.handleLoading()}\n      </div>\n    );\n  }\n}\n\n\n\nconst mapDispatchToProps = state => {\n  return {\n    streamInfo: state.streams,\n    currentStream: state.currentStream,\n    loading: state.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, { fetchStreams })(StreamsPage)"]},"metadata":{},"sourceType":"module"}