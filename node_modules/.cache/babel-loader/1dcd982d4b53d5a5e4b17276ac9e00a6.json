{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/InfoPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTrailers } from '../actions/trailerActions';\nimport MovieInfo from '../components/MovieInfo';\n\nclass InfoPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, \"Loading Movies...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(MovieInfo, {\n          currentMovie: this.props.currentMovie,\n          trailer: this.props.trailer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }));\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(this);\n    this.props.fetchTrailers(this.props.currentMovie.Title);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"MovieInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.handleLoading());\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    trailer: state.TrailersReducer.trailers,\n    loading: state.TrailersReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  fetchTrailers\n})(InfoPage);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/InfoPage.js"],"names":["React","Component","connect","fetchTrailers","MovieInfo","InfoPage","handleLoading","props","loading","currentMovie","trailer","componentDidMount","console","log","Title","render","mapDispatchToProps","state","TrailersReducer","trailers"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAM/BK,aAN+B,GAMf,MAAM;AACpB,UAAG,KAAKC,KAAL,CAAWC,OAAd,EAAuB;AACrB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACD,OAFD,MAEO;AACL,eACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,SAAD;AAAW,UAAA,YAAY,EAAE,KAAKD,KAAL,CAAWE,YAApC;AAAkD,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CADA;AAKD;AACF,KAhB8B;AAAA;;AAC/BC,EAAAA,iBAAiB,GAAG;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,SAAKN,KAAL,CAAWJ,aAAX,CAAyB,KAAKI,KAAL,CAAWE,YAAX,CAAwBK,KAAjD;AACC;;AAcDC,EAAAA,MAAM,GAAG;AACP,WACA;AAAK,MAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKT,aAAL,EADF,CADA;AAKD;;AAxB8B;;AA2BjC,MAAMU,kBAAkB,GAAGC,KAAK,IAAI;AAClC,SAAO;AACLP,IAAAA,OAAO,EAAEO,KAAK,CAACC,eAAN,CAAsBC,QAD1B;AAELX,IAAAA,OAAO,EAAES,KAAK,CAACC,eAAN,CAAsBV;AAF1B,GAAP;AAID,CALD;;AAOA,eAAeN,OAAO,CAACc,kBAAD,EAAqB;AAACb,EAAAA;AAAD,CAArB,CAAP,CAA6CE,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTrailers } from '../actions/trailerActions'\nimport MovieInfo from '../components/MovieInfo';\n\nclass InfoPage extends Component {  \n  componentDidMount() {\n  console.log(this)\n  this.props.fetchTrailers(this.props.currentMovie.Title)\n  }\n\n  handleLoading = () => {\n    if(this.props.loading) {\n      return <div>Loading Movies...</div>\n    } else {\n      return (\n      <div>\n      <MovieInfo currentMovie={this.props.currentMovie} trailer={this.props.trailer}/>\n      </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n    <div className= \"MovieInfo\">\n    \t{this.handleLoading()}\n\t</div>\n \t);\n  }\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    trailer: state.TrailersReducer.trailers,\n    loading: state.TrailersReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {fetchTrailers})(InfoPage)"]},"metadata":{},"sourceType":"module"}