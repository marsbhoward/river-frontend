{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/DarkmodeSwitch.js\";\nimport React, { useState, useEffect } from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nconst DarkmodeSwitch = props => {\n  const [count, setCount] = useState([0]);\n  const [state, setState] = useState({\n    checkedA: true,\n    checkedB: true\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const PurpleSwitch = withStyles({\n    switchBase: {\n      color: purple[300],\n      '&$checked': {\n        color: purple[500]\n      },\n      '&$checked + $track': {\n        backgroundColor: purple[500]\n      }\n    },\n    checked: {},\n    track: {}\n  })(Switch);\n  return /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: state.checkedB,\n      onChange: handleChange,\n      color: \"primary\",\n      name: \"checkedB\",\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }),\n    label: \"Darkmode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default DarkmodeSwitch;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/DarkmodeSwitch.js"],"names":["React","useState","useEffect","FormGroup","FormControlLabel","Switch","DarkmodeSwitch","props","count","setCount","state","setState","checkedA","checkedB","handleChange","event","target","name","checked","PurpleSwitch","withStyles","switchBase","color","purple","backgroundColor","track"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBR,QAAQ,CAAC,CAAC,CAAD,CAAD,CAAjC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC;AAC/BW,IAAAA,QAAQ,EAAE,IADqB;AAE/BC,IAAAA,QAAQ,EAAE;AAFqB,GAAD,CAAlC;;AAKA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5BJ,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACK,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAA9C,KAAD,CAAR;AACD,GAFH;;AAIA,QAAMC,YAAY,GAAGC,UAAU,CAAC;AAChCC,IAAAA,UAAU,EAAE;AACRC,MAAAA,KAAK,EAAEC,MAAM,CAAC,GAAD,CADL;AAER,mBAAa;AACbD,QAAAA,KAAK,EAAEC,MAAM,CAAC,GAAD;AADA,OAFL;AAKR,4BAAsB;AACtBC,QAAAA,eAAe,EAAED,MAAM,CAAC,GAAD;AADD;AALd,KADoB;AAUhCL,IAAAA,OAAO,EAAE,EAVuB;AAWhCO,IAAAA,KAAK,EAAE;AAXyB,GAAD,CAAV,CAYlBpB,MAZkB,CAArB;AAcE,sBACE,oBAAC,gBAAD;AACA,IAAA,OAAO,eACH,oBAAC,MAAD;AACA,MAAA,OAAO,EAAEK,KAAK,CAACG,QADf;AAEA,MAAA,QAAQ,EAAEC,YAFV;AAGA,MAAA,KAAK,EAAC,SAHN;AAIA,MAAA,IAAI,EAAC,UAJL;AAKA,MAAA,UAAU,EAAE;AAAE,sBAAc;AAAhB,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAWA,IAAA,KAAK,EAAC,UAXN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAgBL,CAzCD;;AA4CA,eAAeR,cAAf","sourcesContent":["import React,{ useState, useEffect } from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\n\nconst DarkmodeSwitch = (props) => { \n    const [count, setCount]= useState([0]);\n    const [state, setState] = useState({\n        checkedA: true,\n        checkedB: true,\n    });\n\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n      };\n    \n    const PurpleSwitch = withStyles({\n    switchBase: {\n        color: purple[300],\n        '&$checked': {\n        color: purple[500],\n        },\n        '&$checked + $track': {\n        backgroundColor: purple[500],\n        },\n    },\n    checked: {},\n    track: {},\n    })(Switch);      \n\n      return (\n        <FormControlLabel\n        control={\n            <Switch\n            checked={state.checkedB}\n            onChange={handleChange}\n            color=\"primary\"\n            name=\"checkedB\"\n            inputProps={{ 'aria-label': 'primary checkbox' }}\n          />\n          \n        }\n        label=\"Darkmode\"\n      />\n      );\n          \n}\n\n\nexport default DarkmodeSwitch"]},"metadata":{},"sourceType":"module"}