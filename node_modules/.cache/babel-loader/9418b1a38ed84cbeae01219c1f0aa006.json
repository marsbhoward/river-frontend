{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/ProfilePage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserStreams } from '../actions/userStreamActions';\nimport { fetchStreams } from '../actions/streamActions';\nimport Profile from '../components/Profile';\n\nclass ProfilePage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.fetchUserStreams = () => {\n      this.props.fetchUserStreams(1);\n    };\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"Loading Profile...\");\n      } else {\n        return;\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"return \", React.createElement(Profile, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }), \"return \", React.createElement(StreamList, {\n          streamInfo: this.props.streamInfo,\n          currentStream: this.props.currentStream,\n          handler: this.handler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }));\n      }\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps) {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.handleLoading());\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    trailer: state.StreamsReducer.trailer,\n    loading: state.StreamsReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  fetchUserStreams\n})(ProfilePage);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/ProfilePage.js"],"names":["React","Component","connect","fetchUserStreams","fetchStreams","Profile","ProfilePage","props","handleLoading","loading","streamInfo","currentStream","handler","componentDidMount","componentDidUpdate","prevProps","render","mapDispatchToProps","state","trailer","StreamsReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAQlCE,gBARkC,GAQf,MAAM;AACxB,WAAKI,KAAL,CAAWJ,gBAAX,CAA4B,CAA5B;AACA,KAViC;;AAAA,SAalCK,aAbkC,GAalB,MAAM;AACpB,UAAG,KAAKD,KAAL,CAAWE,OAAd,EACA;AACE,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACD,OAHD,MAIK;AACH;AAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACQ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADR,aAEQ,oBAAC,UAAD;AAAY,UAAA,UAAU,EAAE,KAAKF,KAAL,CAAWG,UAAnC;AAA+C,UAAA,aAAa,EAAE,KAAKH,KAAL,CAAWI,aAAzE;AAAwF,UAAA,OAAO,EAAE,KAAKC,OAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR,CADF;AAMD;AACF,KA3BiC;AAAA;;AAElCC,EAAAA,iBAAiB,GAAG,CACnB;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAW,CAC5B;;AAuBDC,EAAAA,MAAM,GAAG;AACP,WACC;AAAK,MAAA,SAAS,EAAE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD,KAAKR,aAAL,EADC,CADD;AAKD;;AAnCiC;;AAsCpC,MAAMS,kBAAkB,GAAGC,KAAK,IAAI;AAClC,SAAO;AACLC,IAAAA,OAAO,EAAED,KAAK,CAACE,cAAN,CAAqBD,OADzB;AAELV,IAAAA,OAAO,EAAES,KAAK,CAACE,cAAN,CAAqBX;AAFzB,GAAP;AAID,CALD;;AAOA,eAAeP,OAAO,CAACe,kBAAD,EAAqB;AAACd,EAAAA;AAAD,CAArB,CAAP,CAAgDG,WAAhD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserStreams } from '../actions/userStreamActions'\nimport { fetchStreams } from '../actions/streamActions'\nimport Profile from '../components/Profile';\n\nclass ProfilePage extends Component {  \n  \n  componentDidMount() {\n  }\n\n  componentDidUpdate(prevProps){\n  }\n\n  fetchUserStreams = () => {\n  \tthis.props.fetchUserStreams(1)\n  }\n\n\n  handleLoading = () => {\n    if(this.props.loading) \n    {\n      return <div>Loading Profile...</div>\n    } \n    else {\n      return \n      (\n        <div>\n         return <Profile/>\n         return <StreamList streamInfo={this.props.streamInfo} currentStream={this.props.currentStream} handler={this.handler}/>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n    \t<div className= \"Profile\">\n\t\t\t{this.handleLoading()}\n\t\t</div>\t\t\t\n \t);\n  }\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    trailer: state.StreamsReducer.trailer,\n    loading: state.StreamsReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {fetchUserStreams})(ProfilePage)"]},"metadata":{},"sourceType":"module"}