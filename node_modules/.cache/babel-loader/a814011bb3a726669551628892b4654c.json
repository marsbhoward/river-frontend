{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/InfoPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTrailers } from '../actions/trailerActions';\nimport MovieInfo from '../components/MovieInfo';\n\nclass InfoPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.fetchTrailer = () => {\n      this.props.fetchTrailers(this.props.currentMovie.Title, this.props.currentMovie.Year);\n      console.log(this.props.trailer);\n    };\n\n    this.handler = () => {\n      this.props.fetchTrailers(this.props.currentMovie.Title);\n    };\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"Loading Movies...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(MovieInfo, {\n          currentMovie: this.props.currentMovie,\n          trailer: this.props.trailer,\n          handler: this.handler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.fetchTrailer();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.currentMovie.Title !== prevProps.currentMovie.Title) {\n      this.fetchTrailer();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"banner-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.props.currentMovie.Title.toUpperCase()), this.handleLoading());\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    trailer: state.TrailersReducer.trailer,\n    loading: state.TrailersReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  fetchTrailers\n})(InfoPage);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/InfoPage.js"],"names":["React","Component","connect","fetchTrailers","MovieInfo","InfoPage","fetchTrailer","props","currentMovie","Title","Year","console","log","trailer","handler","handleLoading","loading","componentDidMount","componentDidUpdate","prevProps","render","toUpperCase","mapDispatchToProps","state","TrailersReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAa/BK,YAb+B,GAahB,MAAM;AACpB,WAAKC,KAAL,CAAWJ,aAAX,CAAyB,KAAKI,KAAL,CAAWC,YAAX,CAAwBC,KAAjD,EAAuD,KAAKF,KAAL,CAAWC,YAAX,CAAwBE,IAA/E;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWM,OAAvB;AACD,KAhB8B;;AAAA,SAkB/BC,OAlB+B,GAkBrB,MAAM;AACd,WAAKP,KAAL,CAAWJ,aAAX,CAAyB,KAAKI,KAAL,CAAWC,YAAX,CAAwBC,KAAjD;AACD,KApB8B;;AAAA,SAsB/BM,aAtB+B,GAsBf,MAAM;AACpB,UAAG,KAAKR,KAAL,CAAWS,OAAd,EACA;AACE,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACD,OAHD,MAIK;AACH,eACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,oBAAC,SAAD;AAAW,UAAA,YAAY,EAAE,KAAKT,KAAL,CAAWC,YAApC;AAAkD,UAAA,OAAO,EAAE,KAAKD,KAAL,CAAWM,OAAtE;AAA+E,UAAA,OAAO,EAAE,KAAKC,OAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,CADD;AAKD;AACF,KAlC8B;AAAA;;AAE/BG,EAAAA,iBAAiB,GAAG;AACnB,SAAKX,YAAL;AACA;;AAEDY,EAAAA,kBAAkB,CAACC,SAAD,EAAW;AAC5B,QAAI,KAAKZ,KAAL,CAAWC,YAAX,CAAwBC,KAAxB,KAAkCU,SAAS,CAACX,YAAV,CAAuBC,KAA7D,EACA;AACC,WAAKH,YAAL;AACA;AACD;;AAyBDc,EAAAA,MAAM,GAAG;AACP,WACA;AAAK,MAAA,SAAS,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKb,KAAL,CAAWC,YAAX,CAAwBC,KAAxB,CAA8BY,WAA9B,EAA3B,CADD,EAEE,KAAKN,aAAL,EAFF,CADA;AAMD;;AA3C8B;;AA8CjC,MAAMO,kBAAkB,GAAGC,KAAK,IAAI;AAClC,SAAO;AACLV,IAAAA,OAAO,EAAEU,KAAK,CAACC,eAAN,CAAsBX,OAD1B;AAELG,IAAAA,OAAO,EAAEO,KAAK,CAACC,eAAN,CAAsBR;AAF1B,GAAP;AAID,CALD;;AAOA,eAAed,OAAO,CAACoB,kBAAD,EAAqB;AAACnB,EAAAA;AAAD,CAArB,CAAP,CAA6CE,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTrailers } from '../actions/trailerActions'\nimport MovieInfo from '../components/MovieInfo';\n\nclass InfoPage extends Component {  \n  \n  componentDidMount() {\n  \tthis.fetchTrailer()\n  }\n\n  componentDidUpdate(prevProps){\n  \tif (this.props.currentMovie.Title !== prevProps.currentMovie.Title)\n  \t{\n  \t\tthis.fetchTrailer()\n  \t}\n  }\n\n  fetchTrailer = () => {\n  \tthis.props.fetchTrailers(this.props.currentMovie.Title,this.props.currentMovie.Year)\n    console.log(this.props.trailer)\n  }\n\n  handler = () => {\n    this.props.fetchTrailers(this.props.currentMovie.Title)\n  }\n\n  handleLoading = () => {\n    if(this.props.loading) \n    {\n      return <div>Loading Movies...</div>\n    } \n    else {\n      return (\n      \t<div>\n      \t\t<MovieInfo currentMovie={this.props.currentMovie} trailer={this.props.trailer} handler={this.handler}/>\n      \t</div>\n      )\n    }\n  }\n\n  render() {\n    return (\n    <div className= \"Info\">\n    \t<div className=\"banner-3\">{this.props.currentMovie.Title.toUpperCase()}</div>\n    \t{this.handleLoading()}\n\t</div>\n \t);\n  }\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    trailer: state.TrailersReducer.trailer,\n    loading: state.TrailersReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {fetchTrailers})(InfoPage)"]},"metadata":{},"sourceType":"module"}