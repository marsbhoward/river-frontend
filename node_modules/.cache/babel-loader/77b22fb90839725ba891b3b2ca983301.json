{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/searchbox.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { listMovies } from '../actions/movieActions';\nimport MoviesList from './MoviesList';\nimport { Auth0Context } from \"../react-auth0-spa\";\nimport { findDOMNode } from 'react-dom';\nimport $ from 'jquery';\nlet moviesList;\n\nclass Searchbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getStuff = () => {\n      let theSearchState = '';\n      let theSetClass = '';\n\n      if (this.props.sBoxOpenState === false) {\n        theSearchState = /*#__PURE__*/React.createElement(\"p\", {\n          className: \"searchBar\",\n          onClick: this.handleClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 23\n          }\n        }, \" Search \");\n        this.setState({\n          search: ''\n        });\n      } else {\n        theSearchState = /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          id: \"name-input\",\n          className: \"searchBar\",\n          placeholder: \"Search by title\",\n          onClick: this.props.pointer,\n          onChange: e => this.searchMovie(e),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 23\n          }\n        });\n        theSetClass = 'searchBackground';\n      }\n\n      return [theSearchState, theSetClass];\n    };\n\n    this.handleClick = () => {\n      this.props.resetCount(); //this.setState({open:true})\n      //console.log(this.state.open)\n    };\n\n    this.searchMovie = event => {\n      let keyword = event.target.value.toLowerCase();\n      this.setState({\n        search: keyword\n      });\n    };\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return ' ';\n      } else {\n        if (this.props.movieCards === undefined) {\n          window.location.reload();\n        }\n\n        this.props.movieCards.filter(movieCard => {\n          if (movieCard.include(this.state.search)) {\n            if (this.state.search.length >= 3) {\n              moviesList = this.props.movieCards.map((movie, index) => {\n                return /*#__PURE__*/React.createElement(MoviesList, {\n                  key: index,\n                  search: this.state.search,\n                  movie: movie,\n                  movieID: index + 1,\n                  cardStyle: \"height: -webkit-fill-available; overflow: hidden;\",\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 20\n                  }\n                });\n              });\n            }\n          } else {\n            moviesList = '';\n          }\n        });\n      }\n    };\n\n    this.state = {\n      search: '',\n      MoiveData: \"\",\n      searchState: '',\n      setClass: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.listMovies();\n    this.handleStuff();\n  }\n\n  componentDidUpdate() {\n    if (this.props.sBoxCount < 1) {\n      this.handleStuff();\n      this.props.addCount();\n    }\n  }\n\n  handleStuff() {\n    let results = this.getStuff();\n    this.setState({\n      searchState: results[0],\n      setClass: results[1]\n    });\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n\n      /* onClick={() => this.loseFocus(this.props.target)} */\n\n      /* need to find faster way to clear search state. possibly render only if not blank*/\n      React.createElement(\"div\", {\n        className: \"searchBar\",\n        onClick: this.props.pointer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 5\n        }\n      }, this.state.searchState, this.handleLoading(), /*#__PURE__*/React.createElement(\"div\", {\n        onClick: this.props.pointer,\n        onClick: this.handleClick,\n        className: this.state.setClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-list\",\n        onClick: this.props.pointer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, moviesList)))\n    );\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    loading: state.MoviesReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  listMovies\n})(Searchbox);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/searchbox.js"],"names":["React","Component","connect","listMovies","MoviesList","Auth0Context","findDOMNode","$","moviesList","Searchbox","constructor","props","getStuff","theSearchState","theSetClass","sBoxOpenState","handleClick","setState","search","pointer","e","searchMovie","resetCount","event","keyword","target","value","toLowerCase","handleLoading","loading","movieCards","undefined","window","location","reload","filter","movieCard","include","state","length","map","movie","index","MoiveData","searchState","setClass","componentDidMount","handleStuff","componentDidUpdate","sBoxCount","addCount","results","render","mapDispatchToProps","MoviesReducer","movies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { listMovies } from '../actions/movieActions'\nimport MoviesList from './MoviesList';\nimport { Auth0Context } from \"../react-auth0-spa\";\nimport { findDOMNode } from 'react-dom';\nimport $ from 'jquery'; \n\nlet  moviesList\n\n\nclass Searchbox extends Component {\n constructor(props){\n    super(props);\n\n    this.state={\n      search:'',\n      MoiveData: \"\",\n      searchState: '',\n      setClass: '',\n      \n    };\n  }\n\n\n  componentDidMount() {\n    \n    this.props.listMovies()\n    this.handleStuff()\n  }\n\n  componentDidUpdate(){\n    if (this.props.sBoxCount < 1){\n      this.handleStuff()\n      this.props.addCount()\n    }\n  }\n\n  getStuff=()=>{\n    let theSearchState =''\n    let theSetClass = ''\n    if (this.props.sBoxOpenState === false){\n      theSearchState= <p className={\"searchBar\"} onClick={this.handleClick}> Search </p>\n      this.setState({search: ''})\n      } \n    else{\n      theSearchState= <input type=\"text\" id=\"name-input\" className=\"searchBar\" placeholder=\"Search by title\" onClick={this.props.pointer} onChange={(e)=>this.searchMovie(e)} />\n      theSetClass= 'searchBackground'\n      }\n    return [theSearchState, theSetClass]\n  }\n\n  handleStuff(){\n    let results = this.getStuff()\n    this.setState({\n      searchState: results[0],\n      setClass: results[1]\n    }) \n  }\n\n\n  handleClick=()=>{\n    this.props.resetCount()\n    //this.setState({open:true})\n    //console.log(this.state.open)\n  }\n\n  searchMovie=(event)=>{\n    let keyword = event.target.value.toLowerCase();\n    this.setState({search:keyword})\n    \n  }  \t\n\n  handleLoading = () => {\n    if(this.props.loading) {\n      return ' '\n    } \n    else {\n      if (this.props.movieCards === undefined){\n        window.location.reload();\n      } \n    \n\n      this.props.movieCards.filter(movieCard=> {\n      if (movieCard.include(this.state.search)){\n        if(this.state.search.length >= 3 ){\n          moviesList = this.props.movieCards.map((movie, index) => {\n            return <MoviesList key={index} search={this.state.search}  movie={movie} movieID={(index+1)} cardStyle='height: -webkit-fill-available;\n            overflow: hidden;'/>})\n        }\n      }\n      else{\n        moviesList = ''\n      }        \n      })\n    }\n  }\n\n  render(){\n  \treturn(\n      /* onClick={() => this.loseFocus(this.props.target)} */\n      /* need to find faster way to clear search state. possibly render only if not blank*/\n  \t\t<div className=\"searchBar\" onClick={this.props.pointer} >  \n  \t\t\t{this.state.searchState}\n  \t\t\t{this.handleLoading()}\n        <div onClick={this.props.pointer} onClick={this.handleClick}  className={this.state.setClass} >\n          <div className=\"search-list\" onClick={this.props.pointer}>\n              {moviesList}\n          </div>\n        </div>\n  \t\t</div>\n  \t)\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    loading: state.MoviesReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {listMovies})(Searchbox)"]},"metadata":{},"sourceType":"module"}