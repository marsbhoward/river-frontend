{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/MoviesPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../actions/movieActions';\nimport MovieList from '../components/MovieList';\n\nfunction MoviesPage(props) {\n  const [clicked, setCliked] = useState('');\n  useEffect(() => {\n    console.log(props);\n    props.fetchMovies(localStorage.currentStream);\n  });\n\n  function handleLoading() {\n    if (this.props.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Loading Movies...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(MovieList, {\n        streamID: this.props.handler,\n        movieCards: this.props.movieCards,\n        movieIds: this.props.movieIds,\n        trailerID: this.trailerID,\n        currentStream: this.currentStream,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"banner-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, localStorage.currentStreamName.toUpperCase()), this.handleLoading());\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies.sort(),\n    movieIds: state.MoviesReducer.ids,\n    loading: state.MoviesReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  fetchMovies\n})(MoviesPage);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/MoviesPage.js"],"names":["React","useState","useEffect","connect","fetchMovies","MovieList","MoviesPage","props","clicked","setCliked","console","log","localStorage","currentStream","handleLoading","loading","handler","movieCards","movieIds","trailerID","currentStreamName","toUpperCase","mapDispatchToProps","state","MoviesReducer","movies","sort","ids"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAE1B,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBR,QAAQ,CAAC,EAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAA,IAAAA,KAAK,CAACH,WAAN,CAAkBQ,YAAY,CAACC,aAA/B;AACD,GAHQ,CAAT;;AAMA,WAASC,aAAT,GAAyB;AACvB,QAAG,KAAKP,KAAL,CAAWQ,OAAd,EAAuB;AACrB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACD,KAFD,MAEO;AACL,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWS,OAAhC;AAAyC,QAAA,UAAU,EAAE,KAAKT,KAAL,CAAWU,UAAhE;AAA4E,QAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWW,QAAjG;AAA2G,QAAA,SAAS,EAAE,KAAKC,SAA3H;AAAsI,QAAA,aAAa,EAAE,KAAKN,aAA1J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADA;AAKD;AACF;;AAGC,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BD,YAAY,CAACQ,iBAAb,CAA+BC,WAA/B,EAA3B,CADF,EAEG,KAAKP,aAAL,EAFH,CADF;AAMD;;AAKH,MAAMQ,kBAAkB,GAAGC,KAAK,IAAI;AAClC,SAAO;AACLN,IAAAA,UAAU,EAAEM,KAAK,CAACC,aAAN,CAAoBC,MAApB,CAA2BC,IAA3B,EADP;AAELR,IAAAA,QAAQ,EAAEK,KAAK,CAACC,aAAN,CAAoBG,GAFzB;AAGLZ,IAAAA,OAAO,EAAEQ,KAAK,CAACC,aAAN,CAAoBT;AAHxB,GAAP;AAKD,CAND;;AAQA,eAAeZ,OAAO,CAACmB,kBAAD,EAAqB;AAAClB,EAAAA;AAAD,CAArB,CAAP,CAA2CE,UAA3C,CAAf","sourcesContent":["import React,{ useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../actions/movieActions'\nimport MovieList from '../components/MovieList'\n\nfunction MoviesPage (props) { \n\n  const [clicked, setCliked] = useState('');  \n\n  useEffect(() => {\n    console.log(props)\n    props.fetchMovies(localStorage.currentStream)\n  });    \n\n  \n  function handleLoading (){\n    if(this.props.loading) {\n      return <div>Loading Movies...</div>\n    } else {\n      return (\n      <div>\n      <MovieList streamID={this.props.handler} movieCards={this.props.movieCards} movieIds={this.props.movieIds} trailerID={this.trailerID} currentStream={this.currentStream}/>\n      </div>\n      )\n    }\n  }\n\n  \n    return (\n      <div className=\"App\">\n        <div className=\"banner-2\">{localStorage.currentStreamName.toUpperCase()}</div>\n        {this.handleLoading()}\n      </div>\n    );\n  }\n\n\n\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies.sort(),\n    movieIds: state.MoviesReducer.ids,\n    loading: state.MoviesReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {fetchMovies})(MoviesPage)"]},"metadata":{},"sourceType":"module"}