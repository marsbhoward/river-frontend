{"ast":null,"code":"var stream = [];\nvar movies = [];\n\nclass Streams {\n  constructor(name) {\n    this.name = name;\n  }\n\n}\n\nclass Movies {\n  constructor(title, time) {\n    this.title = title;\n  }\n\n}\n\nfunction fetchStreams() {\n  adapter.getStreams().then(streams => retireveStreams(streams, stream));\n}\n\nfunction retireveStreams(list, streams) {\n  streams = list.map(stream => {\n    return new Streams(stream.name);\n  });\n  console.log(streams);\n  return streams;\n}\n\nfunction fetchMovies() {\n  adapter.getMovies(1).then(movies => retireveMovies(movies));\n}\n\nfunction retireveMovies(list) {\n  let movieList = [];\n  list.forEach(movie => {\n    movieList.push(movie);\n  });\n  movies = movieList;\n}\n\nfunction exec() {\n  fetchStreams();\n  fetchMovies();\n}\n\nexec();\nexport default movies;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/data.js"],"names":["stream","movies","Streams","constructor","name","Movies","title","time","fetchStreams","adapter","getStreams","then","streams","retireveStreams","list","map","console","log","fetchMovies","getMovies","retireveMovies","movieList","forEach","movie","push","exec"],"mappings":"AAEA,IAAIA,MAAM,GAAG,EAAb;AACA,IAAIC,MAAM,GAAG,EAAb;;AAMA,MAAMC,OAAN,CAAa;AACZC,EAAAA,WAAW,CAACC,IAAD,EAAM;AAChB,SAAKA,IAAL,GAAYA,IAAZ;AACA;;AAHW;;AAMb,MAAMC,MAAN,CAAY;AACXF,EAAAA,WAAW,CAACG,KAAD,EAAOC,IAAP,EAAY;AACtB,SAAKD,KAAL,GAAaA,KAAb;AACA;;AAHU;;AAOZ,SAASE,YAAT,GAAuB;AACpBC,EAAAA,OAAO,CAACC,UAAR,GACCC,IADD,CACMC,OAAO,IAAIC,eAAe,CAACD,OAAD,EAASZ,MAAT,CADhC;AAEA;;AAEF,SAASa,eAAT,CAAyBC,IAAzB,EAA8BF,OAA9B,EAAsC;AAEpCA,EAAAA,OAAO,GAAGE,IAAI,CAACC,GAAL,CAASf,MAAM,IAAG;AAC1B,WAAO,IAAIE,OAAJ,CAAYF,MAAM,CAACI,IAAnB,CAAP;AACD,GAFS,CAAV;AAKAY,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,SAAOA,OAAP;AACA;;AAED,SAASM,WAAT,GAAsB;AACrBT,EAAAA,OAAO,CAACU,SAAR,CAAkB,CAAlB,EACCR,IADD,CACMV,MAAM,IAAImB,cAAc,CAACnB,MAAD,CAD9B;AAEA;;AAEA,SAASmB,cAAT,CAAwBN,IAAxB,EAA6B;AAE9B,MAAIO,SAAS,GAAG,EAAhB;AACCP,EAAAA,IAAI,CAACQ,OAAL,CAAaC,KAAK,IAAG;AACnBF,IAAAA,SAAS,CAACG,IAAV,CAAeD,KAAf;AAED,GAHD;AAIAtB,EAAAA,MAAM,GAAGoB,SAAT;AACA;;AAGH,SAASI,IAAT,GACA;AACCjB,EAAAA,YAAY;AACZU,EAAAA,WAAW;AAEX;;AAGDO,IAAI;AAEJ,eAAexB,MAAf","sourcesContent":["\n\nvar stream = [];\nvar movies = [];\n\n\n\n\n\nclass Streams{\n\tconstructor(name){\n\t\tthis.name = name;\n\t}\n}\n\nclass Movies{\n\tconstructor(title,time){\n\t\tthis.title = title;\n\t}\n}\n\n\t \nfunction fetchStreams(){\n  \tadapter.getStreams()\n  \t.then(streams => retireveStreams(streams,stream))\n  }\n\n function retireveStreams(list,streams){\n\n  \tstreams = list.map(stream=> {\n    \treturn new Streams(stream.name);\n  \t});\n  \t\n \n  \tconsole.log(streams);\n  \treturn streams\n  }\n\n  function fetchMovies(){\n  \tadapter.getMovies(1)\n  \t.then(movies => retireveMovies(movies))\n  }\n\n   function retireveMovies(list){\n \t\n \tlet movieList = [];\n  \tlist.forEach(movie=> {\n    \tmovieList.push(movie);\n    \n  \t});\n  \tmovies = movieList;\n  }\n\n\nfunction exec()\n{\n\tfetchStreams()\n\tfetchMovies()\t\n\n}\n\n\nexec();\n\nexport default movies"]},"metadata":{},"sourceType":"module"}