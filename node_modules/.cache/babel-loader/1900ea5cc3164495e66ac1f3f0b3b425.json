{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/searchbox.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { listMovies } from '../actions/movieActions';\nimport MoviesList from './MoviesList';\nlet moviesList;\n\nclass Searchbox extends Component {\n  constructor() {\n    super();\n\n    this.searchMovie = event => {\n      let keyword = event.target.value;\n      this.setState({\n        search: keyword\n      });\n    };\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"Loading Titles...\");\n      } else {\n        console.log(this.state.search);\n        let movieList;\n        movieList = this.props.movieCards.filter(movie => {\n          if (this.state.search === '') {\n            return \"\";\n          } else if (this.state.search.length > 3 && movie.slug.toLowerCase().includes(this.state.search.toLowerCase())) {}\n        }).map((movie, index) => {\n          moviesList = this.props.movieCards.map((movie, index) => {\n            return React.createElement(MoviesList, {\n              key: index,\n              search: this.state.search,\n              movie: movie,\n              movieID: index + 1,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45\n              },\n              __self: this\n            });\n          });\n        });\n      }\n    };\n\n    this.state = {\n      search: '',\n      MoiveData: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.listMovies();\n    console.log(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name-input\",\n      className: \"input\",\n      placeholder: \"Search by title\",\n      onChange: e => this.searchMovie(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), this.handleLoading(), React.createElement(\"div\", {\n      className: \"movie-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, moviesList));\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    loading: state.MoviesReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  listMovies\n})(Searchbox);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/searchbox.js"],"names":["React","Component","connect","listMovies","MoviesList","moviesList","Searchbox","constructor","searchMovie","event","keyword","target","value","setState","search","handleLoading","props","loading","console","log","state","movieList","movieCards","filter","movie","length","slug","toLowerCase","includes","map","index","MoiveData","componentDidMount","render","e","mapDispatchToProps","MoviesReducer","movies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { listMovies } from '../actions/movieActions'\nimport MoviesList from './MoviesList';\n\nlet  moviesList\n\nclass Searchbox extends Component {\n constructor(){\n    super();\n\n    this.state={\n      search:'',\n      MoiveData: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.listMovies()\n    console.log(this)\n  }\n\n  searchMovie=(event)=>{\n    let keyword = event.target.value;\n    this.setState({search:keyword})\n    \n  }  \t\n\n  handleLoading = () => {\n    if(this.props.loading) {\n      return <div>Loading Titles...</div>\n    } \n    else {\n      console.log(this.state.search)  \n      let movieList\n      movieList = this.props.movieCards.filter((movie)=>{\n      if(this.state.search === ''){    \n            return \"\"\n      }\n      else if(this.state.search.length > 3 && movie.slug.toLowerCase().includes(this.state.search.toLowerCase())){\n      \n      }        \n      }).map((movie,index)=>{\n        moviesList = this.props.movieCards.map((movie, index) => {\n          return <MoviesList key={index} search={this.state.search}  movie={movie} movieID={(index+1)}/>\n        })\n      })\n    }\n  }\n\n  render(){\n  \treturn(\n  \t\t<div>\n  \t\t\t<input type=\"text\" id='name-input' className=\"input\" placeholder=\"Search by title\"  onChange={(e)=>this.searchMovie(e)} />\n  \t\t\t{this.handleLoading()}\n        <div className=\"movie-list\">\n            {moviesList}\n        </div>\n  \t\t</div>\n  \t)\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    loading: state.MoviesReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {listMovies})(Searchbox)"]},"metadata":{},"sourceType":"module"}