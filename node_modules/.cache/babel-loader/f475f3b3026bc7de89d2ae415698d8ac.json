{"ast":null,"code":"const URL = \"http://localhost:3000/\";\nlet streamList = [];\nconst adapter = {\n  getStreams: () => {\n    return fetch(`${URL}/streams`).then(resp => resp.json());\n  },\n  getMovies: stream_id => {\n    return fetch(`${URL}/streams/${stream_id}/movies`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => resp.json());\n  },\n\n  retireveStreams(list) {\n    list.forEach(stream => {\n      streamList.push(stream);\n    });\n    return streamList;\n  }\n\n};\nadapter.getStreams();\nadapter.fetchStreams();\nlet movies_list = [{\n  title: 'Doctor Strange',\n  time: 115,\n  genres: ['Action', 'Adventure', 'Fantasy'],\n  metascore: 74\n}, {\n  title: 'Trolls',\n  time: 92,\n  genres: ['Animation', 'Adventure', 'Comedy', 'Family', 'Fantasy']\n}, {\n  title: 'Jack Reacher: Never Go Back',\n  time: 118,\n  genres: ['Action', 'Adventure', 'Crime', 'Mystery', 'Thriller']\n}];\n\nfunction fetchStreams() {\n  adapter.getStreams().then(streams => retireveStreams(streams));\n}\n\nlet streams = streamList;\nlet movies = movies_list;\nconsole.log(movies);\nconsole.log(streams);\nconsole.log(Object.keys(movies).length);\nconsole.log(Object.keys(streams).length);\nmodule.exports = {\n  streams,\n  movies\n};","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/data.js"],"names":["URL","streamList","adapter","getStreams","fetch","then","resp","json","getMovies","stream_id","headers","retireveStreams","list","forEach","stream","push","fetchStreams","movies_list","title","time","genres","metascore","streams","movies","console","log","Object","keys","length","module","exports"],"mappings":"AAAA,MAAMA,GAAG,GAAG,wBAAZ;AACA,IAAIC,UAAU,GAAG,EAAjB;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,UAAU,EAAE,MAAM;AAChB,WAAOC,KAAK,CAAE,GAAEJ,GAAI,UAAR,CAAL,CACNK,IADM,CACDC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADP,CAAP;AAED,GAJa;AAMdC,EAAAA,SAAS,EAAGC,SAAD,IAAe;AACxB,WAAOL,KAAK,CAAE,GAAEJ,GAAI,YAAWS,SAAU,SAA7B,EAAsC;AAChDC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AADuC,KAAtC,CAAL,CAGNL,IAHM,CAGDC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAHP,CAAP;AAID,GAXa;;AAafI,EAAAA,eAAe,CAACC,IAAD,EAAM;AACpBA,IAAAA,IAAI,CAACC,OAAL,CAAaC,MAAM,IAAG;AACpBb,MAAAA,UAAU,CAACc,IAAX,CAAgBD,MAAhB;AACD,KAFD;AAGA,WAAOb,UAAP;AACC;;AAlBa,CAAhB;AAuBCC,OAAO,CAACC,UAAR;AACAD,OAAO,CAACc,YAAR;AAEC,IAAIC,WAAW,GAAG,CAClB;AACEC,EAAAA,KAAK,EAAE,gBADT;AAEEC,EAAAA,IAAI,EAAE,GAFR;AAGEC,EAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,WAAX,EAAwB,SAAxB,CAHV;AAIEC,EAAAA,SAAS,EAAE;AAJb,CADkB,EAOlB;AACEH,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,IAAI,EAAE,EAFR;AAGEC,EAAAA,MAAM,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,QAA3B,EAAqC,QAArC,EAA+C,SAA/C;AAHV,CAPkB,EAYlB;AACEF,EAAAA,KAAK,EAAE,6BADT;AAEEC,EAAAA,IAAI,EAAE,GAFR;AAGEC,EAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,WAAX,EAAwB,OAAxB,EAAiC,SAAjC,EAA4C,UAA5C;AAHV,CAZkB,CAAlB;;AAoBF,SAASJ,YAAT,GAAuB;AACpBd,EAAAA,OAAO,CAACC,UAAR,GACCE,IADD,CACMiB,OAAO,IAAIX,eAAe,CAACW,OAAD,CADhC;AAEA;;AAEH,IAAIA,OAAO,GAAGrB,UAAd;AACA,IAAIsB,MAAM,GAAIN,WAAd;AACAO,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAC,OAAO,CAACC,GAAR,CAAYH,OAAZ;AAGAE,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,MAAhC;AACAJ,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYL,OAAZ,EAAqBM,MAAjC;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfR,EAAAA,OADe;AAEfC,EAAAA;AAFe,CAAjB","sourcesContent":["const URL = \"http://localhost:3000/\"\nlet streamList = [];\n\nconst adapter = {\n  getStreams: () => {\n    return fetch(`${URL}/streams`)\n    .then(resp => resp.json())\n  },\n\n  getMovies: (stream_id) => {\n    return fetch(`${URL}/streams/${stream_id}/movies`,{\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n    .then(resp => resp.json())\n  },\n\n retireveStreams(list){\n  list.forEach(stream=> {  \n    streamList.push(stream);\n  });\n  return streamList\n  }\t\n}\n\n\n\n\tadapter.getStreams();\n\tadapter.fetchStreams();\t\n\t \n\t let movies_list = [\n  {\n    title: 'Doctor Strange',\n    time: 115,\n    genres: ['Action', 'Adventure', 'Fantasy'],\n    metascore: 74\n  },\n  {\n    title: 'Trolls',\n    time: 92,\n    genres: ['Animation', 'Adventure', 'Comedy', 'Family', 'Fantasy']\n  },\n  {\n    title: 'Jack Reacher: Never Go Back',\n    time: 118,\n    genres: ['Action', 'Adventure', 'Crime', 'Mystery', 'Thriller']\n  }\n]\n\n\nfunction fetchStreams(){\n  \tadapter.getStreams()\n  \t.then(streams => retireveStreams(streams))\n  }\n\nlet streams = streamList\nlet movies  = movies_list\t\nconsole.log(movies)\nconsole.log(streams)\n\n\nconsole.log(Object.keys(movies).length)\nconsole.log(Object.keys(streams).length)\n\nmodule.exports = {\n  streams,\n  movies\n}"]},"metadata":{},"sourceType":"module"}