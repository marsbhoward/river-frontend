{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/searchbox.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { listMovies } from '../actions/movieActions';\nimport Movie from './Movie';\n\nclass Searchbox extends Component {\n  constructor() {\n    super();\n\n    this.searchMovie = event => {\n      console.log(this.state.search);\n      let keyword = event.target.value;\n      this.setState({\n        search: keyword\n      });\n    };\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"Loading Titles...\");\n      } else {\n        let movieList;\n        movieList = this.props.movieCards.filter(movie => {\n          if (this.state.search === '') {\n            return React.createElement(\"h1\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37\n              },\n              __self: this\n            }, \"movie\");\n          } else if (movie.title.toLowerCase().includes(this.state.search.toLowerCase())) {\n            return movie;\n          }\n        }).map((movie, index) => {\n          let moviesList = this.props.movieCards.map((movie, index) => {\n            return React.createElement(Movie, {\n              key: index,\n              movie: movie,\n              movieID: index + 1,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45\n              },\n              __self: this\n            });\n          });\n          return React.createElement(\"div\", {\n            className: \"movie-list\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, moviesList);\n        });\n      }\n    };\n\n    this.state = {\n      search: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.listMovies();\n    console.log(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name-input\",\n      className: \"input\",\n      placeholder: \"Search by title\",\n      onChange: e => this.searchMovie(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), this.handleLoading());\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    loading: state.MoviesReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  listMovies\n})(Searchbox);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/searchbox.js"],"names":["React","Component","connect","listMovies","Movie","Searchbox","constructor","searchMovie","event","console","log","state","search","keyword","target","value","setState","handleLoading","props","loading","movieList","movieCards","filter","movie","title","toLowerCase","includes","map","index","moviesList","componentDidMount","render","e","mapDispatchToProps","MoviesReducer","movies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { listMovies } from '../actions/movieActions'\nimport Movie from './Movie';\n\nclass Searchbox extends Component {\n constructor(){\n    super();\n\n    this.state={\n      search:'',\n    };\n  }\n\n  componentDidMount() {\n    this.props.listMovies()\n    console.log(this)\n  }\n\n  searchMovie=(event)=>{\n    console.log(this.state.search)\n    let keyword = event.target.value;\n    this.setState({search:keyword})\n    \n  }  \t\n\n  handleLoading = () => {\n    if(this.props.loading) {\n      return <div>Loading Titles...</div>\n    } \n    else {\n      \n    let movieList\n       movieList = this.props.movieCards.filter((movie)=>{\n      if(this.state.search === ''){\n          \n            return <h1>movie</h1>\n          \n      }\n      else if(movie.title.toLowerCase().includes(this.state.search.toLowerCase())){\n            return movie\n      }        \n      }).map((movie,index)=>{\n        let  moviesList = this.props.movieCards.map((movie, index) => {\n        return <Movie key={index} movie={movie} movieID={(index+1)}/>\n      })\n      \n      return (\n        <div className=\"movie-list\">\n            {moviesList}\n        </div>\n      )\n      })\n    }\n  }\n\n  render(){\n  \treturn(\n  \t\t<div>\n  \t\t\t<input type=\"text\" id='name-input' className=\"input\" placeholder=\"Search by title\"  onChange={(e)=>this.searchMovie(e)} />\n  \t\t\t{this.handleLoading()}\n  \t\t</div>\n  \t)\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    loading: state.MoviesReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {listMovies})(Searchbox)"]},"metadata":{},"sourceType":"module"}