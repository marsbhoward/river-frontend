{"ast":null,"code":"import adapter from './adapter';\nconst currentStreams = {\n  streams: []\n};\nvar streamsList = [{\n  name: \"netflix\"\n}, {\n  name: \"hulu\"\n}, {\n  name: \"amazon\"\n}, {\n  name: \"hbo\"\n}, {\n  name: \"showtime\"\n}];\nvar getPokemonList = new Promise((resolve, reject) => {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", \"https://pokeapi.co/api/v2/pokemon/?limit=4\");\n\n  xhr.onload = () => resolve(JSON.parse(xhr.responseText));\n\n  xhr.onerror = () => reject(xhr.statusText);\n\n  xhr.send();\n});\nvar getPokemonListDetails = getPokemonList.then(function (fulfilledList) {\n  console.log(fulfilledList.results);\n  var pokemonList = [];\n  setTimeout(() => {\n    fulfilledList.results.forEach(function (pokemon) {\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", pokemon.url);\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n          pokemonList.push(JSON.parse(xhr.responseText));\n        }\n      };\n\n      xhr.send();\n    });\n  }, 3000);\n  return pokemonList;\n}).then(function (fulfilledListDetails) {\n  console.log(fulfilledListDetails);\n}).catch(function (error) {\n  console.log(error.message);\n});\nexport default streamsList;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/data.js"],"names":["adapter","currentStreams","streams","streamsList","name","getPokemonList","Promise","resolve","reject","xhr","XMLHttpRequest","open","onload","JSON","parse","responseText","onerror","statusText","send","getPokemonListDetails","then","fulfilledList","console","log","results","pokemonList","setTimeout","forEach","pokemon","url","onreadystatechange","readyState","push","fulfilledListDetails","catch","error","message"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AAEA,MAAMC,cAAc,GAAG;AACtBC,EAAAA,OAAO,EAAE;AADa,CAAvB;AAGA,IAAIC,WAAW,GAAG,CAClB;AAACC,EAAAA,IAAI,EAAE;AAAP,CADkB,EAElB;AAACA,EAAAA,IAAI,EAAE;AAAP,CAFkB,EAGlB;AAACA,EAAAA,IAAI,EAAE;AAAP,CAHkB,EAIlB;AAACA,EAAAA,IAAI,EAAE;AAAP,CAJkB,EAMlB;AAACA,EAAAA,IAAI,EAAE;AAAP,CANkB,CAAlB;AASA,IAAIC,cAAc,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAClD,QAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACAD,EAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAgB,4CAAhB;;AACAF,EAAAA,GAAG,CAACG,MAAJ,GAAa,MAAML,OAAO,CAACM,IAAI,CAACC,KAAL,CAAWL,GAAG,CAACM,YAAf,CAAD,CAA1B;;AACAN,EAAAA,GAAG,CAACO,OAAJ,GAAc,MAAMR,MAAM,CAACC,GAAG,CAACQ,UAAL,CAA1B;;AACAR,EAAAA,GAAG,CAACS,IAAJ;AACH,CANoB,CAArB;AAQA,IAAIC,qBAAqB,GAAGd,cAAc,CACrCe,IADuB,CAClB,UAAUC,aAAV,EAAyB;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,aAAa,CAACG,OAA1B;AACA,MAAIC,WAAW,GAAG,EAAlB;AACAC,EAAAA,UAAU,CAAC,MAAM;AACbL,IAAAA,aAAa,CAACG,OAAd,CAAsBG,OAAtB,CAA8B,UAAUC,OAAV,EAAmB;AAC7C,YAAMnB,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AACAD,MAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAgBiB,OAAO,CAACC,GAAxB;;AACApB,MAAAA,GAAG,CAACqB,kBAAJ,GAAyB,YAAY;AACjC,YAAIrB,GAAG,CAACsB,UAAJ,KAAmB,CAAvB,EAA0B;AACtBN,UAAAA,WAAW,CAACO,IAAZ,CAAiBnB,IAAI,CAACC,KAAL,CAAWL,GAAG,CAACM,YAAf,CAAjB;AACH;AACJ,OAJD;;AAKAN,MAAAA,GAAG,CAACS,IAAJ;AACH,KATD;AAUH,GAXS,EAWP,IAXO,CAAV;AAYA,SAAOO,WAAP;AACH,CAjBuB,EAkBvBL,IAlBuB,CAkBlB,UAAUa,oBAAV,EAAgC;AAClCX,EAAAA,OAAO,CAACC,GAAR,CAAYU,oBAAZ;AACH,CApBuB,EAqBvBC,KArBuB,CAqBjB,UAAUC,KAAV,EAAiB;AACpBb,EAAAA,OAAO,CAACC,GAAR,CAAYY,KAAK,CAACC,OAAlB;AACH,CAvBuB,CAA5B;AAyBA,eAAejC,WAAf","sourcesContent":["import adapter from './adapter'\n\nconst currentStreams = {\n\tstreams: [],\n};\nvar streamsList = [\n{name: \"netflix\"},\n{name: \"hulu\"},\n{name: \"amazon\"},\n{name: \"hbo\"},\n\n{name: \"showtime\"}];\n\n\nvar getPokemonList = new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", \"https://pokeapi.co/api/v2/pokemon/?limit=4\");\n    xhr.onload = () => resolve(JSON.parse(xhr.responseText));\n    xhr.onerror = () => reject(xhr.statusText);\n    xhr.send();\n});\n\nvar getPokemonListDetails = getPokemonList\n    .then(function (fulfilledList) {\n        console.log(fulfilledList.results);\n        var pokemonList = [];\n        setTimeout(() => {\n            fulfilledList.results.forEach(function (pokemon) {\n                const xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", pokemon.url);\n                xhr.onreadystatechange = function () {\n                    if (xhr.readyState === 4) {\n                        pokemonList.push(JSON.parse(xhr.responseText));\n                    }\n                };\n                xhr.send();\n            });\n        }, 3000); \n        return pokemonList;\n    })\n    .then(function (fulfilledListDetails) {\n        console.log(fulfilledListDetails);\n    })\n    .catch(function (error) {\n        console.log(error.message);\n    });\n\nexport default streamsList"]},"metadata":{},"sourceType":"module"}