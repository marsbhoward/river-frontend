{"ast":null,"code":"const URL = \"http://localhost:3000/\";\nconst adapter = {\n  getStreams: () => {\n    return fetch(`${URL}/games`).then(resp => resp.json());\n  },\n  getMovies: stream_id => {\n    return fetch(`${URL}/streams/${stream_id}/movies`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => resp.json());\n  }\n};\n\nfunction fetchStreams() {\n  getStreams().then(streams => retireveStreams(streams));\n}\n\nfunction retireveStreams(streams) {\n  let streamList = [];\n  streams.forEach(stream => {\n    streamList.push(stream);\n  });\n  return streamList;\n}\n\nlet streams = fetchStreams();\nmodule.exports = {\n  streams\n};","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/data.js"],"names":["URL","adapter","getStreams","fetch","then","resp","json","getMovies","stream_id","headers","fetchStreams","streams","retireveStreams","streamList","forEach","stream","push","module","exports"],"mappings":"AAAA,MAAMA,GAAG,GAAG,wBAAZ;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,UAAU,EAAE,MAAM;AAChB,WAAOC,KAAK,CAAE,GAAEH,GAAI,QAAR,CAAL,CACNI,IADM,CACDC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADP,CAAP;AAED,GAJa;AAMdC,EAAAA,SAAS,EAAGC,SAAD,IAAe;AACxB,WAAOL,KAAK,CAAE,GAAEH,GAAI,YAAWQ,SAAU,SAA7B,EAAsC;AAChDC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AADuC,KAAtC,CAAL,CAGNL,IAHM,CAGDC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAHP,CAAP;AAID;AAXa,CAAhB;;AAeA,SAASI,YAAT,GAAuB;AACrBR,EAAAA,UAAU,GACTE,IADD,CACMO,OAAO,IAAIC,eAAe,CAACD,OAAD,CADhC;AAED;;AAED,SAAUC,eAAV,CAA0BD,OAA1B,EAAkC;AAChC,MAAIE,UAAU,GAAG,EAAjB;AACAF,EAAAA,OAAO,CAACG,OAAR,CAAgBC,MAAM,IAAG;AACvBF,IAAAA,UAAU,CAACG,IAAX,CAAgBD,MAAhB;AACD,GAFD;AAGA,SAAOF,UAAP;AACD;;AAED,IAAIF,OAAO,GAAGD,YAAY,EAA1B;AAEAO,MAAM,CAACC,OAAP,GAAiB;AACfP,EAAAA;AADe,CAAjB","sourcesContent":["const URL = \"http://localhost:3000/\"\n\nconst adapter = {\n  getStreams: () => {\n    return fetch(`${URL}/games`)\n    .then(resp => resp.json())\n  },\n\n  getMovies: (stream_id) => {\n    return fetch(`${URL}/streams/${stream_id}/movies`,{\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n    .then(resp => resp.json())\n  },\n\n}\n\nfunction fetchStreams(){\n  getStreams()\n  .then(streams => retireveStreams(streams))\n}\n\nfunction  retireveStreams(streams){\n  let streamList = [];\n  streams.forEach(stream=> {    \n    streamList.push(stream);  \n  });\n  return streamList;\n}\n\nlet streams = fetchStreams()\n\nmodule.exports = {\n  streams\n}"]},"metadata":{},"sourceType":"module"}