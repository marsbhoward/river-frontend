{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/MoviesPage.js\";\nimport React, { useState, useEffect } from 'react'; //import { connect } from 'react-redux';\n\nimport { fetchMovies } from '../actions/movieActions';\nimport MovieList from '../components/MovieList';\nimport { useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch, useStore } from 'react-redux';\n\nconst MoviesPage = props => {\n  const movieData = useSelector(state => state.MoviesReducer.movies, []) || [];\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const [clicked, setCliked] = useState('');\n  useEffect(() => {\n    dispatch(fetchMovies(props.handler));\n\n    if (location.state !== undefined) {\n      setCliked(location.state.clicked);\n    }\n  }, []); //dispatch({type: 'LOADING_MOVIES'})\n  //props.fetchMovies(localStorage.currentStream)\n  //console.log(props)\n  //console.log(movieData)\n  //console.log(dispatch(fetchMovies(localStorage.currentStream)))\n  //<MovieList streamID={props.handler} movieCards={props.movieCards} movieIds={props.movieIds} trailerID={props.trailerID} currentStream={props.currentStream}/>\n\n  function handleLoading() {\n    if (props.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Loading Movies...\");\n    } else {\n      console.log(dispatch(fetchMovies(props.handler)));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, movieData.results && movieData.results.map(movie => React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Data\")));\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"banner-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, localStorage.currentStreamName.toUpperCase()), handleLoading());\n};\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies.sort(),\n    movieIds: state.MoviesReducer.ids,\n    loading: state.MoviesReducer.loading\n  };\n};\n\nexport default MoviesPage;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/MoviesPage.js"],"names":["React","useState","useEffect","fetchMovies","MovieList","useLocation","useSelector","useDispatch","useStore","MoviesPage","props","movieData","state","MoviesReducer","movies","dispatch","location","clicked","setCliked","handler","undefined","handleLoading","loading","console","log","results","map","movie","localStorage","currentStreamName","toUpperCase","mapDispatchToProps","movieCards","sort","movieIds","ids"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C,C,CACA;;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,QAAnC,QAAmD,aAAnD;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,SAAS,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,aAAN,CAAoBC,MAA9B,EAAsC,EAAtC,CAAX,IAAwD,EAA1E;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM,CAACY,OAAD,EAAUC,SAAV,IAAuBjB,QAAQ,CAAC,EAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACZ,WAAW,CAACO,KAAK,CAACS,OAAP,CAAZ,CAAR;;AAEE,QAAIH,QAAQ,CAACJ,KAAT,KAAmBQ,SAAvB,EAAiC;AAC/BF,MAAAA,SAAS,CAACF,QAAQ,CAACJ,KAAT,CAAeK,OAAhB,CAAT;AACD;AACF,GANM,EAMJ,EANI,CAAT,CAN4B,CAa1B;AACA;AACA;AACA;AACA;AAIF;;AACA,WAASI,aAAT,GAAyB;AACvB,QAAGX,KAAK,CAACY,OAAT,EAAkB;AAEhB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACD,KAHD,MAGO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACZ,WAAW,CAACO,KAAK,CAACS,OAAP,CAAZ,CAApB;AACA,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIR,SAAS,CAACc,OAAV,IAAqBd,SAAS,CAACc,OAAV,CAAkBC,GAAlB,CAAsBC,KAAK,IAC9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADmB,CADzB,CADA;AAOD;AACF;;AAGC,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BC,YAAY,CAACC,iBAAb,CAA+BC,WAA/B,EAA3B,CADF,EAEGT,aAAa,EAFhB,CADF;AAMD,CA7CH;;AAkDA,MAAMU,kBAAkB,GAAGnB,KAAK,IAAI;AAClC,SAAO;AACLoB,IAAAA,UAAU,EAAEpB,KAAK,CAACC,aAAN,CAAoBC,MAApB,CAA2BmB,IAA3B,EADP;AAELC,IAAAA,QAAQ,EAAEtB,KAAK,CAACC,aAAN,CAAoBsB,GAFzB;AAGLb,IAAAA,OAAO,EAAEV,KAAK,CAACC,aAAN,CAAoBS;AAHxB,GAAP;AAKD,CAND;;AAQA,eAAeb,UAAf","sourcesContent":["import React,{ useState, useEffect } from 'react';\n//import { connect } from 'react-redux';\nimport { fetchMovies } from '../actions/movieActions'\nimport MovieList from '../components/MovieList'\nimport { useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch, useStore } from 'react-redux'\n\nconst MoviesPage = (props) => { \n  const movieData = useSelector(state => state.MoviesReducer.movies, []) || []; \n  const dispatch = useDispatch();\n  const location = useLocation();\n  const [clicked, setCliked] = useState('');  \n\n  useEffect(() => {\n    dispatch(fetchMovies(props.handler));\n\n      if (location.state !== undefined){\n        setCliked(location.state.clicked)\n      }\n    }, []);\n    //dispatch({type: 'LOADING_MOVIES'})\n    //props.fetchMovies(localStorage.currentStream)\n    //console.log(props)\n    //console.log(movieData)\n    //console.log(dispatch(fetchMovies(localStorage.currentStream)))\n  \n\n\n  //<MovieList streamID={props.handler} movieCards={props.movieCards} movieIds={props.movieIds} trailerID={props.trailerID} currentStream={props.currentStream}/>\n  function handleLoading (){\n    if(props.loading) {\n\n      return <div>Loading Movies...</div>\n    } else {\n      console.log(dispatch(fetchMovies(props.handler)))\n      return (\n      <div>\n        { movieData.results && movieData.results.map(movie => (\n            <h1>Data</h1>\n        ))}      \n      </div>\n      )\n    }\n  }\n\n  \n    return (\n      <div className=\"App\">\n        <div className=\"banner-2\">{localStorage.currentStreamName.toUpperCase()}</div>\n        {handleLoading()}\n      </div>\n    );\n  }\n\n\n\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies.sort(),\n    movieIds: state.MoviesReducer.ids,\n    loading: state.MoviesReducer.loading\n  }\n}\n\nexport default(MoviesPage)"]},"metadata":{},"sourceType":"module"}