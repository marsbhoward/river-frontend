{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/StreamInput.js\";\nimport React, { Component } from 'react';\nimport { addStream } from '../actions';\nimport { connect } from 'react-redux';\nimport adapter from '../adapter';\nlet listOfStreams = adapter.getStreams().then(streamsList => streamsList);\nexport class StreamInput extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      streamsList: []\n    };\n\n    this.handleOnChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleOnSubmit = event => {\n      event.preventDefault();\n      const book = { ...this.state\n      };\n      this.props.addStream(stream);\n      this.setState({\n        title: '',\n        authorName: ''\n      });\n    };\n  }\n\n  componentDidMount() {\n    listOfStreams.then(json => this.setState({\n      streamsList: json\n    }));\n  }\n\n  render() {\n    const resArr = this.state.streamsList.map((r, i) => {\n      return React.createElement(\"p\", {\n        className: \"stream\",\n        id: r.name,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, r.name);\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, resArr);\n  }\n\n}\nexport default connect(null, {\n  addBook\n})(BookInput);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/StreamInput.js"],"names":["React","Component","addStream","connect","adapter","listOfStreams","getStreams","then","streamsList","StreamInput","state","handleOnChange","event","setState","target","name","value","handleOnSubmit","preventDefault","book","props","stream","title","authorName","componentDidMount","json","render","resArr","map","r","i","addBook","BookInput"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEE,IAAIC,aAAa,GAAGD,OAAO,CAACE,UAAR,GACnBC,IADmB,CACdC,WAAW,IAAIA,WADD,CAApB;AAIA,OAAO,MAAMC,WAAN,SAA0BR,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAE3CS,KAF2C,GAEnC;AACNF,MAAAA,WAAW,EAAE;AADP,KAFmC;;AAAA,SAgB3CG,cAhB2C,GAgB1BC,KAAK,IAAI;AACxB,WAAKC,QAAL,CAAc;AACZ,SAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADtB,OAAd;AAGD,KApB0C;;AAAA,SAuB3CC,cAvB2C,GAuB1BL,KAAK,IAAI;AACxBA,MAAAA,KAAK,CAACM,cAAN;AACA,YAAMC,IAAI,GAAG,EAAC,GAAG,KAAKT;AAAT,OAAb;AACA,WAAKU,KAAL,CAAWlB,SAAX,CAAqBmB,MAArB;AACA,WAAKR,QAAL,CAAc;AACZS,QAAAA,KAAK,EAAE,EADK;AAEZC,QAAAA,UAAU,EAAE;AAFA,OAAd;AAID,KA/B0C;AAAA;;AAQ3CC,EAAAA,iBAAiB,GAAI;AACnBnB,IAAAA,aAAa,CACZE,IADD,CACOkB,IAAI,IACL,KAAKZ,QAAL,CAAc;AACdL,MAAAA,WAAW,EAAEiB;AADC,KAAd,CAFN;AAKD;;AAmBDC,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,KAAKjB,KAAL,CAAWF,WAAX,CAAuBoB,GAAvB,CAA2B,CAACC,CAAD,EAAIC,CAAJ,KAAS;AACjD,aAAQ;AAAG,QAAA,SAAS,EAAE,QAAd;AAAuB,QAAA,EAAE,EAAID,CAAC,CAACd,IAA/B;AAAqC,QAAA,GAAG,EAAEe,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACLD,CAAC,CAACd,IADG,CAAR;AAID,KALc,CAAf;AAMA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGY,MADH,CADF;AAKD;;AA7C0C;AAgD7C,eAAexB,OAAO,CAAC,IAAD,EAAO;AAAE4B,EAAAA;AAAF,CAAP,CAAP,CAA2BC,SAA3B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { addStream } from '../actions';\nimport { connect } from 'react-redux'; \nimport adapter from '../adapter'\n\n  let listOfStreams = adapter.getStreams()\n  .then(streamsList => streamsList)\t\n\n\n  export class StreamInput extends Component {\n\n  state = {\n    streamsList: []\n  }\n\n\n\n  componentDidMount () {\n   \tlistOfStreams\n    .then (json => \n          this.setState({\n          streamsList: json\n     }))\n  }  \n\n  handleOnChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n\n  handleOnSubmit = event => {\n    event.preventDefault();\n    const book = {...this.state};\n    this.props.addStream(stream);\n    this.setState({\n      title: '',\n      authorName: ''\n    });\n  }\n\n  render() { \n    const resArr = this.state.streamsList.map((r, i)=> {\n      return (<p className= \"stream\" id = {r.name} key={i}>\n        {r.name}\n      </p>\n      )\n    })  \n    return (\n      <div>\n        {resArr}\n    </div>\n    )\n  }\n}\n\nexport default connect(null, { addBook })(BookInput);"]},"metadata":{},"sourceType":"module"}