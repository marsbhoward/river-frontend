{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/MoviesPage.js\";\nimport React, { useState, useEffect } from 'react'; //import { connect } from 'react-redux';\n\nimport { fetchMovies } from '../actions/movieActions';\nimport { fetchTitle } from '../actions/movieActions';\nimport MovieList from '../components/MovieList';\nimport { useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch, useStore } from 'react-redux';\n\nconst MoviesPage = props => {\n  const movieData = useSelector(state => state.MoviesReducer, []) || [];\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const [clicked, setCliked] = useState('');\n  const [currentMovie, setCurrentMovie] = useState('');\n  useEffect(() => {\n    if (location.state !== undefined) {\n      dispatch(fetchTitle(location.state.currentMovie));\n      setCliked(location.state.clicked);\n      CurrentMovie(movieData);\n    } else {\n      dispatch(fetchMovies(localStorage.currentStream));\n    }\n  }, []); //dispatch({type: 'LOADING_MOVIES'})\n  //props.fetchMovies(localStorage.currentStream)\n  //console.log(props)\n  //console.log(movieData)\n  //console.log(dispatch(fetchMovies(localStorage.currentStream)))\n\n  function trailerID(trailer) {//link trailer to backend\n  }\n\n  function CurrentMovie(data) {\n    if (data.currentTitle !== undefined) {\n      setCurrentMovie(data.currentTitle);\n      console.log(data);\n    }\n  } //<MovieList streamID={props.handler} movieCards={props.movieCards} movieIds={props.movieIds} trailerID={props.trailerID} currentStream={props.currentStream}/>\n\n\n  function handleLoading() {\n    if (movieData.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Loading Movies...\");\n    } else {\n      if (location.state !== undefined) {\n        if (movieData.currentTitle !== undefined) {\n          console.log('passed movie from searchbox component');\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, React.createElement(MovieList, {\n            passedMovie: movieData.currentTitle,\n            streamID: localStorage.currentStream,\n            isClicked: clicked,\n            trailerID: trailerID,\n            movieCards: movieData.movies,\n            movieIds: movieData.ids,\n            currentStream: localStorage.currentStreamName,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }));\n        } else console.log(location.state);\n\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, location.state.currentMovie.slug);\n      } else {\n        console.log('no passed move');\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(MovieList, {\n          streamID: localStorage.currentStream,\n          isClicked: clicked,\n          trailerID: trailerID,\n          movieCards: movieData.movies,\n          movieIds: movieData.ids,\n          currentStream: localStorage.currentStreamName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }));\n      }\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"banner-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, localStorage.currentStreamName.toUpperCase()), handleLoading());\n};\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies.sort(),\n    movieIds: state.MoviesReducer.ids,\n    loading: state.MoviesReducer.loading\n  };\n};\n\nexport default MoviesPage;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/MoviesPage.js"],"names":["React","useState","useEffect","fetchMovies","fetchTitle","MovieList","useLocation","useSelector","useDispatch","useStore","MoviesPage","props","movieData","state","MoviesReducer","dispatch","location","clicked","setCliked","currentMovie","setCurrentMovie","undefined","CurrentMovie","localStorage","currentStream","trailerID","trailer","data","currentTitle","console","log","handleLoading","loading","movies","ids","currentStreamName","slug","toUpperCase","mapDispatchToProps","movieCards","sort","movieIds"],"mappings":"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","sourcesContent":["import React,{ useState, useEffect } from 'react';\n//import { connect } from 'react-redux';\nimport { fetchMovies } from '../actions/movieActions'\nimport { fetchTitle } from '../actions/movieActions'\nimport MovieList from '../components/MovieList'\nimport { useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch, useStore } from 'react-redux'\n\nconst MoviesPage = (props) => { \n  const movieData = useSelector(state => state.MoviesReducer, []) || []; \n  const dispatch = useDispatch();\n  const location = useLocation();\n  const [clicked, setCliked] = useState('');\n  const [currentMovie, setCurrentMovie] = useState('');  \n\n  useEffect(() => {\n      if (location.state !== undefined){\n        dispatch(fetchTitle(location.state.currentMovie))\n        setCliked(location.state.clicked)\n        CurrentMovie(movieData)\n      }\n      else{\n        dispatch(fetchMovies(localStorage.currentStream));\n      }        \n    }, []);\n    //dispatch({type: 'LOADING_MOVIES'})\n    //props.fetchMovies(localStorage.currentStream)\n    //console.log(props)\n    //console.log(movieData)\n    //console.log(dispatch(fetchMovies(localStorage.currentStream)))\n  \n\n  function trailerID(trailer){ \n    //link trailer to backend\n  }\n\n  function CurrentMovie(data){\n    if (data.currentTitle !== undefined){\n      setCurrentMovie(data.currentTitle)\n      console.log(data)\n    }\n  }\n\n\n\n  //<MovieList streamID={props.handler} movieCards={props.movieCards} movieIds={props.movieIds} trailerID={props.trailerID} currentStream={props.currentStream}/>\n  function handleLoading (){\n    if(movieData.loading) {\n      return <div>Loading Movies...</div>\n    } \n    else {\n      if (location.state !== undefined){\n        if (movieData.currentTitle !== undefined){\n          console.log('passed movie from searchbox component')\n          return(\n          <div>\n            <MovieList passedMovie={movieData.currentTitle} streamID={localStorage.currentStream} isClicked={clicked} trailerID={trailerID} movieCards={movieData.movies} movieIds={movieData.ids}  currentStream={localStorage.currentStreamName}/>                  \n          </div>\n          )\n        }\n        else\n          console.log(location.state)\n          return(\n            <h1>{location.state.currentMovie.slug}</h1>\n          )\n      }\n        else{\n          console.log('no passed move')\n            return (\n              <div>\n                  <MovieList streamID={localStorage.currentStream} isClicked={clicked} trailerID={trailerID} movieCards={movieData.movies} movieIds={movieData.ids}  currentStream={localStorage.currentStreamName}/>                  \n              </div>\n            )\n        }\n      \n    }\n  }\n\n  \n    return (\n      <div className=\"App\">\n        <div className=\"banner-2\">{localStorage.currentStreamName.toUpperCase()}</div>\n        {handleLoading()}\n      </div>\n    );\n  }\n\n\n\n\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies.sort(),\n    movieIds: state.MoviesReducer.ids,\n    loading: state.MoviesReducer.loading\n  }\n}\n\nexport default(MoviesPage)"]},"metadata":{},"sourceType":"module"}