{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/MovieInfo.js\";\nimport React, { Component } from 'react';\n\nclass MovieInfo extends Component {\n  componentDidMount() {\n    let movieTitle = this.props.currentMovie.title;\n    const KEY = 'AIzaSyBRpDAqSeCsDHlTlS7l8YHd2nOFgfTDtWM';\n    var URL = `https://www.googleapis.com/youtube/v3/search?part=snippet%20&maxResults=1&order=relevance&q=${movieTitle}%20trailer&key=${KEY}`; //https://www.googleapis.com/youtube/v3/search?part=snippet%20&maxResults=1&order=relevance&q=booksmart%20trailer&key=AIzaSyBRpDAqSeCsDHlTlS7l8YHd2nOFgfTDtWM\n\n    fetch(URL).then(response => {\n      return response.json();\n    }).then(responseJSON => {\n      this.setState({\n        videoId: responseJSON.items\n      });\n    });\n    console.log(this);\n  }\n\n  render() {\n    let currentMovie = this.props.currentMovie;\n    let videoId = 'eOrNdBpGMv8';\n    const ratings = currentMovie.Ratings.map((rating, index) => React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"| \", rating.Source, \": \", rating.Value, \" |\"));\n    return React.createElement(\"div\", {\n      className: \"show_Movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"selected_Movie\",\n      alt: currentMovie.Title,\n      src: currentMovie.Poster,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \" \", currentMovie.Title, \" \"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \" Rated: \", currentMovie.Rated, \" \"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \" Genre: \", currentMovie.Genre, \" \"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \" Actors: \", currentMovie.Actors, \" \"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \" Director: \", currentMovie.Director, \" \"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \" Awards: \", currentMovie.Awards, \" \"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \" Ratings \"), React.createElement(\"ul\", {\n      style: {\n        display: 'inline-flex',\n        margin: 40,\n        listStyle: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \" \", ratings, \" \"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \" Plot\"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, currentMovie.Plot, \" \"), React.createElement(\"iframe\", {\n      title: \"youtube\",\n      className: \"player\",\n      src: \"https://www.youtube.com/embed/\" + videoId,\n      frameBorder: \"0\",\n      allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default MovieInfo;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/MovieInfo.js"],"names":["React","Component","MovieInfo","componentDidMount","movieTitle","props","currentMovie","title","KEY","URL","fetch","then","response","json","responseJSON","setState","videoId","items","console","log","render","ratings","Ratings","map","rating","index","Source","Value","Title","Poster","Rated","Genre","Actors","Director","Awards","display","margin","listStyle","Plot"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAEhCE,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,UAAU,GAAG,KAAKC,KAAL,CAAWC,YAAX,CAAwBC,KAAzC;AACA,UAAMC,GAAG,GAAG,yCAAZ;AACA,QAAIC,GAAG,GAAI,+FAA8FL,UAAW,kBAAiBI,GAAI,EAAzI,CAHkB,CAIlB;;AACAE,IAAAA,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,QAAQ,IAAI;AACtB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAFH,EAEKF,IAFL,CAEUG,YAAY,IAAI;AACpB,WAAKC,QAAL,CAAe;AAACC,QAAAA,OAAO,EAAEF,YAAY,CAACG;AAAvB,OAAf;AAEH,KALH;AAMEC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACR,QAAId,YAAY,GAAG,KAAKD,KAAL,CAAWC,YAA9B;AACC,QAAIU,OAAO,GAAG,aAAd;AACD,UAAMK,OAAO,GAAGf,YAAY,CAACgB,OAAb,CAAqBC,GAArB,CAAyB,CAACC,MAAD,EAASC,KAAT,KACxC;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAoBD,MAAM,CAACE,MAA3B,QAAqCF,MAAM,CAACG,KAA5C,OADe,CAAhB;AAIC,WACC;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAE,gBAAhB;AAAiC,MAAA,GAAG,EAAErB,YAAY,CAACsB,KAAnD;AAA0D,MAAA,GAAG,EAAEtB,YAAY,CAACuB,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMvB,YAAY,CAACsB,KAAnB,MAFL,EAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAatB,YAAY,CAACwB,KAA1B,MAHL,EAIK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAaxB,YAAY,CAACyB,KAA1B,MAJL,EAKK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAczB,YAAY,CAAC0B,MAA3B,MALL,EAMK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgB1B,YAAY,CAAC2B,QAA7B,MANL,EAOK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAc3B,YAAY,CAAC4B,MAA3B,MAPL,EAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARD,EASG;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,aAAV;AAAwBC,QAAAA,MAAM,EAAE,EAAhC;AAAoCC,QAAAA,SAAS,EAAE;AAA/C,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAqEhB,OAArE,MATH,EAUK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVL,EAWK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKf,YAAY,CAACgC,IAAlB,MAXL,EAaG;AAAQ,MAAA,KAAK,EAAE,SAAf;AAAyB,MAAA,SAAS,EAAC,QAAnC;AACE,MAAA,GAAG,EAAE,mCAAmCtB,OAD1C;AAEE,MAAA,WAAW,EAAC,GAFd;AAEkB,MAAA,KAAK,EAAC,yEAFxB;AAEkG,MAAA,eAAe,MAFjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbH,CADD;AAoBD;;AA3C+B;;AA6ClC,eAAed,SAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass MovieInfo extends Component {\n\n  componentDidMount() {\n    let movieTitle = this.props.currentMovie.title\n    const KEY = 'AIzaSyBRpDAqSeCsDHlTlS7l8YHd2nOFgfTDtWM';\n    var URL = `https://www.googleapis.com/youtube/v3/search?part=snippet%20&maxResults=1&order=relevance&q=${movieTitle}%20trailer&key=${KEY}`\n    //https://www.googleapis.com/youtube/v3/search?part=snippet%20&maxResults=1&order=relevance&q=booksmart%20trailer&key=AIzaSyBRpDAqSeCsDHlTlS7l8YHd2nOFgfTDtWM\n    fetch(URL).then(response => {\n          return response.json()\n      }).then(responseJSON => {\n          this.setState ({videoId: responseJSON.items})\n        \n      })  \n      console.log(this)\n  }\n\n  render() {\n  \tlet currentMovie = this.props.currentMovie\n    let videoId = 'eOrNdBpGMv8'\n  \tconst ratings = currentMovie.Ratings.map((rating, index) =>(\n  \t\t<li  key={index}>| {rating.Source}: {rating.Value} |</li>\n \t));\n \t\n    return (\n    \t<div className = \"show_Movie\" >\n        <img className= \"selected_Movie\" alt={currentMovie.Title} src={currentMovie.Poster}></img>\n          <h1> {currentMovie.Title} </h1>\n          <h4> Rated: {currentMovie.Rated} </h4> \n          <h4> Genre: {currentMovie.Genre} </h4>\n          <h5> Actors: {currentMovie.Actors} </h5>\n          <h5> Director: {currentMovie.Director} </h5>\n          <h5> Awards: {currentMovie.Awards} </h5>\n\t\t    <h4> Ratings </h4>\n        <ul style={{display: 'inline-flex',margin: 40, listStyle: 'none'}}> {ratings} </ul>\n          <h4> Plot</h4>\n          <h5>{currentMovie.Plot} </h5>\n          \n        <iframe title= \"youtube\" className=\"player\"  \n          src={\"https://www.youtube.com/embed/\" + videoId }\n          frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen>\n        </iframe>\n      </div>\n    )\n  }\n}\nexport default MovieInfo;\n\n"]},"metadata":{},"sourceType":"module"}