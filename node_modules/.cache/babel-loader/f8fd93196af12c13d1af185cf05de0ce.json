{"ast":null,"code":"/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst {\n  helper,\n  assert\n} = require('./helper');\n\nconst {\n  Events\n} = require('./Events');\n\nconst {\n  TimeoutError\n} = require('./Errors');\n\nclass LifecycleWatcher {\n  /**\n   * @param {!Puppeteer.FrameManager} frameManager\n   * @param {!Puppeteer.Frame} frame\n   * @param {string|!Array<string>} waitUntil\n   * @param {number} timeout\n   */\n  constructor(frameManager, frame, waitUntil, timeout) {\n    if (Array.isArray(waitUntil)) waitUntil = waitUntil.slice();else if (typeof waitUntil === 'string') waitUntil = [waitUntil];\n    this._expectedLifecycle = waitUntil.map(value => {\n      const protocolEvent = puppeteerToProtocolLifecycle.get(value);\n      assert(protocolEvent, 'Unknown value for options.waitUntil: ' + value);\n      return protocolEvent;\n    });\n    this._frameManager = frameManager;\n    this._frame = frame;\n    this._initialLoaderId = frame._loaderId;\n    this._timeout = timeout;\n    /** @type {?Puppeteer.Request} */\n\n    this._navigationRequest = null;\n    this._eventListeners = [helper.addEventListener(frameManager._client, Events.CDPSession.Disconnected, () => this._terminate(new Error('Navigation failed because browser has disconnected!'))), helper.addEventListener(this._frameManager, Events.FrameManager.LifecycleEvent, this._checkLifecycleComplete.bind(this)), helper.addEventListener(this._frameManager, Events.FrameManager.FrameNavigatedWithinDocument, this._navigatedWithinDocument.bind(this)), helper.addEventListener(this._frameManager, Events.FrameManager.FrameDetached, this._onFrameDetached.bind(this)), helper.addEventListener(this._frameManager.networkManager(), Events.NetworkManager.Request, this._onRequest.bind(this))];\n    this._sameDocumentNavigationPromise = new Promise(fulfill => {\n      this._sameDocumentNavigationCompleteCallback = fulfill;\n    });\n    this._lifecyclePromise = new Promise(fulfill => {\n      this._lifecycleCallback = fulfill;\n    });\n    this._newDocumentNavigationPromise = new Promise(fulfill => {\n      this._newDocumentNavigationCompleteCallback = fulfill;\n    });\n    this._timeoutPromise = this._createTimeoutPromise();\n    this._terminationPromise = new Promise(fulfill => {\n      this._terminationCallback = fulfill;\n    });\n\n    this._checkLifecycleComplete();\n  }\n  /**\n   * @param {!Puppeteer.Request} request\n   */\n\n\n  _onRequest(request) {\n    if (request.frame() !== this._frame || !request.isNavigationRequest()) return;\n    this._navigationRequest = request;\n  }\n  /**\n   * @param {!Puppeteer.Frame} frame\n   */\n\n\n  _onFrameDetached(frame) {\n    if (this._frame === frame) {\n      this._terminationCallback.call(null, new Error('Navigating frame was detached'));\n\n      return;\n    }\n\n    this._checkLifecycleComplete();\n  }\n  /**\n   * @return {?Puppeteer.Response}\n   */\n\n\n  navigationResponse() {\n    return this._navigationRequest ? this._navigationRequest.response() : null;\n  }\n  /**\n   * @param {!Error} error\n   */\n\n\n  _terminate(error) {\n    this._terminationCallback.call(null, error);\n  }\n  /**\n   * @return {!Promise<?Error>}\n   */\n\n\n  sameDocumentNavigationPromise() {\n    return this._sameDocumentNavigationPromise;\n  }\n  /**\n   * @return {!Promise<?Error>}\n   */\n\n\n  newDocumentNavigationPromise() {\n    return this._newDocumentNavigationPromise;\n  }\n  /**\n   * @return {!Promise}\n   */\n\n\n  lifecyclePromise() {\n    return this._lifecyclePromise;\n  }\n  /**\n   * @return {!Promise<?Error>}\n   */\n\n\n  timeoutOrTerminationPromise() {\n    return Promise.race([this._timeoutPromise, this._terminationPromise]);\n  }\n  /**\n   * @return {!Promise<?Error>}\n   */\n\n\n  _createTimeoutPromise() {\n    if (!this._timeout) return new Promise(() => {});\n    const errorMessage = 'Navigation timeout of ' + this._timeout + ' ms exceeded';\n    return new Promise(fulfill => this._maximumTimer = setTimeout(fulfill, this._timeout)).then(() => new TimeoutError(errorMessage));\n  }\n  /**\n   * @param {!Puppeteer.Frame} frame\n   */\n\n\n  _navigatedWithinDocument(frame) {\n    if (frame !== this._frame) return;\n    this._hasSameDocumentNavigation = true;\n\n    this._checkLifecycleComplete();\n  }\n\n  _checkLifecycleComplete() {\n    // We expect navigation to commit.\n    if (!checkLifecycle(this._frame, this._expectedLifecycle)) return;\n\n    this._lifecycleCallback();\n\n    if (this._frame._loaderId === this._initialLoaderId && !this._hasSameDocumentNavigation) return;\n    if (this._hasSameDocumentNavigation) this._sameDocumentNavigationCompleteCallback();\n    if (this._frame._loaderId !== this._initialLoaderId) this._newDocumentNavigationCompleteCallback();\n    /**\n     * @param {!Puppeteer.Frame} frame\n     * @param {!Array<string>} expectedLifecycle\n     * @return {boolean}\n     */\n\n    function checkLifecycle(frame, expectedLifecycle) {\n      for (const event of expectedLifecycle) {\n        if (!frame._lifecycleEvents.has(event)) return false;\n      }\n\n      for (const child of frame.childFrames()) {\n        if (!checkLifecycle(child, expectedLifecycle)) return false;\n      }\n\n      return true;\n    }\n  }\n\n  dispose() {\n    helper.removeEventListeners(this._eventListeners);\n    clearTimeout(this._maximumTimer);\n  }\n\n}\n\nconst puppeteerToProtocolLifecycle = new Map([['load', 'load'], ['domcontentloaded', 'DOMContentLoaded'], ['networkidle0', 'networkIdle'], ['networkidle2', 'networkAlmostIdle']]);\nmodule.exports = {\n  LifecycleWatcher\n};","map":{"version":3,"sources":["/Users/marshoward/Development/code/river/frontend/app/node_modules/puppeteer/lib/LifecycleWatcher.js"],"names":["helper","assert","require","Events","TimeoutError","LifecycleWatcher","constructor","frameManager","frame","waitUntil","timeout","Array","isArray","slice","_expectedLifecycle","map","value","protocolEvent","puppeteerToProtocolLifecycle","get","_frameManager","_frame","_initialLoaderId","_loaderId","_timeout","_navigationRequest","_eventListeners","addEventListener","_client","CDPSession","Disconnected","_terminate","Error","FrameManager","LifecycleEvent","_checkLifecycleComplete","bind","FrameNavigatedWithinDocument","_navigatedWithinDocument","FrameDetached","_onFrameDetached","networkManager","NetworkManager","Request","_onRequest","_sameDocumentNavigationPromise","Promise","fulfill","_sameDocumentNavigationCompleteCallback","_lifecyclePromise","_lifecycleCallback","_newDocumentNavigationPromise","_newDocumentNavigationCompleteCallback","_timeoutPromise","_createTimeoutPromise","_terminationPromise","_terminationCallback","request","isNavigationRequest","call","navigationResponse","response","error","sameDocumentNavigationPromise","newDocumentNavigationPromise","lifecyclePromise","timeoutOrTerminationPromise","race","errorMessage","_maximumTimer","setTimeout","then","_hasSameDocumentNavigation","checkLifecycle","expectedLifecycle","event","_lifecycleEvents","has","child","childFrames","dispose","removeEventListeners","clearTimeout","Map","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst {helper, assert} = require('./helper');\nconst {Events} = require('./Events');\nconst {TimeoutError} = require('./Errors');\n\nclass LifecycleWatcher {\n  /**\n   * @param {!Puppeteer.FrameManager} frameManager\n   * @param {!Puppeteer.Frame} frame\n   * @param {string|!Array<string>} waitUntil\n   * @param {number} timeout\n   */\n  constructor(frameManager, frame, waitUntil, timeout) {\n    if (Array.isArray(waitUntil))\n      waitUntil = waitUntil.slice();\n    else if (typeof waitUntil === 'string')\n      waitUntil = [waitUntil];\n    this._expectedLifecycle = waitUntil.map(value => {\n      const protocolEvent = puppeteerToProtocolLifecycle.get(value);\n      assert(protocolEvent, 'Unknown value for options.waitUntil: ' + value);\n      return protocolEvent;\n    });\n\n    this._frameManager = frameManager;\n    this._frame = frame;\n    this._initialLoaderId = frame._loaderId;\n    this._timeout = timeout;\n    /** @type {?Puppeteer.Request} */\n    this._navigationRequest = null;\n    this._eventListeners = [\n      helper.addEventListener(frameManager._client, Events.CDPSession.Disconnected, () => this._terminate(new Error('Navigation failed because browser has disconnected!'))),\n      helper.addEventListener(this._frameManager, Events.FrameManager.LifecycleEvent, this._checkLifecycleComplete.bind(this)),\n      helper.addEventListener(this._frameManager, Events.FrameManager.FrameNavigatedWithinDocument, this._navigatedWithinDocument.bind(this)),\n      helper.addEventListener(this._frameManager, Events.FrameManager.FrameDetached, this._onFrameDetached.bind(this)),\n      helper.addEventListener(this._frameManager.networkManager(), Events.NetworkManager.Request, this._onRequest.bind(this)),\n    ];\n\n    this._sameDocumentNavigationPromise = new Promise(fulfill => {\n      this._sameDocumentNavigationCompleteCallback = fulfill;\n    });\n\n    this._lifecyclePromise = new Promise(fulfill => {\n      this._lifecycleCallback = fulfill;\n    });\n\n    this._newDocumentNavigationPromise = new Promise(fulfill => {\n      this._newDocumentNavigationCompleteCallback = fulfill;\n    });\n\n    this._timeoutPromise = this._createTimeoutPromise();\n    this._terminationPromise = new Promise(fulfill => {\n      this._terminationCallback = fulfill;\n    });\n    this._checkLifecycleComplete();\n  }\n\n  /**\n   * @param {!Puppeteer.Request} request\n   */\n  _onRequest(request) {\n    if (request.frame() !== this._frame || !request.isNavigationRequest())\n      return;\n    this._navigationRequest = request;\n  }\n\n  /**\n   * @param {!Puppeteer.Frame} frame\n   */\n  _onFrameDetached(frame) {\n    if (this._frame === frame) {\n      this._terminationCallback.call(null, new Error('Navigating frame was detached'));\n      return;\n    }\n    this._checkLifecycleComplete();\n  }\n\n  /**\n   * @return {?Puppeteer.Response}\n   */\n  navigationResponse() {\n    return this._navigationRequest ? this._navigationRequest.response() : null;\n  }\n\n  /**\n   * @param {!Error} error\n   */\n  _terminate(error) {\n    this._terminationCallback.call(null, error);\n  }\n\n  /**\n   * @return {!Promise<?Error>}\n   */\n  sameDocumentNavigationPromise() {\n    return this._sameDocumentNavigationPromise;\n  }\n\n  /**\n   * @return {!Promise<?Error>}\n   */\n  newDocumentNavigationPromise() {\n    return this._newDocumentNavigationPromise;\n  }\n\n  /**\n   * @return {!Promise}\n   */\n  lifecyclePromise() {\n    return this._lifecyclePromise;\n  }\n\n  /**\n   * @return {!Promise<?Error>}\n   */\n  timeoutOrTerminationPromise() {\n    return Promise.race([this._timeoutPromise, this._terminationPromise]);\n  }\n\n  /**\n   * @return {!Promise<?Error>}\n   */\n  _createTimeoutPromise() {\n    if (!this._timeout)\n      return new Promise(() => {});\n    const errorMessage = 'Navigation timeout of ' + this._timeout + ' ms exceeded';\n    return new Promise(fulfill => this._maximumTimer = setTimeout(fulfill, this._timeout))\n        .then(() => new TimeoutError(errorMessage));\n  }\n\n  /**\n   * @param {!Puppeteer.Frame} frame\n   */\n  _navigatedWithinDocument(frame) {\n    if (frame !== this._frame)\n      return;\n    this._hasSameDocumentNavigation = true;\n    this._checkLifecycleComplete();\n  }\n\n  _checkLifecycleComplete() {\n    // We expect navigation to commit.\n    if (!checkLifecycle(this._frame, this._expectedLifecycle))\n      return;\n    this._lifecycleCallback();\n    if (this._frame._loaderId === this._initialLoaderId && !this._hasSameDocumentNavigation)\n      return;\n    if (this._hasSameDocumentNavigation)\n      this._sameDocumentNavigationCompleteCallback();\n    if (this._frame._loaderId !== this._initialLoaderId)\n      this._newDocumentNavigationCompleteCallback();\n\n    /**\n     * @param {!Puppeteer.Frame} frame\n     * @param {!Array<string>} expectedLifecycle\n     * @return {boolean}\n     */\n    function checkLifecycle(frame, expectedLifecycle) {\n      for (const event of expectedLifecycle) {\n        if (!frame._lifecycleEvents.has(event))\n          return false;\n      }\n      for (const child of frame.childFrames()) {\n        if (!checkLifecycle(child, expectedLifecycle))\n          return false;\n      }\n      return true;\n    }\n  }\n\n  dispose() {\n    helper.removeEventListeners(this._eventListeners);\n    clearTimeout(this._maximumTimer);\n  }\n}\n\nconst puppeteerToProtocolLifecycle = new Map([\n  ['load', 'load'],\n  ['domcontentloaded', 'DOMContentLoaded'],\n  ['networkidle0', 'networkIdle'],\n  ['networkidle2', 'networkAlmostIdle'],\n]);\n\nmodule.exports = {LifecycleWatcher};\n"]},"metadata":{},"sourceType":"script"}