{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/MovieList.js\";\nimport React from 'react';\nimport '../index.css';\nimport Movie from './Movie';\nimport InfoPage from '../containers/InfoPage';\nlet moviesList;\n\nclass MovieList extends React.Component {\n  componentDidMount() {\n    if (typeof this.props.passedMovie !== \"undefined\") {\n      this.setCurrentMovieState();\n    } else {}\n  } //binds passed handler to MoviesPage handler\n\n\n  constructor(props) {\n    super(props);\n\n    this.setCurrentMovieState = () => {\n      console.log('set new movie state');\n      this.setState({\n        currentMovie: this.props.passedMovie\n      }); //console.log(this.state.currentMovie)\n    };\n\n    this.handler = (movie, clicked, movieID) => {\n      //localStorage.setItem('currentMovie', this.props.movieIds[(movieID-1)])\n      console.log('updated current movie id');\n      this.props.handler();\n      this.setState({\n        currentMovie: movie,\n        clicked: true,\n        movieID: movieID\n      });\n    };\n\n    this.trailerID = trailer => {\n      this.props.trailerID(trailer);\n    };\n\n    this.handler = this.handler.bind(this);\n    this.state = {\n      clicked: this.props.isClicked\n    };\n  }\n\n  render() {\n    //addition if to make sure passed movie is in\n    moviesList = JSON.parse(localStorage.currentMovieList).map((movie, index) => {\n      return /*#__PURE__*/React.createElement(Movie, {\n        key: index,\n        movie: movie,\n        passGetData: this.props.passGetData,\n        handler: this.handler,\n        movieID: index + 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 14\n        }\n      });\n    });\n\n    if (this.state.clicked !== true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"NotClicked\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 10\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"movie-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 8\n        }\n      }, moviesList));\n    } else if (typeof this.props.passedMovie !== \"undefined\") {\n      console.log(this.props.passedMovie);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"WasClicked\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(InfoPage, {\n        movieIds: this.props.movieIds,\n        streamID: this.props.streamID,\n        movieID: parseInt(localStorage.currentMovie),\n        currentMovie: this.props.passedMovie,\n        trailerID: this.trailerID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"movie-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, moviesList, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      })));\n    } else {\n      // get omdb movie\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(InfoPage, {\n        movieIds: this.props.movieIds,\n        streamID: this.props.streamID,\n        movieID: parseInt(localStorage.currentMovie),\n        currentMovie: JSON.parse(localStorage.selectedMovie),\n        trailerID: this.trailerID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"movie-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }, moviesList));\n    }\n  }\n\n}\n\nexport default MovieList;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/MovieList.js"],"names":["React","Movie","InfoPage","moviesList","MovieList","Component","componentDidMount","props","passedMovie","setCurrentMovieState","constructor","console","log","setState","currentMovie","handler","movie","clicked","movieID","trailerID","trailer","bind","state","isClicked","render","JSON","parse","localStorage","currentMovieList","map","index","passGetData","movieIds","streamID","parseInt","selectedMovie"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../index.css';\nimport Movie from './Movie';\nimport InfoPage from '../containers/InfoPage'\n\nlet moviesList\n\n\nclass MovieList extends React.Component {\n  componentDidMount() {\n    if (typeof this.props.passedMovie !== \"undefined\"){\n      this.setCurrentMovieState()\n    }\n    else{\n      \n    }\n   }\n\n//binds passed handler to MoviesPage handler\n  constructor(props){\n    super(props)\n    this.handler = this.handler.bind(this);\n    this.state = {\n      clicked: this.props.isClicked\n    }\n\n  }\n\n  setCurrentMovieState = () =>{\n    console.log('set new movie state')\n    this.setState({\n        currentMovie: this.props.passedMovie\n    })\n    //console.log(this.state.currentMovie)\n  }\n\n// recieves id from passed handler\n  handler = (movie, clicked, movieID) => {\n    //localStorage.setItem('currentMovie', this.props.movieIds[(movieID-1)])\n    console.log('updated current movie id')\n    this.props.handler()\n    this.setState({\n      currentMovie: movie,\n      clicked: true,\n      movieID: movieID\n    })   \n  }\n\n  trailerID = (trailer) => { \n    this.props.trailerID(trailer)\n  }\n\n  render() {\n    //addition if to make sure passed movie is in\n    \n    moviesList = JSON.parse(localStorage.currentMovieList).map((movie, index) => {\n      return <Movie key={index} movie={movie} passGetData={this.props.passGetData} handler={this.handler} movieID={(index+1)}/>\n    })\n\n    if (this.state.clicked !== true) {  \n     return (\n       <div className= \"NotClicked\">\n         <br/>\n       <div className=\"movie-list\">\n           {moviesList}\n       </div>\n       </div>\n     )\n   }\n    else\n      if (typeof this.props.passedMovie !== \"undefined\"){\n        console.log(this.props.passedMovie)\n        return(\n          <div className = \"WasClicked\">\n            <br/>\n            <InfoPage movieIds={this.props.movieIds} streamID={this.props.streamID} movieID={parseInt(localStorage.currentMovie)} currentMovie={this.props.passedMovie} trailerID={this.trailerID}/>\n            <div className=\"movie-list\">\n                {moviesList}\n                <br/>\n            </div>\n          </div>\n        )\n      }\n      else{\n        // get omdb movie\n        return(\n          <div>\n            <br/>\n            <InfoPage movieIds={this.props.movieIds} streamID={this.props.streamID} movieID={parseInt(localStorage.currentMovie)} currentMovie={JSON.parse(localStorage.selectedMovie)} trailerID={this.trailerID}/>\n            <div className=\"movie-list\">\n                {moviesList}\n            </div>\n          </div>\n        )              \n      }\n   }\n  }\nexport default (MovieList);"]},"metadata":{},"sourceType":"module"}