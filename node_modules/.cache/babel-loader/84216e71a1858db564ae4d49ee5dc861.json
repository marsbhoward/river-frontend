{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/searchbox.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { listMovies } from '../actions/movieActions';\nimport MoviesList from './MoviesList';\nlet moviesList;\n\nclass Searchbox extends Component {\n  constructor() {\n    super();\n\n    this.handleClick = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.searchMovie = event => {\n      let keyword = event.target.value.toLowerCase();\n      this.setState({\n        search: keyword\n      });\n    };\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Loading Titles...\");\n      } else {\n        if (this.props.movieCards === undefined) {\n          window.location.reload();\n        }\n\n        let movieList;\n        movieList = this.props.movieCards.filter(movieCard => {\n          if (this.state.search.length >= 3) {\n            return movieCard;\n          } else {\n            moviesList = '';\n          }\n        }).map((movie, index) => {\n          moviesList = this.props.movieCards.map((movie, index) => {\n            return React.createElement(MoviesList, {\n              key: index,\n              search: this.state.search,\n              movie: movie,\n              movieID: index + 1,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53\n              },\n              __self: this\n            });\n          });\n        });\n      }\n    };\n\n    this.state = {\n      search: '',\n      MoiveData: \"\",\n      open: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.listMovies();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name-input\",\n      className: \"input\",\n      placeholder: \"Search by title\",\n      onClick: handleClick,\n      onChange: e => this.searchMovie(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), this.handleLoading(), React.createElement(\"div\", {\n      className: \"movie-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, moviesList));\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    loading: state.MoviesReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  listMovies\n})(Searchbox);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/searchbox.js"],"names":["React","Component","connect","listMovies","MoviesList","moviesList","Searchbox","constructor","handleClick","setState","open","searchMovie","event","keyword","target","value","toLowerCase","search","handleLoading","props","loading","movieCards","undefined","window","location","reload","movieList","filter","movieCard","state","length","map","movie","index","MoiveData","componentDidMount","render","e","mapDispatchToProps","MoviesReducer","movies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { listMovies } from '../actions/movieActions'\nimport MoviesList from './MoviesList';\n\nlet  moviesList\n\nclass Searchbox extends Component {\n constructor(){\n    super();\n\n    this.state={\n      search:'',\n      MoiveData: \"\",\n      open: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.listMovies()\n  }\n\n  handleClick=()=>{\n    this.setState({open:true})\n  }\n\n  searchMovie=(event)=>{\n    let keyword = event.target.value.toLowerCase();\n    this.setState({search:keyword})\n    \n  }  \t\n\n  handleLoading = () => {\n    if(this.props.loading) {\n      return <div>Loading Titles...</div>\n    } \n    else {\n      if (this.props.movieCards === undefined){\n        window.location.reload();\n      } \n      let movieList\n    \n\n      movieList = this.props.movieCards.filter(movieCard=>{\n      if(this.state.search.length >= 3 ){\n            return movieCard\n      }\n      else{\n        moviesList = ''\n      }        \n      }).map((movie,index)=>{\n        moviesList = this.props.movieCards.map((movie, index) => {\n          return <MoviesList key={index} search={this.state.search}  movie={movie} movieID={(index+1)}/>\n        })\n      })\n    }\n  }\n\n  render(){\n  \treturn(\n  \t\t<div>\n  \t\t\t<input type=\"text\" id='name-input' className=\"input\" placeholder=\"Search by title\" onClick={handleClick}  onChange={(e)=>this.searchMovie(e)} />\n  \t\t\t{this.handleLoading()}\n        <div className=\"movie-list\">\n            {moviesList}\n        </div>\n  \t\t</div>\n  \t)\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    loading: state.MoviesReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {listMovies})(Searchbox)"]},"metadata":{},"sourceType":"module"}