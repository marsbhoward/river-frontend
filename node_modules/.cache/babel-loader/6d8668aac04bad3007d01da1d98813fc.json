{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/MoviesPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../actions/movieActions';\nimport MovieList from '../components/MovieList';\n\nclass MoviesPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.trailerID = trailer => {//link trailer to backend\n    };\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \"Loading Movies...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(MovieList, {\n          streamID: this.props.handler,\n          movieCards: this.props.movieCards,\n          movieIds: this.props.movieIds,\n          trailerID: this.trailerID,\n          currentStream: this.currentStream,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchMovies(this.props.handler);\n    console.log(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"banner-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.streamName.toUpperCase()), this.handleLoading());\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies.sort(),\n    movieIds: state.MoviesReducer.ids,\n    loading: state.MoviesReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  fetchMovies\n})(MoviesPage);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/MoviesPage.js"],"names":["React","Component","connect","fetchMovies","MovieList","MoviesPage","trailerID","trailer","handleLoading","props","loading","handler","movieCards","movieIds","currentStream","componentDidMount","console","log","render","streamName","toUpperCase","mapDispatchToProps","state","MoviesReducer","movies","sort","ids"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAOjCK,SAPiC,GAOpBC,OAAD,IAAa,CACvB;AACD,KATgC;;AAAA,SAYjCC,aAZiC,GAYjB,MAAM;AACpB,UAAG,KAAKC,KAAL,CAAWC,OAAd,EAAuB;AACrB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACD,OAFD,MAEO;AACL,eACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,SAAD;AAAW,UAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,OAAhC;AAAyC,UAAA,UAAU,EAAE,KAAKF,KAAL,CAAWG,UAAhE;AAA4E,UAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,QAAjG;AAA2G,UAAA,SAAS,EAAE,KAAKP,SAA3H;AAAsI,UAAA,aAAa,EAAE,KAAKQ,aAA1J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CADA;AAKD;AACF,KAtBgC;AAAA;;AAEjCC,EAAAA,iBAAiB,GAAG;AACpB,SAAKN,KAAL,CAAWN,WAAX,CAAuB,KAAKM,KAAL,CAAWE,OAAlC;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACC;;AAmBDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKT,KAAL,CAAWU,UAAX,CAAsBC,WAAtB,EAA3B,CADF,EAEG,KAAKZ,aAAL,EAFH,CADF;AAMD;;AA/BgC;;AAoCnC,MAAMa,kBAAkB,GAAGC,KAAK,IAAI;AAClC,SAAO;AACLV,IAAAA,UAAU,EAAEU,KAAK,CAACC,aAAN,CAAoBC,MAApB,CAA2BC,IAA3B,EADP;AAELZ,IAAAA,QAAQ,EAAES,KAAK,CAACC,aAAN,CAAoBG,GAFzB;AAGLhB,IAAAA,OAAO,EAAEY,KAAK,CAACC,aAAN,CAAoBb;AAHxB,GAAP;AAKD,CAND;;AAQA,eAAeR,OAAO,CAACmB,kBAAD,EAAqB;AAAClB,EAAAA;AAAD,CAArB,CAAP,CAA2CE,UAA3C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../actions/movieActions'\nimport MovieList from '../components/MovieList'\n\nclass MoviesPage extends Component {   \n  \n  componentDidMount() {\n  this.props.fetchMovies(this.props.handler)\n  console.log(this)\n  }\n\n  trailerID = (trailer) => { \n    //link trailer to backend\n  }\n\n  \n  handleLoading = () => {\n    if(this.props.loading) {\n      return <div>Loading Movies...</div>\n    } else {\n      return (\n      <div>\n      <MovieList streamID={this.props.handler} movieCards={this.props.movieCards} movieIds={this.props.movieIds} trailerID={this.trailerID} currentStream={this.currentStream}/>\n      </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"banner-2\">{this.props.streamName.toUpperCase()}</div>\n        {this.handleLoading()}\n      </div>\n    );\n  }\n}\n\n\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies.sort(),\n    movieIds: state.MoviesReducer.ids,\n    loading: state.MoviesReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {fetchMovies})(MoviesPage)"]},"metadata":{},"sourceType":"module"}