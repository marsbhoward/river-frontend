{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/StreamsPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../actions/streamActions';\nimport StreamList from '../components/StreamList';\n\nclass StreamsPage extends Component {\n  componentDidMount() {\n    console.log(this);\n    localStorage.setItem('currentStream', '');\n    localStorage.setItem('currentStreamName', '');\n    this.props.fetchStreams();\n  } //binds passed handler to StreamsPage handler\n\n\n  constructor(props) {\n    super(props);\n\n    this.handler = (id, name) => {\n      console.log('stream set');\n      this.setState({\n        currentStream: id,\n        currentStreamName: name\n      }); //returns the selected Stream id to App       \n\n      this.props.handler(id, name);\n    };\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"Loading Streams...\");\n      } else {\n        return React.createElement(StreamList, {\n          streamInfo: this.props.streamInfo,\n          currentStream: this.props.currentStream,\n          handler: this.handler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.handler = this.handler.bind(this);\n  } // recieves id from passed handler\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.handleLoading());\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    streamInfo: state.StreamsReducer.streams.sort(),\n    loading: state.StreamsReducer.loading,\n    currentStream: state.StreamsReducer.currentStream\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  fetchStreams\n})(StreamsPage);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/StreamsPage.js"],"names":["React","Component","connect","fetchStreams","StreamList","StreamsPage","componentDidMount","console","log","localStorage","setItem","props","constructor","handler","id","name","setState","currentStream","currentStreamName","handleLoading","loading","streamInfo","bind","render","mapDispatchToProps","state","StreamsReducer","streams","sort"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAElCK,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsC,EAAtC;AACAD,IAAAA,YAAY,CAACC,OAAb,CAAqB,mBAArB,EAA0C,EAA1C;AACA,SAAKC,KAAL,CAAWR,YAAX;AACD,GAPiC,CAQpC;;;AACES,EAAAA,WAAW,CAACD,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAKlBE,OALkB,GAKR,CAACC,EAAD,EAAIC,IAAJ,KAAa;AACrBR,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,WAAKQ,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAEH,EADH;AAEZI,QAAAA,iBAAiB,EAAEH;AAFP,OAAd,EAFqB,CAMxB;;AACG,WAAKJ,KAAL,CAAWE,OAAX,CAAmBC,EAAnB,EAAsBC,IAAtB;AACD,KAbiB;;AAAA,SAelBI,aAfkB,GAeF,MAAM;AACpB,UAAG,KAAKR,KAAL,CAAWS,OAAd,EAAuB;AACrB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACD,OAFD,MAEO;AAEL,eAAO,oBAAC,UAAD;AAAY,UAAA,UAAU,EAAE,KAAKT,KAAL,CAAWU,UAAnC;AAA+C,UAAA,aAAa,EAAE,KAAKV,KAAL,CAAWM,aAAzE;AAAwF,UAAA,OAAO,EAAE,KAAKJ,OAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF,KAtBiB;;AAEhB,SAAKA,OAAL,GAAe,KAAKA,OAAL,CAAaS,IAAb,CAAkB,IAAlB,CAAf;AACD,GAZiC,CAapC;;;AAoBEC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,aAAL,EADH,CADF;AAKD;;AAvCiC;;AA4CpC,MAAMK,kBAAkB,GAAGC,KAAK,IAAI;AAClC,SAAO;AACLJ,IAAAA,UAAU,EAAEI,KAAK,CAACC,cAAN,CAAqBC,OAArB,CAA6BC,IAA7B,EADP;AAELR,IAAAA,OAAO,EAAEK,KAAK,CAACC,cAAN,CAAqBN,OAFzB;AAGLH,IAAAA,aAAa,EAAEQ,KAAK,CAACC,cAAN,CAAqBT;AAH/B,GAAP;AAKD,CAND;;AAQA,eAAef,OAAO,CAACsB,kBAAD,EAAqB;AAAErB,EAAAA;AAAF,CAArB,CAAP,CAA8CE,WAA9C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../actions/streamActions'\nimport StreamList from '../components/StreamList'\n\nclass StreamsPage extends Component {   \n  \n  componentDidMount() {\n    console.log(this)\n    localStorage.setItem('currentStream', '');\n    localStorage.setItem('currentStreamName', '');\n    this.props.fetchStreams()\n  }\n//binds passed handler to StreamsPage handler\n  constructor(props){\n    super(props)\n    this.handler = this.handler.bind(this)\n  }\n// recieves id from passed handler\n  handler = (id,name) => {\n    console.log('stream set')\n    this.setState({\n      currentStream: id,\n      currentStreamName: name\n    })\n //returns the selected Stream id to App       \n    this.props.handler(id,name)\n  }\n  \n  handleLoading = () => {\n    if(this.props.loading) {\n      return <div>Loading Streams...</div>\n    } else {\n      \n      return <StreamList streamInfo={this.props.streamInfo} currentStream={this.props.currentStream} handler={this.handler}/>\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.handleLoading()}\n      </div>\n    );\n  }\n}\n\n\n\nconst mapDispatchToProps = state => {\n  return {\n    streamInfo: state.StreamsReducer.streams.sort(),\n    loading: state.StreamsReducer.loading,\n    currentStream: state.StreamsReducer.currentStream\n  }\n}\n\nexport default connect(mapDispatchToProps, { fetchStreams })(StreamsPage)"]},"metadata":{},"sourceType":"module"}