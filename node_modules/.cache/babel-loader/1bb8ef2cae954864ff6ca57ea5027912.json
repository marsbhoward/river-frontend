{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/MovieList.js\";\nimport React from 'react';\nimport '../index.css';\nimport Movie from './Movie';\nimport InfoPage from '../containers/InfoPage';\nlet showMovie;\nlet moviesList;\n\nclass MovieList extends React.Component {\n  componentDidMount() {\n    console.log(this);\n\n    if (this.props.passedMovie !== undefined) {\n      console.log('called set state');\n      this.setCurrentMovieState;\n    } else {\n      console.log('did not call set state');\n    }\n  } //binds passed handler to StreamsList handler\n\n\n  constructor(props) {\n    super(props);\n\n    this.setCurrentMovieState = () => {\n      this.setState({\n        currentMovie: this.props.passedMovie\n      });\n    };\n\n    this.handler = (movie, clicked, movieID) => {\n      localStorage.setItem('currentMovie', this.props.movieIds[movieID - 1]);\n      console.log('updated current movie id');\n      console.log(movie);\n      this.setState({\n        currentMovie: movie,\n        clicked: true,\n        movieID: movieID\n      });\n    };\n\n    this.trailerID = trailer => {\n      this.props.trailerID(trailer);\n    };\n\n    this.handler = this.handler.bind(this);\n    this.state = {\n      clicked: this.props.isClicked\n    };\n  }\n\n  render() {\n    //addition if to make sure passed movie is in\n    if (this.state.clicked !== true) {\n      moviesList = this.props.movieCards.map((movie, index) => {\n        return React.createElement(Movie, {\n          key: index,\n          movie: movie,\n          handler: this.handler,\n          movieID: index + 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"movie-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, moviesList);\n    } else console.log(this);\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(InfoPage, {\n      movieIds: this.props.movieIds,\n      streamID: this.props.streamID,\n      movieID: parseInt(localStorage.currentMovie),\n      currentMovie: this.state.currentMovie,\n      trailerID: this.trailerID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"movie-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, moviesList));\n  }\n\n}\n\nexport default MovieList;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/MovieList.js"],"names":["React","Movie","InfoPage","showMovie","moviesList","MovieList","Component","componentDidMount","console","log","props","passedMovie","undefined","setCurrentMovieState","constructor","setState","currentMovie","handler","movie","clicked","movieID","localStorage","setItem","movieIds","trailerID","trailer","bind","state","isClicked","render","movieCards","map","index","streamID","parseInt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../index.css';\nimport Movie from './Movie';\nimport InfoPage from '../containers/InfoPage'\n\n\nlet showMovie\nlet moviesList\n\n\nclass MovieList extends React.Component {\n  componentDidMount() {\n    console.log(this)\n    if (this.props.passedMovie !== undefined){\n      console.log('called set state')\n      this.setCurrentMovieState\n    }\n    else{\n      console.log('did not call set state')\n    }\n   }\n\n//binds passed handler to StreamsList handler\n  constructor(props){\n    super(props)\n    this.handler = this.handler.bind(this);\n    this.state = {\n      clicked: this.props.isClicked\n    }\n\n  }\n\n  setCurrentMovieState = () =>{\n    this.setState({\n        currentMovie: this.props.passedMovie\n    })\n  }\n\n// recieves id from passed handler\n  handler = (movie, clicked, movieID) => {\n    localStorage.setItem('currentMovie', this.props.movieIds[(movieID-1)])\n    console.log('updated current movie id')\n    console.log(movie) \n    this.setState({\n      currentMovie: movie,\n      clicked: true,\n      movieID: movieID\n    })   \n  }\n\n  trailerID = (trailer) => { \n    this.props.trailerID(trailer)\n  }\n\n  render() {\n    //addition if to make sure passed movie is in\n    if (this.state.clicked !== true) {   \n       moviesList = this.props.movieCards.map((movie, index) => {\n        return <Movie key={index} movie={movie} handler={this.handler} movieID={(index+1)}/>\n      })\n      \n      return (\n        <div className=\"movie-list\">\n            {moviesList}\n        </div>\n      )\n    }\n    else\n      console.log(this)\n      return(\n      <div>\n        <br/>\n        <InfoPage movieIds={this.props.movieIds} streamID={this.props.streamID} movieID={parseInt(localStorage.currentMovie)} currentMovie={this.state.currentMovie} trailerID={this.trailerID}/>\n        <div className=\"movie-list\">\n            {moviesList}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default (MovieList);"]},"metadata":{},"sourceType":"module"}