{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/HomePage.js\";\nimport React, { useEffect } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../actions/movieActions';\nimport { useDispatch } from 'react-redux';\nimport { Button } from 'semantic-ui-react';\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport { useHistory } from \"react-router-dom\";\nconst streamsList = [{\n  id: 1,\n  name: \"netflix\"\n}, {\n  id: 2,\n  name: \"hulu\"\n}, {\n  id: 3,\n  name: \"amazon\"\n}, {\n  id: 4,\n  name: \"hbo\"\n}, {\n  id: 5,\n  name: \"disney\"\n}, {\n  id: 6,\n  name: \"showtime\"\n}, {\n  id: 7,\n  name: \"starz\"\n}, {\n  id: 8,\n  name: \"cinimax\"\n}, {\n  id: 9,\n  name: \"dc\"\n}, {\n  id: 10,\n  name: \"apple\"\n}, {\n  id: 11,\n  name: \"epix\"\n}, {\n  id: 12,\n  name: \"tbs\"\n}, {\n  id: 13,\n  name: \"tnt\"\n}, {\n  id: 14,\n  name: \"shudder\"\n}, {\n  id: 15,\n  name: \"amc\"\n}, {\n  id: 16,\n  name: \"fx\"\n}, {\n  id: 17,\n  name: \"syfy\"\n}, {\n  id: 18,\n  name: \"ifc\"\n}, {\n  id: 19,\n  name: \"peacock\"\n}, {\n  id: 20,\n  name: \"paramount\"\n}];\n\nfunction HomePage(props) {\n  const dispatch = useDispatch();\n  const {\n    isAuthenticated,\n    loginWithRedirect\n  } = useAuth0();\n  const {\n    loading,\n    user\n  } = useAuth0();\n  const history = useHistory();\n  useEffect(() => {\n    if (props.homeCount <= 0) {\n      if (sessionStorage.load) {} else {\n        sessionStorage.setItem('load', 0);\n        props.addHomeCount();\n        streamsList.forEach(stream => {\n          dispatch(fetchMovies(stream.id));\n        });\n      }\n    }\n  }, []);\n  let stlyes = {\n    backgroundImage: \"url('https://raw.githubusercontent.com/marsbhoward/river-frontend/master/src/streams_logos/streamsBackground.png')\"\n  };\n\n  function handleClick() {\n    history.push(\"/streams\");\n    adapter.createUser(`user.email ${Date.now()} `, \"guest\").then(res => {});\n  }\n\n  if (loading) {\n    sessionStorage.setItem('currentStreamName', ' ');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home\",\n    style: stlyes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, !isAuthenticated && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), !isAuthenticated && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home-col-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Find Your Streams\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, \"River is the pathway to all of your streaming platforms. create an account and you will be able to browse your selected providers movie catalogs, or you can click the streams button to view all available platforms.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 20\n    }\n  }), \"Select a movie and you can get the trailer, ratings, and more!\"), /*#__PURE__*/React.createElement(Button.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    onClick: () => loginWithRedirect({}),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, \"Log In\"), /*#__PURE__*/React.createElement(Button.Or, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    secondary: true,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, \"See Streams\")))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, isAuthenticated && (adapter.createUser(user.email, user.name).then(res => {\n    user.id = res.id;\n    getUserStreams(user.id);\n    props.userInfo(user.id, res.darkmode);\n    console.log(\"I passed user info\");\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"greeting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \" Hi \", user.name, \" \"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \" Please wait to be redirected \")), history.push('/profile'))));\n}\n\nfunction getUserStreams(userID) {\n  streamsList.forEach(stream => {\n    adapter.createUserStream(userID, stream.id).then(res => {});\n  });\n}\n\nconst adapter = {\n  createUser: (email, username) => {\n    return fetch(`https://cors-anywhere-dd.herokuapp.com/https://river-api.herokuapp.com/users`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        username\n      })\n    }).then(res => res.json());\n  },\n  createUserStream: (user_id, stream_id) => {\n    return fetch(`https://cors-anywhere-dd.herokuapp.com/https://river-api.herokuapp.com/users/${user_id}/user_streams`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user_id,\n        stream_id\n      })\n    }).then(resp => resp.json());\n  }\n};\n\nconst mapDispatchToProps = state => {\n  return {\n    loading: state.MoviesReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  fetchMovies\n})(HomePage);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/HomePage.js"],"names":["React","useEffect","connect","fetchMovies","useDispatch","Button","useAuth0","useHistory","streamsList","id","name","HomePage","props","dispatch","isAuthenticated","loginWithRedirect","loading","user","history","homeCount","sessionStorage","load","setItem","addHomeCount","forEach","stream","stlyes","backgroundImage","handleClick","push","adapter","createUser","Date","now","then","res","email","getUserStreams","userInfo","darkmode","console","log","userID","createUserStream","username","fetch","method","headers","body","JSON","stringify","json","user_id","stream_id","resp","mapDispatchToProps","state","MoviesReducer"],"mappings":"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","sourcesContent":["import React,{ useEffect } from 'react';\nimport 'semantic-ui-css/semantic.min.css'\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../actions/movieActions'\nimport {  useDispatch } from 'react-redux'\nimport { Button } from 'semantic-ui-react'\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport { useHistory } from \"react-router-dom\";\n\n  const streamsList = [\n  {id: 1,name:\"netflix\"},{id: 2,name:\"hulu\"},{id: 3,name:\"amazon\"},{id: 4,name:\"hbo\"},\n  {id: 5,name:\"disney\"},{id: 6,name:\"showtime\"},{id: 7,name:\"starz\"},{id: 8,name:\"cinimax\"},\n  {id: 9,name:\"dc\"},{id: 10,name:\"apple\"},{id: 11,name:\"epix\"},{id: 12,name:\"tbs\"},\n  {id: 13,name:\"tnt\"},{id: 14,name:\"shudder\"},{id: 15,name:\"amc\"},{id: 16,name:\"fx\"},\n  {id: 17,name:\"syfy\"},{id: 18,name:\"ifc\"},{id: 19, name:\"peacock\"},{id: 20, name:\"paramount\"}\n  ]\n\nfunction HomePage(props) {  \n  const dispatch = useDispatch();\n  const { isAuthenticated, loginWithRedirect} = useAuth0();\n  const { loading, user } = useAuth0();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (props.homeCount <= 0){\n      if (sessionStorage.load){\n\n      }\n      else{\n        sessionStorage.setItem('load', 0); \n        props.addHomeCount()\n        streamsList.forEach(stream =>{\n          dispatch(fetchMovies(stream.id));\n        })\n      }\n    }\n  },[])\n\n\n  let stlyes = {\n    backgroundImage: \"url('https://raw.githubusercontent.com/marsbhoward/river-frontend/master/src/streams_logos/streamsBackground.png')\",\n  }\n\n  function handleClick() {\n    history.push(\"/streams\");    \n    adapter.createUser(`user.email ${Date.now()} `,\"guest\").then(res=> {});\n  }\n\n\n  if (loading) {\n    sessionStorage.setItem('currentStreamName', ' '); \n    return <div className = \"home\">Loading...</div>;\n  }\n\n \n    return (\n    <div>\n        <div className = \"home\" style={stlyes}>\n        {!isAuthenticated && (\n          <div className = \"home-col\"> \n          </div>\n           )}\n           {!isAuthenticated && (\n          <div className = \"home-col-2\"> \n            <h1>Find Your Streams</h1>\n            <p> \n              River is the pathway to all of your streaming platforms.\n              create an account and you will be able to browse your selected providers \n              movie catalogs, or you can click the streams button to view all available platforms. \n              <br/><br/>Select a movie and you can get the trailer, ratings, and more! \n            </p>\n      \n            <Button.Group>\n              <Button primary onClick={() => loginWithRedirect({})}>Log In</Button>\n              <Button.Or />\n              <Button secondary onClick={handleClick}>See Streams</Button>\n            </Button.Group>            \n          </div>\n          \n        )}    \n      </div>\n      <div>\n         {isAuthenticated && (\n            adapter.createUser(user.email,user.name).then(res=> {\n              user.id = res.id\n              getUserStreams(user.id)\n              props.userInfo(user.id,res.darkmode)\n              console.log(\"I passed user info\")\n            }),            \n            <div className=\"greeting\">\n              <h2> Hi {user.name} </h2>\n              <h4> Please wait to be redirected </h4>\n            </div>,\n            history.push('/profile')\n        )}     \n      </div>\n    </div>\n    );\n  }\n\n  function getUserStreams(userID){\n    streamsList.forEach(stream =>{ \n      adapter.createUserStream(userID,stream.id).then(res=> {\n      })\n    })  \n  }\n\n  const adapter = {\n    createUser: (email,username) => {\n      return fetch(`https://cors-anywhere-dd.herokuapp.com/https://river-api.herokuapp.com/users`, {\n        method: 'POST',\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({email, username})\n      })\n    .then(res => res.json())       \n    },\n\n    createUserStream: (user_id,stream_id) => {\n      return fetch(`https://cors-anywhere-dd.herokuapp.com/https://river-api.herokuapp.com/users/${user_id}/user_streams`, {\n        method: 'POST',\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({user_id, stream_id})\n      })\n    .then(resp => resp.json())       \n    }\n  }\n\n\n  const mapDispatchToProps = state => {\n    return {\n      loading: state.MoviesReducer.loading\n    }\n  }\n\n\nexport default connect(mapDispatchToProps, {fetchMovies})(HomePage)"]},"metadata":{},"sourceType":"module"}