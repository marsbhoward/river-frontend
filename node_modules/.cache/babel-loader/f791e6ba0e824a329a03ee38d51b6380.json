{"ast":null,"code":"/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst EventEmitter = require('events');\n\nconst {\n  helper,\n  assert,\n  debugError\n} = require('./helper');\n\nconst {\n  Events\n} = require('./Events');\n\nconst {\n  ExecutionContext,\n  EVALUATION_SCRIPT_URL\n} = require('./ExecutionContext');\n\nconst {\n  LifecycleWatcher\n} = require('./LifecycleWatcher');\n\nconst {\n  DOMWorld\n} = require('./DOMWorld');\n\nconst {\n  NetworkManager\n} = require('./NetworkManager');\n\nconst UTILITY_WORLD_NAME = '__puppeteer_utility_world__';\n\nclass FrameManager extends EventEmitter {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Puppeteer.Page} page\n   * @param {boolean} ignoreHTTPSErrors\n   * @param {!Puppeteer.TimeoutSettings} timeoutSettings\n   */\n  constructor(client, page, ignoreHTTPSErrors, timeoutSettings) {\n    super();\n    this._client = client;\n    this._page = page;\n    this._networkManager = new NetworkManager(client, ignoreHTTPSErrors, this);\n    this._timeoutSettings = timeoutSettings;\n    /** @type {!Map<string, !Frame>} */\n\n    this._frames = new Map();\n    /** @type {!Map<number, !ExecutionContext>} */\n\n    this._contextIdToContext = new Map();\n    /** @type {!Set<string>} */\n\n    this._isolatedWorlds = new Set();\n\n    this._client.on('Page.frameAttached', event => this._onFrameAttached(event.frameId, event.parentFrameId));\n\n    this._client.on('Page.frameNavigated', event => this._onFrameNavigated(event.frame));\n\n    this._client.on('Page.navigatedWithinDocument', event => this._onFrameNavigatedWithinDocument(event.frameId, event.url));\n\n    this._client.on('Page.frameDetached', event => this._onFrameDetached(event.frameId));\n\n    this._client.on('Page.frameStoppedLoading', event => this._onFrameStoppedLoading(event.frameId));\n\n    this._client.on('Runtime.executionContextCreated', event => this._onExecutionContextCreated(event.context));\n\n    this._client.on('Runtime.executionContextDestroyed', event => this._onExecutionContextDestroyed(event.executionContextId));\n\n    this._client.on('Runtime.executionContextsCleared', event => this._onExecutionContextsCleared());\n\n    this._client.on('Page.lifecycleEvent', event => this._onLifecycleEvent(event));\n  }\n\n  async initialize() {\n    const [, {\n      frameTree\n    }] = await Promise.all([this._client.send('Page.enable'), this._client.send('Page.getFrameTree')]);\n\n    this._handleFrameTree(frameTree);\n\n    await Promise.all([this._client.send('Page.setLifecycleEventsEnabled', {\n      enabled: true\n    }), this._client.send('Runtime.enable', {}).then(() => this._ensureIsolatedWorld(UTILITY_WORLD_NAME)), this._networkManager.initialize()]);\n  }\n  /**\n   * @return {!NetworkManager}\n   */\n\n\n  networkManager() {\n    return this._networkManager;\n  }\n  /**\n   * @param {!Puppeteer.Frame} frame\n   * @param {string} url\n   * @param {!{referer?: string, timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n\n\n  async navigateFrame(frame, url, options = {}) {\n    assertNoLegacyNavigationOptions(options);\n    const {\n      referer = this._networkManager.extraHTTPHeaders()['referer'],\n      waitUntil = ['load'],\n      timeout = this._timeoutSettings.navigationTimeout()\n    } = options;\n    const watcher = new LifecycleWatcher(this, frame, waitUntil, timeout);\n    let ensureNewDocumentNavigation = false;\n    let error = await Promise.race([navigate(this._client, url, referer, frame._id), watcher.timeoutOrTerminationPromise()]);\n\n    if (!error) {\n      error = await Promise.race([watcher.timeoutOrTerminationPromise(), ensureNewDocumentNavigation ? watcher.newDocumentNavigationPromise() : watcher.sameDocumentNavigationPromise()]);\n    }\n\n    watcher.dispose();\n    if (error) throw error;\n    return watcher.navigationResponse();\n    /**\n     * @param {!Puppeteer.CDPSession} client\n     * @param {string} url\n     * @param {string} referrer\n     * @param {string} frameId\n     * @return {!Promise<?Error>}\n     */\n\n    async function navigate(client, url, referrer, frameId) {\n      try {\n        const response = await client.send('Page.navigate', {\n          url,\n          referrer,\n          frameId\n        });\n        ensureNewDocumentNavigation = !!response.loaderId;\n        return response.errorText ? new Error(`${response.errorText} at ${url}`) : null;\n      } catch (error) {\n        return error;\n      }\n    }\n  }\n  /**\n   * @param {!Puppeteer.Frame} frame\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n\n\n  async waitForFrameNavigation(frame, options = {}) {\n    assertNoLegacyNavigationOptions(options);\n    const {\n      waitUntil = ['load'],\n      timeout = this._timeoutSettings.navigationTimeout()\n    } = options;\n    const watcher = new LifecycleWatcher(this, frame, waitUntil, timeout);\n    const error = await Promise.race([watcher.timeoutOrTerminationPromise(), watcher.sameDocumentNavigationPromise(), watcher.newDocumentNavigationPromise()]);\n    watcher.dispose();\n    if (error) throw error;\n    return watcher.navigationResponse();\n  }\n  /**\n   * @param {!Protocol.Page.lifecycleEventPayload} event\n   */\n\n\n  _onLifecycleEvent(event) {\n    const frame = this._frames.get(event.frameId);\n\n    if (!frame) return;\n\n    frame._onLifecycleEvent(event.loaderId, event.name);\n\n    this.emit(Events.FrameManager.LifecycleEvent, frame);\n  }\n  /**\n   * @param {string} frameId\n   */\n\n\n  _onFrameStoppedLoading(frameId) {\n    const frame = this._frames.get(frameId);\n\n    if (!frame) return;\n\n    frame._onLoadingStopped();\n\n    this.emit(Events.FrameManager.LifecycleEvent, frame);\n  }\n  /**\n   * @param {!Protocol.Page.FrameTree} frameTree\n   */\n\n\n  _handleFrameTree(frameTree) {\n    if (frameTree.frame.parentId) this._onFrameAttached(frameTree.frame.id, frameTree.frame.parentId);\n\n    this._onFrameNavigated(frameTree.frame);\n\n    if (!frameTree.childFrames) return;\n\n    for (const child of frameTree.childFrames) this._handleFrameTree(child);\n  }\n  /**\n   * @return {!Puppeteer.Page}\n   */\n\n\n  page() {\n    return this._page;\n  }\n  /**\n   * @return {!Frame}\n   */\n\n\n  mainFrame() {\n    return this._mainFrame;\n  }\n  /**\n   * @return {!Array<!Frame>}\n   */\n\n\n  frames() {\n    return Array.from(this._frames.values());\n  }\n  /**\n   * @param {!string} frameId\n   * @return {?Frame}\n   */\n\n\n  frame(frameId) {\n    return this._frames.get(frameId) || null;\n  }\n  /**\n   * @param {string} frameId\n   * @param {?string} parentFrameId\n   */\n\n\n  _onFrameAttached(frameId, parentFrameId) {\n    if (this._frames.has(frameId)) return;\n    assert(parentFrameId);\n\n    const parentFrame = this._frames.get(parentFrameId);\n\n    const frame = new Frame(this, this._client, parentFrame, frameId);\n\n    this._frames.set(frame._id, frame);\n\n    this.emit(Events.FrameManager.FrameAttached, frame);\n  }\n  /**\n   * @param {!Protocol.Page.Frame} framePayload\n   */\n\n\n  _onFrameNavigated(framePayload) {\n    const isMainFrame = !framePayload.parentId;\n    let frame = isMainFrame ? this._mainFrame : this._frames.get(framePayload.id);\n    assert(isMainFrame || frame, 'We either navigate top level or have old version of the navigated frame'); // Detach all child frames first.\n\n    if (frame) {\n      for (const child of frame.childFrames()) this._removeFramesRecursively(child);\n    } // Update or create main frame.\n\n\n    if (isMainFrame) {\n      if (frame) {\n        // Update frame id to retain frame identity on cross-process navigation.\n        this._frames.delete(frame._id);\n\n        frame._id = framePayload.id;\n      } else {\n        // Initial main frame navigation.\n        frame = new Frame(this, this._client, null, framePayload.id);\n      }\n\n      this._frames.set(framePayload.id, frame);\n\n      this._mainFrame = frame;\n    } // Update frame payload.\n\n\n    frame._navigated(framePayload);\n\n    this.emit(Events.FrameManager.FrameNavigated, frame);\n  }\n  /**\n   * @param {string} name\n   */\n\n\n  async _ensureIsolatedWorld(name) {\n    if (this._isolatedWorlds.has(name)) return;\n\n    this._isolatedWorlds.add(name);\n\n    await this._client.send('Page.addScriptToEvaluateOnNewDocument', {\n      source: `//# sourceURL=${EVALUATION_SCRIPT_URL}`,\n      worldName: name\n    }), await Promise.all(this.frames().map(frame => this._client.send('Page.createIsolatedWorld', {\n      frameId: frame._id,\n      grantUniveralAccess: true,\n      worldName: name\n    }).catch(debugError))); // frames might be removed before we send this\n  }\n  /**\n   * @param {string} frameId\n   * @param {string} url\n   */\n\n\n  _onFrameNavigatedWithinDocument(frameId, url) {\n    const frame = this._frames.get(frameId);\n\n    if (!frame) return;\n\n    frame._navigatedWithinDocument(url);\n\n    this.emit(Events.FrameManager.FrameNavigatedWithinDocument, frame);\n    this.emit(Events.FrameManager.FrameNavigated, frame);\n  }\n  /**\n   * @param {string} frameId\n   */\n\n\n  _onFrameDetached(frameId) {\n    const frame = this._frames.get(frameId);\n\n    if (frame) this._removeFramesRecursively(frame);\n  }\n\n  _onExecutionContextCreated(contextPayload) {\n    const frameId = contextPayload.auxData ? contextPayload.auxData.frameId : null;\n    const frame = this._frames.get(frameId) || null;\n    let world = null;\n\n    if (frame) {\n      if (contextPayload.auxData && !!contextPayload.auxData['isDefault']) {\n        world = frame._mainWorld;\n      } else if (contextPayload.name === UTILITY_WORLD_NAME && !frame._secondaryWorld._hasContext()) {\n        // In case of multiple sessions to the same target, there's a race between\n        // connections so we might end up creating multiple isolated worlds.\n        // We can use either.\n        world = frame._secondaryWorld;\n      }\n    }\n\n    if (contextPayload.auxData && contextPayload.auxData['type'] === 'isolated') this._isolatedWorlds.add(contextPayload.name);\n    /** @type {!ExecutionContext} */\n\n    const context = new ExecutionContext(this._client, contextPayload, world);\n    if (world) world._setContext(context);\n\n    this._contextIdToContext.set(contextPayload.id, context);\n  }\n  /**\n   * @param {number} executionContextId\n   */\n\n\n  _onExecutionContextDestroyed(executionContextId) {\n    const context = this._contextIdToContext.get(executionContextId);\n\n    if (!context) return;\n\n    this._contextIdToContext.delete(executionContextId);\n\n    if (context._world) context._world._setContext(null);\n  }\n\n  _onExecutionContextsCleared() {\n    for (const context of this._contextIdToContext.values()) {\n      if (context._world) context._world._setContext(null);\n    }\n\n    this._contextIdToContext.clear();\n  }\n  /**\n   * @param {number} contextId\n   * @return {!ExecutionContext}\n   */\n\n\n  executionContextById(contextId) {\n    const context = this._contextIdToContext.get(contextId);\n\n    assert(context, 'INTERNAL ERROR: missing context with id = ' + contextId);\n    return context;\n  }\n  /**\n   * @param {!Frame} frame\n   */\n\n\n  _removeFramesRecursively(frame) {\n    for (const child of frame.childFrames()) this._removeFramesRecursively(child);\n\n    frame._detach();\n\n    this._frames.delete(frame._id);\n\n    this.emit(Events.FrameManager.FrameDetached, frame);\n  }\n\n}\n/**\n * @unrestricted\n */\n\n\nclass Frame {\n  /**\n   * @param {!FrameManager} frameManager\n   * @param {!Puppeteer.CDPSession} client\n   * @param {?Frame} parentFrame\n   * @param {string} frameId\n   */\n  constructor(frameManager, client, parentFrame, frameId) {\n    this._frameManager = frameManager;\n    this._client = client;\n    this._parentFrame = parentFrame;\n    this._url = '';\n    this._id = frameId;\n    this._detached = false;\n    this._loaderId = '';\n    /** @type {!Set<string>} */\n\n    this._lifecycleEvents = new Set();\n    /** @type {!DOMWorld} */\n\n    this._mainWorld = new DOMWorld(frameManager, this, frameManager._timeoutSettings);\n    /** @type {!DOMWorld} */\n\n    this._secondaryWorld = new DOMWorld(frameManager, this, frameManager._timeoutSettings);\n    /** @type {!Set<!Frame>} */\n\n    this._childFrames = new Set();\n    if (this._parentFrame) this._parentFrame._childFrames.add(this);\n  }\n  /**\n   * @param {string} url\n   * @param {!{referer?: string, timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n\n\n  async goto(url, options) {\n    return await this._frameManager.navigateFrame(this, url, options);\n  }\n  /**\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n\n\n  async waitForNavigation(options) {\n    return await this._frameManager.waitForFrameNavigation(this, options);\n  }\n  /**\n   * @return {!Promise<!ExecutionContext>}\n   */\n\n\n  executionContext() {\n    return this._mainWorld.executionContext();\n  }\n  /**\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n\n\n  async evaluateHandle(pageFunction, ...args) {\n    return this._mainWorld.evaluateHandle(pageFunction, ...args);\n  }\n  /**\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<*>}\n   */\n\n\n  async evaluate(pageFunction, ...args) {\n    return this._mainWorld.evaluate(pageFunction, ...args);\n  }\n  /**\n   * @param {string} selector\n   * @return {!Promise<?Puppeteer.ElementHandle>}\n   */\n\n\n  async $(selector) {\n    return this._mainWorld.$(selector);\n  }\n  /**\n   * @param {string} expression\n   * @return {!Promise<!Array<!Puppeteer.ElementHandle>>}\n   */\n\n\n  async $x(expression) {\n    return this._mainWorld.$x(expression);\n  }\n  /**\n   * @param {string} selector\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n\n\n  async $eval(selector, pageFunction, ...args) {\n    return this._mainWorld.$eval(selector, pageFunction, ...args);\n  }\n  /**\n   * @param {string} selector\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n\n\n  async $$eval(selector, pageFunction, ...args) {\n    return this._mainWorld.$$eval(selector, pageFunction, ...args);\n  }\n  /**\n   * @param {string} selector\n   * @return {!Promise<!Array<!Puppeteer.ElementHandle>>}\n   */\n\n\n  async $$(selector) {\n    return this._mainWorld.$$(selector);\n  }\n  /**\n   * @return {!Promise<String>}\n   */\n\n\n  async content() {\n    return this._secondaryWorld.content();\n  }\n  /**\n   * @param {string} html\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   */\n\n\n  async setContent(html, options = {}) {\n    return this._secondaryWorld.setContent(html, options);\n  }\n  /**\n   * @return {string}\n   */\n\n\n  name() {\n    return this._name || '';\n  }\n  /**\n   * @return {string}\n   */\n\n\n  url() {\n    return this._url;\n  }\n  /**\n   * @return {?Frame}\n   */\n\n\n  parentFrame() {\n    return this._parentFrame;\n  }\n  /**\n   * @return {!Array.<!Frame>}\n   */\n\n\n  childFrames() {\n    return Array.from(this._childFrames);\n  }\n  /**\n   * @return {boolean}\n   */\n\n\n  isDetached() {\n    return this._detached;\n  }\n  /**\n   * @param {!{url?: string, path?: string, content?: string, type?: string}} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n\n\n  async addScriptTag(options) {\n    return this._mainWorld.addScriptTag(options);\n  }\n  /**\n   * @param {!{url?: string, path?: string, content?: string}} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n\n\n  async addStyleTag(options) {\n    return this._mainWorld.addStyleTag(options);\n  }\n  /**\n   * @param {string} selector\n   * @param {!{delay?: number, button?: \"left\"|\"right\"|\"middle\", clickCount?: number}=} options\n   */\n\n\n  async click(selector, options) {\n    return this._secondaryWorld.click(selector, options);\n  }\n  /**\n   * @param {string} selector\n   */\n\n\n  async focus(selector) {\n    return this._secondaryWorld.focus(selector);\n  }\n  /**\n   * @param {string} selector\n   */\n\n\n  async hover(selector) {\n    return this._secondaryWorld.hover(selector);\n  }\n  /**\n  * @param {string} selector\n  * @param {!Array<string>} values\n  * @return {!Promise<!Array<string>>}\n  */\n\n\n  select(selector, ...values) {\n    return this._secondaryWorld.select(selector, ...values);\n  }\n  /**\n   * @param {string} selector\n   */\n\n\n  async tap(selector) {\n    return this._secondaryWorld.tap(selector);\n  }\n  /**\n   * @param {string} selector\n   * @param {string} text\n   * @param {{delay: (number|undefined)}=} options\n   */\n\n\n  async type(selector, text, options) {\n    return this._mainWorld.type(selector, text, options);\n  }\n  /**\n   * @param {(string|number|Function)} selectorOrFunctionOrTimeout\n   * @param {!Object=} options\n   * @param {!Array<*>} args\n   * @return {!Promise<?Puppeteer.JSHandle>}\n   */\n\n\n  waitFor(selectorOrFunctionOrTimeout, options = {}, ...args) {\n    const xPathPattern = '//';\n\n    if (helper.isString(selectorOrFunctionOrTimeout)) {\n      const string =\n      /** @type {string} */\n      selectorOrFunctionOrTimeout;\n      if (string.startsWith(xPathPattern)) return this.waitForXPath(string, options);\n      return this.waitForSelector(string, options);\n    }\n\n    if (helper.isNumber(selectorOrFunctionOrTimeout)) return new Promise(fulfill => setTimeout(fulfill,\n    /** @type {number} */\n    selectorOrFunctionOrTimeout));\n    if (typeof selectorOrFunctionOrTimeout === 'function') return this.waitForFunction(selectorOrFunctionOrTimeout, options, ...args);\n    return Promise.reject(new Error('Unsupported target type: ' + typeof selectorOrFunctionOrTimeout));\n  }\n  /**\n   * @param {string} selector\n   * @param {!{visible?: boolean, hidden?: boolean, timeout?: number}=} options\n   * @return {!Promise<?Puppeteer.ElementHandle>}\n   */\n\n\n  async waitForSelector(selector, options) {\n    const handle = await this._secondaryWorld.waitForSelector(selector, options);\n    if (!handle) return null;\n    const mainExecutionContext = await this._mainWorld.executionContext();\n    const result = await mainExecutionContext._adoptElementHandle(handle);\n    await handle.dispose();\n    return result;\n  }\n  /**\n   * @param {string} xpath\n   * @param {!{visible?: boolean, hidden?: boolean, timeout?: number}=} options\n   * @return {!Promise<?Puppeteer.ElementHandle>}\n   */\n\n\n  async waitForXPath(xpath, options) {\n    const handle = await this._secondaryWorld.waitForXPath(xpath, options);\n    if (!handle) return null;\n    const mainExecutionContext = await this._mainWorld.executionContext();\n    const result = await mainExecutionContext._adoptElementHandle(handle);\n    await handle.dispose();\n    return result;\n  }\n  /**\n   * @param {Function|string} pageFunction\n   * @param {!{polling?: string|number, timeout?: number}=} options\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n\n\n  waitForFunction(pageFunction, options = {}, ...args) {\n    return this._mainWorld.waitForFunction(pageFunction, options, ...args);\n  }\n  /**\n   * @return {!Promise<string>}\n   */\n\n\n  async title() {\n    return this._secondaryWorld.title();\n  }\n  /**\n   * @param {!Protocol.Page.Frame} framePayload\n   */\n\n\n  _navigated(framePayload) {\n    this._name = framePayload.name; // TODO(lushnikov): remove this once requestInterception has loaderId exposed.\n\n    this._navigationURL = framePayload.url;\n    this._url = framePayload.url;\n  }\n  /**\n   * @param {string} url\n   */\n\n\n  _navigatedWithinDocument(url) {\n    this._url = url;\n  }\n  /**\n   * @param {string} loaderId\n   * @param {string} name\n   */\n\n\n  _onLifecycleEvent(loaderId, name) {\n    if (name === 'init') {\n      this._loaderId = loaderId;\n\n      this._lifecycleEvents.clear();\n    }\n\n    this._lifecycleEvents.add(name);\n  }\n\n  _onLoadingStopped() {\n    this._lifecycleEvents.add('DOMContentLoaded');\n\n    this._lifecycleEvents.add('load');\n  }\n\n  _detach() {\n    this._detached = true;\n\n    this._mainWorld._detach();\n\n    this._secondaryWorld._detach();\n\n    if (this._parentFrame) this._parentFrame._childFrames.delete(this);\n    this._parentFrame = null;\n  }\n\n}\n\nfunction assertNoLegacyNavigationOptions(options) {\n  assert(options['networkIdleTimeout'] === undefined, 'ERROR: networkIdleTimeout option is no longer supported.');\n  assert(options['networkIdleInflight'] === undefined, 'ERROR: networkIdleInflight option is no longer supported.');\n  assert(options.waitUntil !== 'networkidle', 'ERROR: \"networkidle\" option is no longer supported. Use \"networkidle2\" instead');\n}\n\nmodule.exports = {\n  FrameManager,\n  Frame\n};","map":{"version":3,"sources":["/Users/marshoward/Development/code/river/frontend/app/node_modules/puppeteer/lib/FrameManager.js"],"names":["EventEmitter","require","helper","assert","debugError","Events","ExecutionContext","EVALUATION_SCRIPT_URL","LifecycleWatcher","DOMWorld","NetworkManager","UTILITY_WORLD_NAME","FrameManager","constructor","client","page","ignoreHTTPSErrors","timeoutSettings","_client","_page","_networkManager","_timeoutSettings","_frames","Map","_contextIdToContext","_isolatedWorlds","Set","on","event","_onFrameAttached","frameId","parentFrameId","_onFrameNavigated","frame","_onFrameNavigatedWithinDocument","url","_onFrameDetached","_onFrameStoppedLoading","_onExecutionContextCreated","context","_onExecutionContextDestroyed","executionContextId","_onExecutionContextsCleared","_onLifecycleEvent","initialize","frameTree","Promise","all","send","_handleFrameTree","enabled","then","_ensureIsolatedWorld","networkManager","navigateFrame","options","assertNoLegacyNavigationOptions","referer","extraHTTPHeaders","waitUntil","timeout","navigationTimeout","watcher","ensureNewDocumentNavigation","error","race","navigate","_id","timeoutOrTerminationPromise","newDocumentNavigationPromise","sameDocumentNavigationPromise","dispose","navigationResponse","referrer","response","loaderId","errorText","Error","waitForFrameNavigation","get","name","emit","LifecycleEvent","_onLoadingStopped","parentId","id","childFrames","child","mainFrame","_mainFrame","frames","Array","from","values","has","parentFrame","Frame","set","FrameAttached","framePayload","isMainFrame","_removeFramesRecursively","delete","_navigated","FrameNavigated","add","source","worldName","map","grantUniveralAccess","catch","_navigatedWithinDocument","FrameNavigatedWithinDocument","contextPayload","auxData","world","_mainWorld","_secondaryWorld","_hasContext","_setContext","_world","clear","executionContextById","contextId","_detach","FrameDetached","frameManager","_frameManager","_parentFrame","_url","_detached","_loaderId","_lifecycleEvents","_childFrames","goto","waitForNavigation","executionContext","evaluateHandle","pageFunction","args","evaluate","$","selector","$x","expression","$eval","$$eval","$$","content","setContent","html","_name","isDetached","addScriptTag","addStyleTag","click","focus","hover","select","tap","type","text","waitFor","selectorOrFunctionOrTimeout","xPathPattern","isString","string","startsWith","waitForXPath","waitForSelector","isNumber","fulfill","setTimeout","waitForFunction","reject","handle","mainExecutionContext","result","_adoptElementHandle","xpath","title","_navigationURL","undefined","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst EventEmitter = require('events');\nconst {helper, assert, debugError} = require('./helper');\nconst {Events} = require('./Events');\nconst {ExecutionContext, EVALUATION_SCRIPT_URL} = require('./ExecutionContext');\nconst {LifecycleWatcher} = require('./LifecycleWatcher');\nconst {DOMWorld} = require('./DOMWorld');\nconst {NetworkManager} = require('./NetworkManager');\n\nconst UTILITY_WORLD_NAME = '__puppeteer_utility_world__';\n\nclass FrameManager extends EventEmitter {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Puppeteer.Page} page\n   * @param {boolean} ignoreHTTPSErrors\n   * @param {!Puppeteer.TimeoutSettings} timeoutSettings\n   */\n  constructor(client, page, ignoreHTTPSErrors, timeoutSettings) {\n    super();\n    this._client = client;\n    this._page = page;\n    this._networkManager = new NetworkManager(client, ignoreHTTPSErrors, this);\n    this._timeoutSettings = timeoutSettings;\n    /** @type {!Map<string, !Frame>} */\n    this._frames = new Map();\n    /** @type {!Map<number, !ExecutionContext>} */\n    this._contextIdToContext = new Map();\n    /** @type {!Set<string>} */\n    this._isolatedWorlds = new Set();\n\n    this._client.on('Page.frameAttached', event => this._onFrameAttached(event.frameId, event.parentFrameId));\n    this._client.on('Page.frameNavigated', event => this._onFrameNavigated(event.frame));\n    this._client.on('Page.navigatedWithinDocument', event => this._onFrameNavigatedWithinDocument(event.frameId, event.url));\n    this._client.on('Page.frameDetached', event => this._onFrameDetached(event.frameId));\n    this._client.on('Page.frameStoppedLoading', event => this._onFrameStoppedLoading(event.frameId));\n    this._client.on('Runtime.executionContextCreated', event => this._onExecutionContextCreated(event.context));\n    this._client.on('Runtime.executionContextDestroyed', event => this._onExecutionContextDestroyed(event.executionContextId));\n    this._client.on('Runtime.executionContextsCleared', event => this._onExecutionContextsCleared());\n    this._client.on('Page.lifecycleEvent', event => this._onLifecycleEvent(event));\n  }\n\n  async initialize() {\n    const [,{frameTree}] = await Promise.all([\n      this._client.send('Page.enable'),\n      this._client.send('Page.getFrameTree'),\n    ]);\n    this._handleFrameTree(frameTree);\n    await Promise.all([\n      this._client.send('Page.setLifecycleEventsEnabled', { enabled: true }),\n      this._client.send('Runtime.enable', {}).then(() => this._ensureIsolatedWorld(UTILITY_WORLD_NAME)),\n      this._networkManager.initialize(),\n    ]);\n  }\n\n  /**\n   * @return {!NetworkManager}\n   */\n  networkManager() {\n    return this._networkManager;\n  }\n\n  /**\n   * @param {!Puppeteer.Frame} frame\n   * @param {string} url\n   * @param {!{referer?: string, timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  async navigateFrame(frame, url, options = {}) {\n    assertNoLegacyNavigationOptions(options);\n    const {\n      referer = this._networkManager.extraHTTPHeaders()['referer'],\n      waitUntil = ['load'],\n      timeout = this._timeoutSettings.navigationTimeout(),\n    } = options;\n\n    const watcher = new LifecycleWatcher(this, frame, waitUntil, timeout);\n    let ensureNewDocumentNavigation = false;\n    let error = await Promise.race([\n      navigate(this._client, url, referer, frame._id),\n      watcher.timeoutOrTerminationPromise(),\n    ]);\n    if (!error) {\n      error = await Promise.race([\n        watcher.timeoutOrTerminationPromise(),\n        ensureNewDocumentNavigation ? watcher.newDocumentNavigationPromise() : watcher.sameDocumentNavigationPromise(),\n      ]);\n    }\n    watcher.dispose();\n    if (error)\n      throw error;\n    return watcher.navigationResponse();\n\n    /**\n     * @param {!Puppeteer.CDPSession} client\n     * @param {string} url\n     * @param {string} referrer\n     * @param {string} frameId\n     * @return {!Promise<?Error>}\n     */\n    async function navigate(client, url, referrer, frameId) {\n      try {\n        const response = await client.send('Page.navigate', {url, referrer, frameId});\n        ensureNewDocumentNavigation = !!response.loaderId;\n        return response.errorText ? new Error(`${response.errorText} at ${url}`) : null;\n      } catch (error) {\n        return error;\n      }\n    }\n  }\n\n  /**\n   * @param {!Puppeteer.Frame} frame\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  async waitForFrameNavigation(frame, options = {}) {\n    assertNoLegacyNavigationOptions(options);\n    const {\n      waitUntil = ['load'],\n      timeout = this._timeoutSettings.navigationTimeout(),\n    } = options;\n    const watcher = new LifecycleWatcher(this, frame, waitUntil, timeout);\n    const error = await Promise.race([\n      watcher.timeoutOrTerminationPromise(),\n      watcher.sameDocumentNavigationPromise(),\n      watcher.newDocumentNavigationPromise()\n    ]);\n    watcher.dispose();\n    if (error)\n      throw error;\n    return watcher.navigationResponse();\n  }\n\n  /**\n   * @param {!Protocol.Page.lifecycleEventPayload} event\n   */\n  _onLifecycleEvent(event) {\n    const frame = this._frames.get(event.frameId);\n    if (!frame)\n      return;\n    frame._onLifecycleEvent(event.loaderId, event.name);\n    this.emit(Events.FrameManager.LifecycleEvent, frame);\n  }\n\n  /**\n   * @param {string} frameId\n   */\n  _onFrameStoppedLoading(frameId) {\n    const frame = this._frames.get(frameId);\n    if (!frame)\n      return;\n    frame._onLoadingStopped();\n    this.emit(Events.FrameManager.LifecycleEvent, frame);\n  }\n\n  /**\n   * @param {!Protocol.Page.FrameTree} frameTree\n   */\n  _handleFrameTree(frameTree) {\n    if (frameTree.frame.parentId)\n      this._onFrameAttached(frameTree.frame.id, frameTree.frame.parentId);\n    this._onFrameNavigated(frameTree.frame);\n    if (!frameTree.childFrames)\n      return;\n\n    for (const child of frameTree.childFrames)\n      this._handleFrameTree(child);\n  }\n\n  /**\n   * @return {!Puppeteer.Page}\n   */\n  page() {\n    return this._page;\n  }\n\n  /**\n   * @return {!Frame}\n   */\n  mainFrame() {\n    return this._mainFrame;\n  }\n\n  /**\n   * @return {!Array<!Frame>}\n   */\n  frames() {\n    return Array.from(this._frames.values());\n  }\n\n  /**\n   * @param {!string} frameId\n   * @return {?Frame}\n   */\n  frame(frameId) {\n    return this._frames.get(frameId) || null;\n  }\n\n  /**\n   * @param {string} frameId\n   * @param {?string} parentFrameId\n   */\n  _onFrameAttached(frameId, parentFrameId) {\n    if (this._frames.has(frameId))\n      return;\n    assert(parentFrameId);\n    const parentFrame = this._frames.get(parentFrameId);\n    const frame = new Frame(this, this._client, parentFrame, frameId);\n    this._frames.set(frame._id, frame);\n    this.emit(Events.FrameManager.FrameAttached, frame);\n  }\n\n  /**\n   * @param {!Protocol.Page.Frame} framePayload\n   */\n  _onFrameNavigated(framePayload) {\n    const isMainFrame = !framePayload.parentId;\n    let frame = isMainFrame ? this._mainFrame : this._frames.get(framePayload.id);\n    assert(isMainFrame || frame, 'We either navigate top level or have old version of the navigated frame');\n\n    // Detach all child frames first.\n    if (frame) {\n      for (const child of frame.childFrames())\n        this._removeFramesRecursively(child);\n    }\n\n    // Update or create main frame.\n    if (isMainFrame) {\n      if (frame) {\n        // Update frame id to retain frame identity on cross-process navigation.\n        this._frames.delete(frame._id);\n        frame._id = framePayload.id;\n      } else {\n        // Initial main frame navigation.\n        frame = new Frame(this, this._client, null, framePayload.id);\n      }\n      this._frames.set(framePayload.id, frame);\n      this._mainFrame = frame;\n    }\n\n    // Update frame payload.\n    frame._navigated(framePayload);\n\n    this.emit(Events.FrameManager.FrameNavigated, frame);\n  }\n\n  /**\n   * @param {string} name\n   */\n  async _ensureIsolatedWorld(name) {\n    if (this._isolatedWorlds.has(name))\n      return;\n    this._isolatedWorlds.add(name);\n    await this._client.send('Page.addScriptToEvaluateOnNewDocument', {\n      source: `//# sourceURL=${EVALUATION_SCRIPT_URL}`,\n      worldName: name,\n    }),\n    await Promise.all(this.frames().map(frame => this._client.send('Page.createIsolatedWorld', {\n      frameId: frame._id,\n      grantUniveralAccess: true,\n      worldName: name,\n    }).catch(debugError))); // frames might be removed before we send this\n  }\n\n  /**\n   * @param {string} frameId\n   * @param {string} url\n   */\n  _onFrameNavigatedWithinDocument(frameId, url) {\n    const frame = this._frames.get(frameId);\n    if (!frame)\n      return;\n    frame._navigatedWithinDocument(url);\n    this.emit(Events.FrameManager.FrameNavigatedWithinDocument, frame);\n    this.emit(Events.FrameManager.FrameNavigated, frame);\n  }\n\n  /**\n   * @param {string} frameId\n   */\n  _onFrameDetached(frameId) {\n    const frame = this._frames.get(frameId);\n    if (frame)\n      this._removeFramesRecursively(frame);\n  }\n\n  _onExecutionContextCreated(contextPayload) {\n    const frameId = contextPayload.auxData ? contextPayload.auxData.frameId : null;\n    const frame = this._frames.get(frameId) || null;\n    let world = null;\n    if (frame) {\n      if (contextPayload.auxData && !!contextPayload.auxData['isDefault']) {\n        world = frame._mainWorld;\n      } else if (contextPayload.name === UTILITY_WORLD_NAME && !frame._secondaryWorld._hasContext()) {\n        // In case of multiple sessions to the same target, there's a race between\n        // connections so we might end up creating multiple isolated worlds.\n        // We can use either.\n        world = frame._secondaryWorld;\n      }\n    }\n    if (contextPayload.auxData && contextPayload.auxData['type'] === 'isolated')\n      this._isolatedWorlds.add(contextPayload.name);\n    /** @type {!ExecutionContext} */\n    const context = new ExecutionContext(this._client, contextPayload, world);\n    if (world)\n      world._setContext(context);\n    this._contextIdToContext.set(contextPayload.id, context);\n  }\n\n  /**\n   * @param {number} executionContextId\n   */\n  _onExecutionContextDestroyed(executionContextId) {\n    const context = this._contextIdToContext.get(executionContextId);\n    if (!context)\n      return;\n    this._contextIdToContext.delete(executionContextId);\n    if (context._world)\n      context._world._setContext(null);\n  }\n\n  _onExecutionContextsCleared() {\n    for (const context of this._contextIdToContext.values()) {\n      if (context._world)\n        context._world._setContext(null);\n    }\n    this._contextIdToContext.clear();\n  }\n\n  /**\n   * @param {number} contextId\n   * @return {!ExecutionContext}\n   */\n  executionContextById(contextId) {\n    const context = this._contextIdToContext.get(contextId);\n    assert(context, 'INTERNAL ERROR: missing context with id = ' + contextId);\n    return context;\n  }\n\n  /**\n   * @param {!Frame} frame\n   */\n  _removeFramesRecursively(frame) {\n    for (const child of frame.childFrames())\n      this._removeFramesRecursively(child);\n    frame._detach();\n    this._frames.delete(frame._id);\n    this.emit(Events.FrameManager.FrameDetached, frame);\n  }\n}\n\n/**\n * @unrestricted\n */\nclass Frame {\n  /**\n   * @param {!FrameManager} frameManager\n   * @param {!Puppeteer.CDPSession} client\n   * @param {?Frame} parentFrame\n   * @param {string} frameId\n   */\n  constructor(frameManager, client, parentFrame, frameId) {\n    this._frameManager = frameManager;\n    this._client = client;\n    this._parentFrame = parentFrame;\n    this._url = '';\n    this._id = frameId;\n    this._detached = false;\n\n    this._loaderId = '';\n    /** @type {!Set<string>} */\n    this._lifecycleEvents = new Set();\n    /** @type {!DOMWorld} */\n    this._mainWorld = new DOMWorld(frameManager, this, frameManager._timeoutSettings);\n    /** @type {!DOMWorld} */\n    this._secondaryWorld = new DOMWorld(frameManager, this, frameManager._timeoutSettings);\n\n    /** @type {!Set<!Frame>} */\n    this._childFrames = new Set();\n    if (this._parentFrame)\n      this._parentFrame._childFrames.add(this);\n  }\n\n  /**\n   * @param {string} url\n   * @param {!{referer?: string, timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  async goto(url, options) {\n    return await this._frameManager.navigateFrame(this, url, options);\n  }\n\n  /**\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   * @return {!Promise<?Puppeteer.Response>}\n   */\n  async waitForNavigation(options) {\n    return await this._frameManager.waitForFrameNavigation(this, options);\n  }\n\n  /**\n   * @return {!Promise<!ExecutionContext>}\n   */\n  executionContext() {\n    return this._mainWorld.executionContext();\n  }\n\n  /**\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n  async evaluateHandle(pageFunction, ...args) {\n    return this._mainWorld.evaluateHandle(pageFunction, ...args);\n  }\n\n  /**\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<*>}\n   */\n  async evaluate(pageFunction, ...args) {\n    return this._mainWorld.evaluate(pageFunction, ...args);\n  }\n\n  /**\n   * @param {string} selector\n   * @return {!Promise<?Puppeteer.ElementHandle>}\n   */\n  async $(selector) {\n    return this._mainWorld.$(selector);\n  }\n\n  /**\n   * @param {string} expression\n   * @return {!Promise<!Array<!Puppeteer.ElementHandle>>}\n   */\n  async $x(expression) {\n    return this._mainWorld.$x(expression);\n  }\n\n  /**\n   * @param {string} selector\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  async $eval(selector, pageFunction, ...args) {\n    return this._mainWorld.$eval(selector, pageFunction, ...args);\n  }\n\n  /**\n   * @param {string} selector\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  async $$eval(selector, pageFunction, ...args) {\n    return this._mainWorld.$$eval(selector, pageFunction, ...args);\n  }\n\n  /**\n   * @param {string} selector\n   * @return {!Promise<!Array<!Puppeteer.ElementHandle>>}\n   */\n  async $$(selector) {\n    return this._mainWorld.$$(selector);\n  }\n\n  /**\n   * @return {!Promise<String>}\n   */\n  async content() {\n    return this._secondaryWorld.content();\n  }\n\n  /**\n   * @param {string} html\n   * @param {!{timeout?: number, waitUntil?: string|!Array<string>}=} options\n   */\n  async setContent(html, options = {}) {\n    return this._secondaryWorld.setContent(html, options);\n  }\n\n  /**\n   * @return {string}\n   */\n  name() {\n    return this._name || '';\n  }\n\n  /**\n   * @return {string}\n   */\n  url() {\n    return this._url;\n  }\n\n  /**\n   * @return {?Frame}\n   */\n  parentFrame() {\n    return this._parentFrame;\n  }\n\n  /**\n   * @return {!Array.<!Frame>}\n   */\n  childFrames() {\n    return Array.from(this._childFrames);\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isDetached() {\n    return this._detached;\n  }\n\n  /**\n   * @param {!{url?: string, path?: string, content?: string, type?: string}} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  async addScriptTag(options) {\n    return this._mainWorld.addScriptTag(options);\n  }\n\n  /**\n   * @param {!{url?: string, path?: string, content?: string}} options\n   * @return {!Promise<!Puppeteer.ElementHandle>}\n   */\n  async addStyleTag(options) {\n    return this._mainWorld.addStyleTag(options);\n  }\n\n  /**\n   * @param {string} selector\n   * @param {!{delay?: number, button?: \"left\"|\"right\"|\"middle\", clickCount?: number}=} options\n   */\n  async click(selector, options) {\n    return this._secondaryWorld.click(selector, options);\n  }\n\n  /**\n   * @param {string} selector\n   */\n  async focus(selector) {\n    return this._secondaryWorld.focus(selector);\n  }\n\n  /**\n   * @param {string} selector\n   */\n  async hover(selector) {\n    return this._secondaryWorld.hover(selector);\n  }\n\n  /**\n  * @param {string} selector\n  * @param {!Array<string>} values\n  * @return {!Promise<!Array<string>>}\n  */\n  select(selector, ...values){\n    return this._secondaryWorld.select(selector, ...values);\n  }\n\n  /**\n   * @param {string} selector\n   */\n  async tap(selector) {\n    return this._secondaryWorld.tap(selector);\n  }\n\n  /**\n   * @param {string} selector\n   * @param {string} text\n   * @param {{delay: (number|undefined)}=} options\n   */\n  async type(selector, text, options) {\n    return this._mainWorld.type(selector, text, options);\n  }\n\n  /**\n   * @param {(string|number|Function)} selectorOrFunctionOrTimeout\n   * @param {!Object=} options\n   * @param {!Array<*>} args\n   * @return {!Promise<?Puppeteer.JSHandle>}\n   */\n  waitFor(selectorOrFunctionOrTimeout, options = {}, ...args) {\n    const xPathPattern = '//';\n\n    if (helper.isString(selectorOrFunctionOrTimeout)) {\n      const string = /** @type {string} */ (selectorOrFunctionOrTimeout);\n      if (string.startsWith(xPathPattern))\n        return this.waitForXPath(string, options);\n      return this.waitForSelector(string, options);\n    }\n    if (helper.isNumber(selectorOrFunctionOrTimeout))\n      return new Promise(fulfill => setTimeout(fulfill, /** @type {number} */ (selectorOrFunctionOrTimeout)));\n    if (typeof selectorOrFunctionOrTimeout === 'function')\n      return this.waitForFunction(selectorOrFunctionOrTimeout, options, ...args);\n    return Promise.reject(new Error('Unsupported target type: ' + (typeof selectorOrFunctionOrTimeout)));\n  }\n\n  /**\n   * @param {string} selector\n   * @param {!{visible?: boolean, hidden?: boolean, timeout?: number}=} options\n   * @return {!Promise<?Puppeteer.ElementHandle>}\n   */\n  async waitForSelector(selector, options) {\n    const handle = await this._secondaryWorld.waitForSelector(selector, options);\n    if (!handle)\n      return null;\n    const mainExecutionContext = await this._mainWorld.executionContext();\n    const result = await mainExecutionContext._adoptElementHandle(handle);\n    await handle.dispose();\n    return result;\n  }\n\n  /**\n   * @param {string} xpath\n   * @param {!{visible?: boolean, hidden?: boolean, timeout?: number}=} options\n   * @return {!Promise<?Puppeteer.ElementHandle>}\n   */\n  async waitForXPath(xpath, options) {\n    const handle = await this._secondaryWorld.waitForXPath(xpath, options);\n    if (!handle)\n      return null;\n    const mainExecutionContext = await this._mainWorld.executionContext();\n    const result = await mainExecutionContext._adoptElementHandle(handle);\n    await handle.dispose();\n    return result;\n  }\n\n  /**\n   * @param {Function|string} pageFunction\n   * @param {!{polling?: string|number, timeout?: number}=} options\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n  waitForFunction(pageFunction, options = {}, ...args) {\n    return this._mainWorld.waitForFunction(pageFunction, options, ...args);\n  }\n\n  /**\n   * @return {!Promise<string>}\n   */\n  async title() {\n    return this._secondaryWorld.title();\n  }\n\n  /**\n   * @param {!Protocol.Page.Frame} framePayload\n   */\n  _navigated(framePayload) {\n    this._name = framePayload.name;\n    // TODO(lushnikov): remove this once requestInterception has loaderId exposed.\n    this._navigationURL = framePayload.url;\n    this._url = framePayload.url;\n  }\n\n  /**\n   * @param {string} url\n   */\n  _navigatedWithinDocument(url) {\n    this._url = url;\n  }\n\n  /**\n   * @param {string} loaderId\n   * @param {string} name\n   */\n  _onLifecycleEvent(loaderId, name) {\n    if (name === 'init') {\n      this._loaderId = loaderId;\n      this._lifecycleEvents.clear();\n    }\n    this._lifecycleEvents.add(name);\n  }\n\n  _onLoadingStopped() {\n    this._lifecycleEvents.add('DOMContentLoaded');\n    this._lifecycleEvents.add('load');\n  }\n\n  _detach() {\n    this._detached = true;\n    this._mainWorld._detach();\n    this._secondaryWorld._detach();\n    if (this._parentFrame)\n      this._parentFrame._childFrames.delete(this);\n    this._parentFrame = null;\n  }\n}\n\nfunction assertNoLegacyNavigationOptions(options) {\n  assert(options['networkIdleTimeout'] === undefined, 'ERROR: networkIdleTimeout option is no longer supported.');\n  assert(options['networkIdleInflight'] === undefined, 'ERROR: networkIdleInflight option is no longer supported.');\n  assert(options.waitUntil !== 'networkidle', 'ERROR: \"networkidle\" option is no longer supported. Use \"networkidle2\" instead');\n}\n\nmodule.exports = {FrameManager, Frame};\n"]},"metadata":{},"sourceType":"script"}