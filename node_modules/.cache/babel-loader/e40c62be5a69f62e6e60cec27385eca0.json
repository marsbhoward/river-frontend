{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/searchbox.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { listMovies } from '../actions/movieActions';\nimport MoviesList from './MoviesList';\nimport { Auth0Context } from \"../react-auth0-spa\";\nlet moviesList;\n\nclass Searchbox extends Component {\n  constructor() {\n    super();\n\n    this.loseFocus = () => {\n      this.setState({\n        search: '',\n        open: false\n      });\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        open: true\n      });\n      console.log('true');\n    };\n\n    this.searchMovie = event => {\n      let keyword = event.target.value.toLowerCase();\n      this.setState({\n        search: keyword\n      });\n    };\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return ' ';\n      } else {\n        if (this.props.movieCards === undefined) {\n          window.location.reload();\n        }\n\n        let movieList;\n        movieList = this.props.movieCards.filter(movieCard => {\n          if (this.state.search.length >= 3) {\n            return movieCard;\n          } else {\n            moviesList = '';\n          }\n        }).map((movie, index) => {\n          moviesList = this.props.movieCards.map((movie, index) => {\n            return React.createElement(MoviesList, {\n              key: index,\n              search: this.state.search,\n              movie: movie,\n              movieID: index + 1,\n              cardStyle: \"height: -webkit-fill-available; overflow: hidden;\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63\n              },\n              __self: this\n            });\n          });\n        });\n      }\n    };\n\n    this.state = {\n      search: '',\n      MoiveData: \"\",\n      open: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.listMovies();\n  }\n\n  render() {\n    let searchState = '';\n    let setClass = '';\n\n    if (this.state.open === false) {\n      searchState = React.createElement(\"p\", {\n        className: 'searchBar',\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \" Search \");\n      setClass = '';\n    } else {\n      searchState = React.createElement(\"input\", {\n        type: \"text\",\n        id: \"name-input\",\n        className: \"searchBar\",\n        placeholder: \"Search by title\",\n        onChange: e => this.searchMovie(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n      setClass = 'searchBackground';\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, searchState, this.handleLoading(), React.createElement(\"div\", {\n      className: setClass,\n      onBlur: this.loseFocus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, moviesList)));\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    loading: state.MoviesReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  listMovies\n})(Searchbox);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/searchbox.js"],"names":["React","Component","connect","listMovies","MoviesList","Auth0Context","moviesList","Searchbox","constructor","loseFocus","setState","search","open","handleClick","console","log","searchMovie","event","keyword","target","value","toLowerCase","handleLoading","props","loading","movieCards","undefined","window","location","reload","movieList","filter","movieCard","state","length","map","movie","index","MoiveData","componentDidMount","render","searchState","setClass","e","mapDispatchToProps","MoviesReducer","movies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { listMovies } from '../actions/movieActions'\nimport MoviesList from './MoviesList';\nimport { Auth0Context } from \"../react-auth0-spa\";\n\nlet  moviesList\n\nclass Searchbox extends Component {\n constructor(){\n    super();\n\n    this.state={\n      search:'',\n      MoiveData: \"\",\n      open: false\n    };\n  }\n\n\n  componentDidMount() {\n    this.props.listMovies()\n  }\n\n  loseFocus=()=>{\n    this.setState({\n      search:'',\n      open: false\n    })  \n  }\n\n  handleClick=()=>{\n    this.setState({open:true})\n    console.log('true')\n  }\n\n  searchMovie=(event)=>{\n    let keyword = event.target.value.toLowerCase();\n    this.setState({search:keyword})\n    \n  }  \t\n\n  handleLoading = () => {\n    if(this.props.loading) {\n      return ' '\n    } \n    else {\n      if (this.props.movieCards === undefined){\n        window.location.reload();\n      } \n      let movieList\n    \n\n      movieList = this.props.movieCards.filter(movieCard=>{\n      if(this.state.search.length >= 3 ){\n            return movieCard\n      }\n      else{\n        moviesList = ''\n      }        \n      }).map((movie,index)=>{\n        moviesList = this.props.movieCards.map((movie, index) => {\n          return <MoviesList key={index} search={this.state.search}  movie={movie} movieID={(index+1)} cardStyle='height: -webkit-fill-available;\n          overflow: hidden;'/>\n        })\n      })\n    }\n  }\n\n  render(){\n    let searchState=''\n    let setClass = ''\n    if (this.state.open === false){\n      searchState = <p className={'searchBar'} onClick={this.handleClick}> Search </p>\n      setClass= ''\n    } \n    else{\n      searchState = <input type=\"text\" id='name-input' className=\"searchBar\" placeholder=\"Search by title\" onChange={(e)=>this.searchMovie(e)} />\n      setClass = 'searchBackground'\n    }\n  \treturn(\n  \t\t<div>\n  \t\t\t{searchState}\n  \t\t\t{this.handleLoading()}\n        <div className={setClass} onBlur={this.loseFocus}>\n          <div className=\"search-list\">\n              {moviesList}\n          </div>\n        </div>\n  \t\t</div>\n  \t)\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    loading: state.MoviesReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {listMovies})(Searchbox)"]},"metadata":{},"sourceType":"module"}