{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/DarkmodeSwitch.js\";\nimport React, { useState, useEffect } from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { withStyles } from '@material-ui/core/styles';\nimport { purple } from '@material-ui/core/colors';\n\nconst DarkmodeSwitch = props => {\n  const [count, setCount] = useState([0]);\n  const [state, setState] = useState({\n    DarkmodeChecked: true\n  });\n\n  const handleChange = event => {\n    //returns if dark mode is true or false\n    console.log(event.target.name);\n    console.log(event.target.checked);\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n    console.log(state);\n  };\n\n  const Darkmode = withStyles({\n    switchBase: {\n      color: \"#fe2d56\",\n      '&$checked': {\n        color: '#333438'\n      },\n      '&$checked + $track': {\n        backgroundColor: '#202125'\n      }\n    },\n    checked: {},\n    track: {}\n  })(Switch);\n  return /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Darkmode, {\n      checked: state.DarkmodeChecked,\n      onChange: handleChange,\n      name: \"DarkmodeChecked\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 26\n      }\n    }),\n    label: \"Darkmode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  });\n};\n\nexport default DarkmodeSwitch;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/DarkmodeSwitch.js"],"names":["React","useState","useEffect","FormGroup","FormControlLabel","Switch","withStyles","purple","DarkmodeSwitch","props","count","setCount","state","setState","DarkmodeChecked","handleChange","event","console","log","target","name","checked","Darkmode","switchBase","color","backgroundColor","track"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,0BAAvB;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBV,QAAQ,CAAC,CAAC,CAAD,CAAD,CAAjC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC;AAC/Ba,IAAAA,eAAe,EAAE;AADc,GAAD,CAAlC;;AAIA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,IAAzB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaE,OAAzB;AACAR,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACI,KAAK,CAACG,MAAN,CAAaC,IAAd,GAAqBJ,KAAK,CAACG,MAAN,CAAaE;AAA9C,KAAD,CAAR;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACD,GANH;;AAQA,QAAMU,QAAQ,GAAGhB,UAAU,CAAC;AAC5BiB,IAAAA,UAAU,EAAE;AACRC,MAAAA,KAAK,EAAE,SADC;AAER,mBAAa;AACbA,QAAAA,KAAK,EAAE;AADM,OAFL;AAKR,4BAAsB;AACtBC,QAAAA,eAAe,EAAE;AADK;AALd,KADgB;AAU5BJ,IAAAA,OAAO,EAAE,EAVmB;AAW5BK,IAAAA,KAAK,EAAE;AAXqB,GAAD,CAAV,CAYdrB,MAZc,CAAjB;AAcE,sBAEM,oBAAC,gBAAD;AACI,IAAA,OAAO,eAAE,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEO,KAAK,CAACE,eAAzB;AAA0C,MAAA,QAAQ,EAAEC,YAApD;AAAkE,MAAA,IAAI,EAAC,iBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb;AAEI,IAAA,KAAK,EAAC,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN;AASL,CArCD;;AAwCA,eAAeP,cAAf","sourcesContent":["import React,{ useState, useEffect } from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { withStyles } from '@material-ui/core/styles';\nimport { purple } from '@material-ui/core/colors';\n\nconst DarkmodeSwitch = (props) => { \n    const [count, setCount]= useState([0]);\n    const [state, setState] = useState({\n        DarkmodeChecked: true,\n    });\n\n    const handleChange = (event) => {\n        //returns if dark mode is true or false\n        console.log(event.target.name)\n        console.log(event.target.checked)\n        setState({ ...state, [event.target.name]: event.target.checked });\n        console.log(state)\n      };\n    \n    const Darkmode = withStyles({\n    switchBase: {\n        color: \"#fe2d56\",\n        '&$checked': {\n        color: '#333438',\n        },\n        '&$checked + $track': {\n        backgroundColor: '#202125',\n        },\n    },\n    checked: {},\n    track: {},\n    })(Switch);      \n\n      return (\n       \n            <FormControlLabel\n                control={<Darkmode checked={state.DarkmodeChecked} onChange={handleChange} name=\"DarkmodeChecked\" />}\n                label=\"Darkmode\"\n            />            \n       \n      );\n          \n}\n\n\nexport default DarkmodeSwitch"]},"metadata":{},"sourceType":"module"}