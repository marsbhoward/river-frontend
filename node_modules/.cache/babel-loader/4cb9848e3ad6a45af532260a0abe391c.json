{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/HomePage.js\";\nimport React from 'react';\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction HomePage() {\n  const {\n    isAuthenticated,\n    loginWithRedirect\n  } = useAuth0();\n  const {\n    loading,\n    user\n  } = useAuth0();\n  const history = useHistory();\n  const streamsList = [{\n    id: 1,\n    name: \"netflix\"\n  }, {\n    id: 2,\n    name: \"hulu\"\n  }, {\n    id: 3,\n    name: \"amazon\"\n  }, {\n    id: 4,\n    name: \"hbo\"\n  }, {\n    id: 5,\n    name: \"disney\"\n  }, {\n    id: 6,\n    name: \"showtime\"\n  }, {\n    id: 7,\n    name: \"starz\"\n  }, {\n    id: 8,\n    name: \"cinimax\"\n  }, {\n    id: 9,\n    name: \"dc\"\n  }, {\n    id: 10,\n    name: \"apple\"\n  }, {\n    id: 11,\n    name: \"epix\"\n  }, {\n    id: 12,\n    name: \"cbs\"\n  }, {\n    id: 13,\n    name: \"tbs\"\n  }, {\n    id: 14,\n    name: \"tnt\"\n  }, {\n    id: 15,\n    name: \"shudder\"\n  }, {\n    id: 16,\n    name: \"amc\"\n  }, {\n    id: 17,\n    name: \"fx\"\n  }, {\n    id: 18,\n    name: \"syfy\"\n  }, {\n    id: 19,\n    name: \"ifc\"\n  }];\n  let stlyes = {\n    backgroundImage: \"url('https://raw.githubusercontent.com/marsbhoward/river-frontend/master/src/streams_logos/streamsBackground.png')\"\n  };\n\n  function handleClick() {\n    history.push(\"/streams\");\n  }\n\n  if (loading) {\n    return React.createElement(\"div\", {\n      className: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"home\",\n    style: stlyes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, !isAuthenticated && React.createElement(\"div\", {\n    className: \"home-col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), !isAuthenticated && React.createElement(\"div\", {\n    className: \"home-col-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Find Your Streams\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"River is the pathway to all of your streaming platforms. create an account and you will be able to browse your selected providers movie catalogs, or you can click the streams button to view all available platforms.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), \"Select a movie and you can get the trailer, ratings, and more!\"), React.createElement(\"button\", {\n    onClick: () => loginWithRedirect({}),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Log in\"), React.createElement(\"button\", {\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Streams\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, isAuthenticated && (adapter.createUser(user.email, user.name).then(res => {\n    user.id = res.id;\n    console.log(user);\n  }), adapter.createUserStream(1, 1).then(res => {\n    console.log(user);\n  }), React.createElement(\"div\", {\n    className: \"greeting\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \" Hi \", user.name, \" \")))));\n}\n\nconst adapter = {\n  createUser: (email, username) => {\n    return fetch(`https://cors-anywhere.herokuapp.com/https://river-api.herokuapp.com/users`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        username\n      })\n    }).then(res => res.json());\n  },\n  createUserStream: (user_id, stream_id) => {\n    return fetch(`https://cors-anywhere.herokuapp.com/https://river-api.herokuapp.com/users/1/user_streams`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user_id,\n        stream_id\n      })\n    }).then(resp => resp.json());\n  }\n};\nexport default HomePage;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/HomePage.js"],"names":["React","useAuth0","useHistory","HomePage","isAuthenticated","loginWithRedirect","loading","user","history","streamsList","id","name","stlyes","backgroundImage","handleClick","push","adapter","createUser","email","then","res","console","log","createUserStream","username","fetch","method","headers","body","JSON","stringify","json","user_id","stream_id","resp"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction HomePage() {  \n  const { isAuthenticated, loginWithRedirect} = useAuth0();\n  const { loading, user } = useAuth0();\n  const history = useHistory();\n\n  const streamsList = [\n  {id: 1,name:\"netflix\"},{id: 2,name:\"hulu\"},{id: 3,name:\"amazon\"},\n  {id: 4,name:\"hbo\"},{id: 5,name:\"disney\"},{id: 6,name:\"showtime\"},\n  {id: 7,name:\"starz\"},{id: 8,name:\"cinimax\"},{id: 9,name:\"dc\"},\n  {id: 10,name:\"apple\"},{id: 11,name:\"epix\"},{id: 12,name:\"cbs\"},\n  {id: 13,name:\"tbs\"},{id: 14,name:\"tnt\"},{id: 15,name:\"shudder\"},\n  {id: 16,name:\"amc\"},{id: 17,name:\"fx\"},{id: 18,name:\"syfy\"},{id: 19,name:\"ifc\"}\n  ]\n\n  let stlyes = {\n    backgroundImage: \"url('https://raw.githubusercontent.com/marsbhoward/river-frontend/master/src/streams_logos/streamsBackground.png')\",\n  }\n\n  function handleClick() {\n    history.push(\"/streams\");\n  }\n\n\n  if (loading) {\n    return <div className = \"home\">Loading...</div>;\n  }\n\n \n    return (\n    <div>\n        <div className = \"home\" style={stlyes}>\n        {!isAuthenticated && (\n          <div className = \"home-col\"> \n          </div>\n           )}\n           {!isAuthenticated && (\n          <div className = \"home-col-2\"> \n            <h1>Find Your Streams</h1>\n            <p> \n              River is the pathway to all of your streaming platforms.\n              create an account and you will be able to browse your selected providers \n              movie catalogs, or you can click the streams button to view all available platforms. \n              <br/><br/>Select a movie and you can get the trailer, ratings, and more! \n            </p>\n            <button onClick={() => loginWithRedirect({})}>Log in</button>\n            <button onClick={handleClick}>Streams</button>\n          </div>\n          \n        )}    \n      </div>\n      <div>\n         {isAuthenticated && (\n            adapter.createUser(user.email,user.name).then(res=> {\n              user.id = res.id\n              console.log(user)\n            }),\n            adapter.createUserStream(1,1).then(res=> {\n              console.log(user)\n            }),            \n            <div className=\"greeting\">\n              <h2> Hi {user.name} </h2>\n            </div>\n        )}     \n      </div>\n    </div>\n    );\n  }\n\n  const adapter = {\n    createUser: (email,username) => {\n      return fetch(`https://cors-anywhere.herokuapp.com/https://river-api.herokuapp.com/users`, {\n        method: 'POST',\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({email, username})\n      })\n    .then(res => res.json())       \n    },\n\n    createUserStream: (user_id,stream_id) => {\n      return fetch(`https://cors-anywhere.herokuapp.com/https://river-api.herokuapp.com/users/1/user_streams`, {\n        method: 'POST',\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({user_id, stream_id})\n      })\n    .then(resp => resp.json())       \n    }\n  }\n\n\n\nexport default HomePage\n\n"]},"metadata":{},"sourceType":"module"}