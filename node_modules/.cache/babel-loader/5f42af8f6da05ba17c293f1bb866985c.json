{"ast":null,"code":"exports = module.exports = require(\"url\");\n\nif (!exports.normalize) {\n  exports.normalize = function (url, options) {\n    var u = exports.parse(url); // basic validation\n    // (If you really need to validate the URL then do it before calling this method!)\n\n    if (!/(http|https)/.test(u.protocol) || !u.slashes) {\n      return null;\n    } // optional options\n\n\n    options = options || {}; // convert hostname to lower case\n\n    u.hostname = u.hostname.toLowerCase(); // add trailing slash if not set\n\n    if (!u.pathname) {\n      u.pathname = \"/\";\n    } else {\n      // remove dots as described in\n      // http://tools.ietf.org/html/rfc3986#section-5.2.4\n      var ibuf = u.pathname;\n      var obuf = \"\";\n\n      while (ibuf.length) {\n        if (ibuf.substr(0, 2) == \"./\") {\n          ibuf = ibuf.substr(2);\n        } else if (ibuf.substr(0, 3) == \"../\") {\n          ibuf = ibuf.substr(3);\n        } else if (ibuf.substr(0, 3) == \"/./\") {\n          ibuf = \"/\" + ibuf.substr(3);\n        } else if (ibuf == \"/.\") {\n          ibuf = \"/\";\n        } else if (ibuf.substr(0, 4) == \"/../\") {\n          ibuf = \"/\" + ibuf.substr(4);\n          var pos = obuf.lastIndexOf(\"/\");\n\n          if (pos !== -1) {\n            obuf = obuf.substr(0, pos);\n          }\n        } else if (ibuf == \"/..\") {\n          ibuf = \"/\";\n          var pos = obuf.lastIndexOf(\"/\");\n\n          if (pos !== -1) {\n            obuf = obuf.substr(0, pos);\n          }\n        } else if (ibuf == \".\" || ibuf == \"..\") {\n          ibuf = \"\";\n        } else {\n          if (ibuf[0] == \"/\") {\n            ibuf = ibuf.substr(1);\n            obuf += \"/\";\n          }\n\n          var pos = ibuf.indexOf(\"/\");\n\n          if (pos !== -1) {\n            obuf += ibuf.substr(0, pos);\n            ibuf = ibuf.substr(pos);\n          } else {\n            obuf += ibuf;\n            ibuf = \"\";\n          }\n        }\n      } // if last path segment is a directory and not a file\n      // then add a trailing slash\n      // ATTENTION:\n      // The following block would be part of the standard normalization procedure\n      // but a lot of websites have problems with that. E.g. all bit.ly URLs are affected.\n\n      /*var pos1 = obuf.lastIndexOf(\"/\");\n      var pos2 = obuf.lastIndexOf(\".\");\n      if(pos1 < obuf.length-1 && pos2 < pos1) {\n      \tobuf += \"/\";\n      }*/\n      // normalize escape sequences\n\n\n      var segments = obuf.split(\"/\");\n\n      for (var i = 0; i < segments.length; i++) {\n        segments[i] = encodeURIComponent(decodeURIComponent(segments[i]));\n      }\n\n      obuf = segments.join(\"/\");\n\n      if (options.removeIndex) {\n        // remove directory index\n        var pos1 = obuf.lastIndexOf(\"/\");\n        var pos2 = obuf.lastIndexOf(\".\");\n\n        if (pos2 > pos1 && obuf.substring(pos1 + 1, pos2) == \"index\") {\n          obuf = obuf.substr(0, pos1 + 1);\n        }\n      }\n\n      u.pathname = obuf;\n    }\n\n    if (u.query) {\n      var removeKeys = options.removeKeys || [\"phpsessid\", \"utm_source\", \"utm_medium\", \"utm_term\", \"utm_content\", \"utm_campaign\"];\n      var seq = [];\n      u.query.split(\"&\").forEach(function (s) {\n        var pair = s.split(\"=\");\n        var key = pair[0].toLowerCase(); // remove unwanted params\n\n        if (removeKeys.indexOf(key) > -1) return; // there might be multiple = if nonstandard, so go over all\n\n        for (var i = 0; i < pair.length; i++) {\n          // normalize encoding\n          pair[i] = encodeURIComponent(decodeURIComponent(pair[i].replace(/\\+/g, '%20')));\n        }\n\n        seq.push(pair.join(\"=\"));\n      }); // sort query keys in ascending order\n\n      seq.sort(); // rebuild query string\n\n      u.query = seq.join(\"&\");\n    } // rebuild URL with fragment hash (#), user and password\n\n\n    url = u.protocol + \"//\" + u.hostname; // ignore default port\n\n    if (u.port && (u.protocol == \"http:\" && u.port != 80 || u.protocol == \"https:\" && u.port != 443)) {\n      url += \":\" + u.port;\n    }\n\n    url += u.pathname;\n\n    if (u.query) {\n      url += \"?\" + u.query;\n    }\n\n    if (u.hash && u.hash.length > 1) {\n      url += u.hash;\n    }\n\n    return url;\n  };\n}\n\nif (!exports.equals) {\n  exports.equals = function (url1, url2) {\n    return exports.normalize(url1) === exports.normalize(url2);\n  };\n}","map":{"version":3,"sources":["/Users/marshoward/Development/code/river/frontend/app/node_modules/node-url-utils/lib/url-utils.js"],"names":["exports","module","require","normalize","url","options","u","parse","test","protocol","slashes","hostname","toLowerCase","pathname","ibuf","obuf","length","substr","pos","lastIndexOf","indexOf","segments","split","i","encodeURIComponent","decodeURIComponent","join","removeIndex","pos1","pos2","substring","query","removeKeys","seq","forEach","s","pair","key","replace","push","sort","port","hash","equals","url1","url2"],"mappings":"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","sourcesContent":["exports = module.exports = require(\"url\");\n\nif(!exports.normalize) {\nexports.normalize = function(url, options) {\n\tvar u = exports.parse(url);\n\n\t// basic validation\n\t// (If you really need to validate the URL then do it before calling this method!)\n\tif(!/(http|https)/.test(u.protocol) || !u.slashes) {\n\t\treturn null;\n\t}\n\n\t// optional options\n\toptions = options || {};\n\n\t// convert hostname to lower case\n\tu.hostname = u.hostname.toLowerCase();\n\n\t// add trailing slash if not set\n\tif(!u.pathname) {\n\t\tu.pathname = \"/\";\n\t}\n\telse {\n\t\t// remove dots as described in\n\t\t// http://tools.ietf.org/html/rfc3986#section-5.2.4\n\t\tvar ibuf = u.pathname;\n\t\tvar obuf = \"\";\n\t\twhile(ibuf.length) {\n\t\t\tif(ibuf.substr(0, 2) == \"./\") {\n\t\t\t\tibuf = ibuf.substr(2);\n\t\t\t}\n\t\t\telse if(ibuf.substr(0, 3) == \"../\") {\n\t\t\t\tibuf = ibuf.substr(3);\n\t\t\t}\n\t\t\telse if(ibuf.substr(0, 3) == \"/./\") {\n\t\t\t\tibuf = \"/\" + ibuf.substr(3);\n\t\t\t}\n\t\t\telse if(ibuf == \"/.\") {\n\t\t\t\tibuf = \"/\";\n\t\t\t}\n\t\t\telse if(ibuf.substr(0, 4) == \"/../\") {\n\t\t\t\tibuf = \"/\" + ibuf.substr(4);\n\t\t\t\tvar pos = obuf.lastIndexOf(\"/\");\n\t\t\t\tif(pos !== -1) {\n\t\t\t\t\tobuf = obuf.substr(0, pos);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(ibuf == \"/..\") {\n\t\t\t\tibuf = \"/\";\n\t\t\t\tvar pos = obuf.lastIndexOf(\"/\");\n\t\t\t\tif(pos !== -1) {\n\t\t\t\t\tobuf = obuf.substr(0, pos);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(ibuf == \".\" || ibuf == \"..\") {\n\t\t\t\tibuf = \"\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(ibuf[0] == \"/\") {\n\t\t\t\t\tibuf = ibuf.substr(1);\n\t\t\t\t\tobuf += \"/\";\n\t\t\t\t}\n\t\t\t\tvar pos = ibuf.indexOf(\"/\");\n\t\t\t\tif(pos !== -1) {\n\t\t\t\t\tobuf += ibuf.substr(0, pos);\n\t\t\t\t\tibuf = ibuf.substr(pos);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tobuf += ibuf;\n\t\t\t\t\tibuf = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// if last path segment is a directory and not a file\n\t\t// then add a trailing slash\n\n\t\t// ATTENTION:\n\t\t// The following block would be part of the standard normalization procedure\n\t\t// but a lot of websites have problems with that. E.g. all bit.ly URLs are affected.\n\n\t\t/*var pos1 = obuf.lastIndexOf(\"/\");\n\t\tvar pos2 = obuf.lastIndexOf(\".\");\n\t\tif(pos1 < obuf.length-1 && pos2 < pos1) {\n\t\t\tobuf += \"/\";\n\t\t}*/\n\n\t\t// normalize escape sequences\n\t\tvar segments = obuf.split(\"/\");\n\t\tfor (var i = 0; i < segments.length; i++) {\n\t\t\tsegments[i] = encodeURIComponent(decodeURIComponent(segments[i]));\n\t\t}\n\t\tobuf = segments.join(\"/\");\n\n\t\tif (options.removeIndex) {\n\t\t\t// remove directory index\n\t\t\tvar pos1 = obuf.lastIndexOf(\"/\");\n\t\t\tvar pos2 = obuf.lastIndexOf(\".\");\n\t\t\tif(pos2 > pos1 && obuf.substring(pos1+1, pos2) == \"index\") {\n\t\t\t\tobuf = obuf.substr(0, pos1+1);\n\t\t\t}\n\t\t}\n\n\t\tu.pathname = obuf;\n\t}\n\n\tif(u.query) {\n\t\tvar removeKeys = options.removeKeys || [\n\t\t\t\"phpsessid\",\n\t\t\t\"utm_source\", \"utm_medium\", \"utm_term\", \"utm_content\", \"utm_campaign\"\n\t\t];\n\t\tvar seq = [];\n\t\tu.query.split(\"&\").forEach(function(s) {\n\t\t\tvar pair = s.split(\"=\");\n\t\t\tvar key = pair[0].toLowerCase();\n\n\t\t\t// remove unwanted params\n\t\t\tif(removeKeys.indexOf(key) > -1) return;\n\n\t\t\t// there might be multiple = if nonstandard, so go over all\n\t\t\tfor (var i = 0; i < pair.length; i++) {\n\t\t\t\t// normalize encoding\n\t\t\t\tpair[i] = encodeURIComponent(decodeURIComponent(pair[i].replace(/\\+/g, '%20')));\n\t\t\t}\n\n\t\t\tseq.push(pair.join(\"=\"));\n\t\t});\n\n\t\t// sort query keys in ascending order\n\t\tseq.sort();\n\n\t\t// rebuild query string\n\t\tu.query = seq.join(\"&\");\n\t}\n\n\t// rebuild URL with fragment hash (#), user and password\n\turl = u.protocol + \"//\" + u.hostname;\n\n\t// ignore default port\n\tif(u.port && (\n\t\t\t\t(u.protocol == \"http:\" && u.port != 80) ||\n\t\t\t\t(u.protocol == \"https:\" && u.port != 443))) {\n\t\turl += \":\" + u.port;\n\t}\n\n\turl += u.pathname;\n\n\tif(u.query) {\n\t\turl += \"?\" + u.query;\n\t}\n\n\tif(u.hash && u.hash.length > 1) {\n\t\turl += u.hash;\n\t}\n\n\treturn url;\n};\n}\n\nif(!exports.equals) {\nexports.equals = function(url1, url2) {\n\treturn exports.normalize(url1) === exports.normalize(url2);\n};\n}\n"]},"metadata":{},"sourceType":"script"}