{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/MoviesPage.js\";\nimport React, { useState, useEffect } from 'react'; //import { connect } from 'react-redux';\n\nimport { fetchMovies } from '../actions/movieActions';\nimport MovieList from '../components/MovieList';\nimport { useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch, useStore } from 'react-redux';\n\nconst MoviesPage = props => {\n  const movieData = useSelector(state => state, []) || [];\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const [clicked, setCliked] = useState('');\n  useEffect(() => {\n    if (location.state !== undefined) {\n      setCliked(location.state.clicked);\n    }\n\n    dispatch(fetchMovies(localStorage.currentStream)); //props.fetchMovies(localStorage.currentStream)\n\n    console.log(props);\n    console.log(movieData.results);\n  }, []); //<MovieList streamID={props.handler} movieCards={props.movieCards} movieIds={props.movieIds} trailerID={props.trailerID} currentStream={props.currentStream}/>\n\n  function handleLoading() {\n    if (props.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Loading Movies...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"banner-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, localStorage.currentStreamName.toUpperCase()), handleLoading());\n};\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies.sort(),\n    movieIds: state.MoviesReducer.ids,\n    loading: state.MoviesReducer.loading\n  };\n};\n\nexport default MoviesPage;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/MoviesPage.js"],"names":["React","useState","useEffect","fetchMovies","MovieList","useLocation","useSelector","useDispatch","useStore","MoviesPage","props","movieData","state","dispatch","location","clicked","setCliked","undefined","localStorage","currentStream","console","log","results","handleLoading","loading","currentStreamName","toUpperCase","mapDispatchToProps","movieCards","MoviesReducer","movies","sort","movieIds","ids"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C,C,CACA;;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,QAAnC,QAAmD,aAAnD;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,SAAS,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAV,EAAiB,EAAjB,CAAX,IAAmC,EAArD;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM,CAACU,OAAD,EAAUC,SAAV,IAAuBf,QAAQ,CAAC,EAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,QAAQ,CAACF,KAAT,KAAmBK,SAAvB,EAAiC;AAC/BD,MAAAA,SAAS,CAACF,QAAQ,CAACF,KAAT,CAAeG,OAAhB,CAAT;AACD;;AACDF,IAAAA,QAAQ,CAACV,WAAW,CAACe,YAAY,CAACC,aAAd,CAAZ,CAAR,CAJc,CAMd;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYV,SAAS,CAACW,OAAtB;AACD,GATQ,EASN,EATM,CAAT,CAN4B,CAkB5B;;AACA,WAASC,aAAT,GAAyB;AACvB,QAAGb,KAAK,CAACc,OAAT,EAAkB;AAChB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACD,KAFD,MAEO;AAEL,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAKD;AACF;;AAGC,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BN,YAAY,CAACO,iBAAb,CAA+BC,WAA/B,EAA3B,CADF,EAEGH,aAAa,EAFhB,CADF;AAMD,CAvCH;;AA4CA,MAAMI,kBAAkB,GAAGf,KAAK,IAAI;AAClC,SAAO;AACLgB,IAAAA,UAAU,EAAEhB,KAAK,CAACiB,aAAN,CAAoBC,MAApB,CAA2BC,IAA3B,EADP;AAELC,IAAAA,QAAQ,EAAEpB,KAAK,CAACiB,aAAN,CAAoBI,GAFzB;AAGLT,IAAAA,OAAO,EAAEZ,KAAK,CAACiB,aAAN,CAAoBL;AAHxB,GAAP;AAKD,CAND;;AAQA,eAAef,UAAf","sourcesContent":["import React,{ useState, useEffect } from 'react';\n//import { connect } from 'react-redux';\nimport { fetchMovies } from '../actions/movieActions'\nimport MovieList from '../components/MovieList'\nimport { useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch, useStore } from 'react-redux'\n\nconst MoviesPage = (props) => { \n  const movieData = useSelector(state => state, []) || [];\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const [clicked, setCliked] = useState('');  \n\n  useEffect(() => {\n    if (location.state !== undefined){\n      setCliked(location.state.clicked)\n    }\n    dispatch(fetchMovies(localStorage.currentStream))\n    \n    //props.fetchMovies(localStorage.currentStream)\n    console.log(props)\n    console.log(movieData.results)\n  }, []);\n\n\n  //<MovieList streamID={props.handler} movieCards={props.movieCards} movieIds={props.movieIds} trailerID={props.trailerID} currentStream={props.currentStream}/>\n  function handleLoading (){\n    if(props.loading) {\n      return <div>Loading Movies...</div>\n    } else {\n\n      return (\n      <div>\n        \n      </div>\n      )\n    }\n  }\n\n  \n    return (\n      <div className=\"App\">\n        <div className=\"banner-2\">{localStorage.currentStreamName.toUpperCase()}</div>\n        {handleLoading()}\n      </div>\n    );\n  }\n\n\n\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies.sort(),\n    movieIds: state.MoviesReducer.ids,\n    loading: state.MoviesReducer.loading\n  }\n}\n\nexport default(MoviesPage)"]},"metadata":{},"sourceType":"module"}