{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport adapter from './adapter';\nvar streams = [];\nvar movies = [];\n\nclass Streams {\n  constructor(name) {\n    this.name = name;\n  }\n\n}\n\nclass Movies {\n  constructor(title, time) {\n    this.title = title;\n    this.time = time;\n  }\n\n}\n\nlet movies_list = [{\n  title: 'Doctor Strange',\n  time: 115,\n  genres: ['Action', 'Adventure', 'Fantasy'],\n  metascore: 74\n}, {\n  title: 'Trolls',\n  time: 92,\n  genres: ['Animation', 'Adventure', 'Comedy', 'Family', 'Fantasy']\n}, {\n  title: 'Jack Reacher: Never Go Back',\n  time: 118,\n  genres: ['Action', 'Adventure', 'Crime', 'Mystery', 'Thriller']\n}];\n\nfunction fetchStreams() {\n  adapter.getStreams().then(streams => retireveStreams(streams));\n}\n\nfunction retireveStreams(list) {\n  let i = 0;\n  list.forEach(stream => {\n    streams[i] = new Streams(stream.name);\n    i++;\n  });\n  console.log(streams);\n}\n\nlet i = 0;\nmovies_list.forEach(movie => {\n  movies[i] = new Movies(movie.title, movie.time);\n  i++;\n});\n;\nfetchStreams();\nconsole.log(movies);\nconsole.log(streams);\nexport default movies;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/data.js"],"names":["React","ReactDOM","adapter","streams","movies","Streams","constructor","name","Movies","title","time","movies_list","genres","metascore","fetchStreams","getStreams","then","retireveStreams","list","i","forEach","stream","console","log","movie"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,MAAM,GAAG,EAAb;;AAIA,MAAMC,OAAN,CAAa;AACZC,EAAAA,WAAW,CAACC,IAAD,EAAM;AAChB,SAAKA,IAAL,GAAYA,IAAZ;AACA;;AAHW;;AAMb,MAAMC,MAAN,CAAY;AACXF,EAAAA,WAAW,CAACG,KAAD,EAAOC,IAAP,EAAY;AACtB,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA;;AAJU;;AAQV,IAAIC,WAAW,GAAG,CAClB;AACEF,EAAAA,KAAK,EAAE,gBADT;AAEEC,EAAAA,IAAI,EAAE,GAFR;AAGEE,EAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,WAAX,EAAwB,SAAxB,CAHV;AAIEC,EAAAA,SAAS,EAAE;AAJb,CADkB,EAOlB;AACEJ,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,IAAI,EAAE,EAFR;AAGEE,EAAAA,MAAM,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,QAA3B,EAAqC,QAArC,EAA+C,SAA/C;AAHV,CAPkB,EAYlB;AACEH,EAAAA,KAAK,EAAE,6BADT;AAEEC,EAAAA,IAAI,EAAE,GAFR;AAGEE,EAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,WAAX,EAAwB,OAAxB,EAAiC,SAAjC,EAA4C,UAA5C;AAHV,CAZkB,CAAlB;;AAoBF,SAASE,YAAT,GAAuB;AACpBZ,EAAAA,OAAO,CAACa,UAAR,GACCC,IADD,CACMb,OAAO,IAAIc,eAAe,CAACd,OAAD,CADhC;AAEA;;AAEF,SAASc,eAAT,CAAyBC,IAAzB,EAA8B;AAC7B,MAAIC,CAAC,GAAG,CAAR;AACCD,EAAAA,IAAI,CAACE,OAAL,CAAaC,MAAM,IAAG;AACpBlB,IAAAA,OAAO,CAACgB,CAAD,CAAP,GAAa,IAAId,OAAJ,CAAYgB,MAAM,CAACd,IAAnB,CAAb;AACAY,IAAAA,CAAC;AACF,GAHD;AAIAG,EAAAA,OAAO,CAACC,GAAR,CAAYpB,OAAZ;AACA;;AACH,IAAIgB,CAAC,GAAG,CAAR;AACAR,WAAW,CAACS,OAAZ,CAAoBI,KAAK,IAAE;AAC1BpB,EAAAA,MAAM,CAACe,CAAD,CAAN,GAAY,IAAIX,MAAJ,CAAWgB,KAAK,CAACf,KAAjB,EAAuBe,KAAK,CAACd,IAA7B,CAAZ;AACAS,EAAAA,CAAC;AACD,CAHD;AAIA;AAGAL,YAAY;AAKZQ,OAAO,CAACC,GAAR,CAAYnB,MAAZ;AACAkB,OAAO,CAACC,GAAR,CAAYpB,OAAZ;AAIA,eAAeC,MAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport adapter from './adapter'\n\nvar streams = [];\nvar movies = [];\n\n\n\nclass Streams{\n\tconstructor(name){\n\t\tthis.name = name;\n\t}\n}\n\nclass Movies{\n\tconstructor(title,time){\n\t\tthis.title = title;\n\t\tthis.time = time;\n\t}\n}\n\n\t \n\t let movies_list = [\n  {\n    title: 'Doctor Strange',\n    time: 115,\n    genres: ['Action', 'Adventure', 'Fantasy'],\n    metascore: 74\n  },\n  {\n    title: 'Trolls',\n    time: 92,\n    genres: ['Animation', 'Adventure', 'Comedy', 'Family', 'Fantasy']\n  },\n  {\n    title: 'Jack Reacher: Never Go Back',\n    time: 118,\n    genres: ['Action', 'Adventure', 'Crime', 'Mystery', 'Thriller']\n  }\n]\n\n\nfunction fetchStreams(){\n  \tadapter.getStreams()\n  \t.then(streams => retireveStreams(streams))\n  }\n\n function retireveStreams(list){\n \tlet i = 0  \n  \tlist.forEach(stream=> {\n    \tstreams[i] = new Streams(stream.name)\n    \ti ++\n  \t});\n  \tconsole.log(streams);\n  }\t\nlet i = 0\nmovies_list.forEach(movie=>{\n\tmovies[i] = new Movies(movie.title,movie.time)\n\ti++\n});\n;\n\n\nfetchStreams()\n\n\n\n\t\nconsole.log(movies)\nconsole.log(streams)\n\n\n\nexport default movies"]},"metadata":{},"sourceType":"module"}