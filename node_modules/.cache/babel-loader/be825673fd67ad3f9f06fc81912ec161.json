{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/searchbox.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { listMovies } from '../actions/movieActions';\nimport MoviesList from './MoviesList';\nimport { Auth0Context } from \"../react-auth0-spa\";\nimport { findDOMNode } from 'react-dom';\nimport $ from 'jquery';\nlet moviesList;\nlet count = 0; //close sereach area if input box lose fousand input box is empty\n\nclass Searchbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getStuff = () => {\n      let theSearchState = '';\n      let theSetClass = '';\n\n      if (this.props.sBoxOpenState === false) {\n        console.log('returned false');\n        theSearchState = '<p className={\"searchBar\"} onClick={this.handleClick}> Search </p>';\n      } else {\n        console.log('returned true');\n        theSearchState = '<input type=\"text\" id=\"name-input\" className=\"searchBar\" placeholder=\"Search by title\" onClick={this.props.pointer} onChange={(e)=>this.searchMovie(e)} />';\n        theSetClass = 'searchBackground';\n      }\n\n      return theSearchState, theSetClass;\n    };\n\n    this.loseFocus = target => {};\n\n    this.handleClick = () => {\n      //console.log(\"opened\")\n      //this.setState({open:true})\n      console.log(this.state.open);\n    };\n\n    this.searchMovie = event => {\n      let keyword = event.target.value.toLowerCase();\n      this.setState({\n        search: keyword\n      });\n    };\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return ' ';\n      } else {\n        if (this.props.movieCards === undefined) {\n          window.location.reload();\n        }\n\n        let movieList;\n        movieList = this.props.movieCards.filter(movieCard => {\n          if (this.state.search.length >= 3) {\n            return movieCard;\n          } else {\n            moviesList = '';\n          }\n        }).map((movie, index) => {\n          moviesList = this.props.movieCards.map((movie, index) => {\n            return /*#__PURE__*/React.createElement(MoviesList, {\n              key: index,\n              search: this.state.search,\n              movie: movie,\n              movieID: index + 1,\n              cardStyle: \"height: -webkit-fill-available; overflow: hidden;\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 18\n              }\n            });\n          });\n        });\n      }\n    };\n\n    this.state = {\n      search: '',\n      MoiveData: \"\",\n      open: this.props.sBoxOpenState,\n      searchState: '',\n      setClass: ''\n    };\n    this.loseFocus = this.loseFocus.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.listMovies();\n  }\n\n  componentDidUpdate() {}\n\n  render() {\n    return (\n      /*#__PURE__*/\n\n      /* onClick={() => this.loseFocus(this.props.target)} */\n      React.createElement(\"div\", {\n        className: \"searchBar\",\n        onClick: this.props.pointer,\n        onBlur: () => this.loseFocus(this.props.target),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 5\n        }\n      }, this.state.searchState, this.handleLoading(), /*#__PURE__*/React.createElement(\"div\", {\n        onClick: this.props.pointer,\n        className: this.state.setClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-list\",\n        onClick: this.props.pointer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, moviesList)))\n    );\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    loading: state.MoviesReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  listMovies\n})(Searchbox);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/searchbox.js"],"names":["React","Component","connect","listMovies","MoviesList","Auth0Context","findDOMNode","$","moviesList","count","Searchbox","constructor","props","getStuff","theSearchState","theSetClass","sBoxOpenState","console","log","loseFocus","target","handleClick","state","open","searchMovie","event","keyword","value","toLowerCase","setState","search","handleLoading","loading","movieCards","undefined","window","location","reload","movieList","filter","movieCard","length","map","movie","index","MoiveData","searchState","setClass","bind","componentDidMount","componentDidUpdate","render","pointer","mapDispatchToProps","MoviesReducer","movies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { listMovies } from '../actions/movieActions'\nimport MoviesList from './MoviesList';\nimport { Auth0Context } from \"../react-auth0-spa\";\nimport { findDOMNode } from 'react-dom';\nimport $ from 'jquery'; \n\nlet  moviesList\nlet count = 0\n//close sereach area if input box lose fousand input box is empty\n\nclass Searchbox extends Component {\n constructor(props){\n    super(props);\n\n    this.state={\n      search:'',\n      MoiveData: \"\",\n      open: this.props.sBoxOpenState,\n      searchState: '',\n      setClass: ''\n    };\n\n  this.loseFocus = this.loseFocus.bind(this)\n  }\n\n  getStuff=()=>{\n    let theSearchState =''\n    let theSetClass = ''\n    if (this.props.sBoxOpenState === false){\n      console.log('returned false')\n      theSearchState= '<p className={\"searchBar\"} onClick={this.handleClick}> Search </p>'\n      } \n    else{\n      console.log('returned true')\n      theSearchState= '<input type=\"text\" id=\"name-input\" className=\"searchBar\" placeholder=\"Search by title\" onClick={this.props.pointer} onChange={(e)=>this.searchMovie(e)} />'\n      theSetClass= 'searchBackground'\n      }\n    return (theSearchState,theSetClass)\n  }\n\n  componentDidMount() {\n    this.props.listMovies()\n\n  }\n\n  componentDidUpdate(){\n    \n  }\n\n\n  loseFocus=(target)=>{\n\n  }\n\n\n  handleClick=()=>{\n    //console.log(\"opened\")\n    //this.setState({open:true})\n    console.log(this.state.open)\n  }\n\n  searchMovie=(event)=>{\n    let keyword = event.target.value.toLowerCase();\n    this.setState({search:keyword})\n    \n  }  \t\n\n  handleLoading = () => {\n    if(this.props.loading) {\n      return ' '\n    } \n    else {\n      if (this.props.movieCards === undefined){\n        window.location.reload();\n      } \n      let movieList\n    \n\n      movieList = this.props.movieCards.filter(movieCard=>{\n      if(this.state.search.length >= 3 ){\n            return movieCard\n      }\n      else{\n        moviesList = ''\n      }        \n      }).map((movie,index)=>{\n        moviesList = this.props.movieCards.map((movie, index) => {\n          return <MoviesList key={index} search={this.state.search}  movie={movie} movieID={(index+1)} cardStyle='height: -webkit-fill-available;\n          overflow: hidden;'/>\n        })\n      })\n    }\n  }\n\n  render(){\n  \treturn(\n      /* onClick={() => this.loseFocus(this.props.target)} */\n  \t\t<div className=\"searchBar\" onClick={this.props.pointer}  onBlur= {() => this.loseFocus(this.props.target)}>\n  \t\t\t{this.state.searchState}\n  \t\t\t{this.handleLoading()}\n        <div onClick={this.props.pointer} className={this.state.setClass} >\n          <div className=\"search-list\" onClick={this.props.pointer}>\n              {moviesList}\n          </div>\n        </div>\n  \t\t</div>\n  \t)\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    loading: state.MoviesReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {listMovies})(Searchbox)"]},"metadata":{},"sourceType":"module"}