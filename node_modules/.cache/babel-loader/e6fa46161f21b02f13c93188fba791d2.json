{"ast":null,"code":"import adapter from './adapter';\nvar streams = [];\nvar movies = [];\nvar num = 10;\n\nclass Streams {\n  constructor(name) {\n    this.name = name;\n  }\n\n}\n\nclass Movies {\n  constructor(title, time) {\n    this.title = title;\n  }\n\n}\n\nfunction fetchStreams() {\n  adapter.getStreams().then(streams => retireveStreams(streams));\n}\n\nfunction retireveStreams(list) {\n  let i = 0;\n  let streamList = [];\n  var streams2 = list.map(stream => {\n    return streamList[i] = new Streams(stream.name);\n    i++;\n  });\n  streams = streams2;\n  console.log(num);\n  num = num + 1;\n  console.log(streams);\n  console.log(num);\n  return streams;\n}\n\nfunction fetchMovies() {\n  adapter.getMovies(1).then(movies => retireveMovies(movies));\n}\n\nfunction retireveMovies(list) {\n  let i = 0;\n  let movieList = [];\n  list.forEach(movie => {\n    movieList[i] = new Movies(movie);\n    i++;\n  });\n  console.log(movieList);\n  var movies = movieList;\n}\n\nfunction exec() {\n  fetchStreams();\n  fetchMovies();\n  console.log(movies);\n  console.log(streams);\n  console.log(num);\n}\n\nexec();\nexport default movies;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/data.js"],"names":["adapter","streams","movies","num","Streams","constructor","name","Movies","title","time","fetchStreams","getStreams","then","retireveStreams","list","i","streamList","streams2","map","stream","console","log","fetchMovies","getMovies","retireveMovies","movieList","forEach","movie","exec"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AAEA,IAAIC,OAAO,GAAG,EAAd;AACA,IAAIC,MAAM,GAAG,EAAb;AACA,IAAIC,GAAG,GAAG,EAAV;;AAKA,MAAMC,OAAN,CAAa;AACZC,EAAAA,WAAW,CAACC,IAAD,EAAM;AAChB,SAAKA,IAAL,GAAYA,IAAZ;AACA;;AAHW;;AAMb,MAAMC,MAAN,CAAY;AACXF,EAAAA,WAAW,CAACG,KAAD,EAAOC,IAAP,EAAY;AACtB,SAAKD,KAAL,GAAaA,KAAb;AACA;;AAHU;;AAOZ,SAASE,YAAT,GAAuB;AACpBV,EAAAA,OAAO,CAACW,UAAR,GACCC,IADD,CACMX,OAAO,IAAIY,eAAe,CAACZ,OAAD,CADhC;AAEA;;AAEF,SAASY,eAAT,CAAyBC,IAAzB,EAA8B;AAC7B,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIC,UAAU,GAAG,EAAjB;AACC,MAAIC,QAAQ,GAAGH,IAAI,CAACI,GAAL,CAASC,MAAM,IAAG;AAC/B,WAAOH,UAAU,CAACD,CAAD,CAAV,GAAgB,IAAIX,OAAJ,CAAYe,MAAM,CAACb,IAAnB,CAAvB;AACAS,IAAAA,CAAC;AAEF,GAJc,CAAf;AAKAd,EAAAA,OAAO,GAAGgB,QAAV;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYlB,GAAZ;AACCA,EAAAA,GAAG,GAAGA,GAAG,GAAG,CAAZ;AACDiB,EAAAA,OAAO,CAACC,GAAR,CAAYpB,OAAZ;AACAmB,EAAAA,OAAO,CAACC,GAAR,CAAYlB,GAAZ;AACA,SAAOF,OAAP;AACA;;AAED,SAASqB,WAAT,GAAsB;AACrBtB,EAAAA,OAAO,CAACuB,SAAR,CAAkB,CAAlB,EACCX,IADD,CACMV,MAAM,IAAIsB,cAAc,CAACtB,MAAD,CAD9B;AAEA;;AAEA,SAASsB,cAAT,CAAwBV,IAAxB,EAA6B;AAC9B,MAAIC,CAAC,GAAG,CAAR;AACA,MAAIU,SAAS,GAAG,EAAhB;AACCX,EAAAA,IAAI,CAACY,OAAL,CAAaC,KAAK,IAAG;AACnBF,IAAAA,SAAS,CAACV,CAAD,CAAT,GAAe,IAAIR,MAAJ,CAAWoB,KAAX,CAAf;AACAZ,IAAAA,CAAC;AACF,GAHD;AAIAK,EAAAA,OAAO,CAACC,GAAR,CAAYI,SAAZ;AACA,MAAIvB,MAAM,GAAGuB,SAAb;AACA;;AAGH,SAASG,IAAT,GACA;AACClB,EAAAA,YAAY;AACZY,EAAAA,WAAW;AACXF,EAAAA,OAAO,CAACC,GAAR,CAAYnB,MAAZ;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAYpB,OAAZ;AACAmB,EAAAA,OAAO,CAACC,GAAR,CAAYlB,GAAZ;AACA;;AAGDyB,IAAI;AAEJ,eAAe1B,MAAf","sourcesContent":["import adapter from './adapter'\n\nvar streams = [];\nvar movies = [];\nvar num = 10\n\n\n\n\nclass Streams{\n\tconstructor(name){\n\t\tthis.name = name;\n\t}\n}\n\nclass Movies{\n\tconstructor(title,time){\n\t\tthis.title = title;\n\t}\n}\n\n\t \nfunction fetchStreams(){\n  \tadapter.getStreams()\n  \t.then(streams => retireveStreams(streams))\n  }\n\n function retireveStreams(list){\n \tlet i = 0; \n \tlet streamList = [];\n  \tvar streams2 = list.map(stream=> {\n    \treturn streamList[i] = new Streams(stream.name);\n    \ti ++;\n\n  \t});\n  \tstreams = streams2\n  \tconsole.log(num)\n  \t num = num + 1\n  \tconsole.log(streams);\n  \tconsole.log(num)\n  \treturn streams\n  }\n\n  function fetchMovies(){\n  \tadapter.getMovies(1)\n  \t.then(movies => retireveMovies(movies))\n  }\n\n   function retireveMovies(list){\n \tlet i = 0; \n \tlet movieList = [];\n  \tlist.forEach(movie=> {\n    \tmovieList[i] = new Movies(movie);\n    \ti ++;\n  \t});\n  \tconsole.log(movieList);\n  \tvar movies = movieList\n  }\n\n\nfunction exec()\n{\n\tfetchStreams()\n\tfetchMovies()\t\n\tconsole.log(movies)\n\tconsole.log(streams)\n\tconsole.log(num)\n}\n\n\nexec();\n\nexport default movies"]},"metadata":{},"sourceType":"module"}