{"ast":null,"code":"const PROXY = \"https://cors-anywhere-dd.herokuapp.com/\";\nconst streamsAPI = 'https://localhost:3000/streams';\nconst URL = 'https://localhost:3000/streams'; //\tfetch(`http://www.omdbapi.com/?t=${movie}+&apikey=6b46131b`).then(response => {\n\nexport function fetchMovies(id) {\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_MOVIES'\n    });\n    fetch(`${URL}/${id}/movies`).then(response => {\n      return response.json();\n    }).then(responseJSON => {\n      Promise.all(responseJSON.map(title => console.log(title))).then(listOfMovies => {\n        dispatch({\n          type: 'ADD_MOVIES',\n          movies: listOfMovies\n        });\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/actions/movieActions.js"],"names":["PROXY","streamsAPI","URL","fetchMovies","id","dispatch","type","fetch","then","response","json","responseJSON","Promise","all","map","title","console","log","listOfMovies","movies"],"mappings":"AAAA,MAAMA,KAAK,GAAG,yCAAd;AACA,MAAMC,UAAU,GAAG,gCAAnB;AACA,MAAMC,GAAG,GAAG,gCAAZ,C,CAGA;;AAEA,OAAO,SAASC,WAAT,CAAsBC,EAAtB,EAA0B;AAChC,SAAQC,QAAD,IAAc;AACpBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAC,IAAAA,KAAK,CAAE,GAAEL,GAAI,IAAGE,EAAG,SAAd,CAAL,CAA6BI,IAA7B,CAAkCC,QAAQ,IAAI;AACxC,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACF,KAFJ,EAEMF,IAFN,CAEWG,YAAY,IAAI;AACvBC,MAAAA,OAAO,CAACC,GAAR,CACCF,YAAY,CAACG,GAAb,CACCC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CADV,CADD,EAIGP,IAJH,CAIQU,YAAY,IAAI;AACvBb,QAAAA,QAAQ,CAAC;AAAEC,UAAAA,IAAI,EAAE,YAAR;AAAsBa,UAAAA,MAAM,EAAED;AAA9B,SAAD,CAAR;AACC,OANF;AAQA,KAXJ;AAYA,GAdD;AAeA","sourcesContent":["const PROXY = \"https://cors-anywhere-dd.herokuapp.com/\";\nconst streamsAPI = 'https://localhost:3000/streams'\nconst URL = 'https://localhost:3000/streams'\n\n\n//\tfetch(`http://www.omdbapi.com/?t=${movie}+&apikey=6b46131b`).then(response => {\n\nexport function fetchMovies (id) {\n\treturn (dispatch) => {\n\t\tdispatch({ type: 'LOADING_MOVIES'})\n\t\tfetch(`${URL}/${id}/movies`).then(response => {\n      \t\treturn response.json()\n    \t}).then(responseJSON => {\n    \t\tPromise.all(\n    \t\t\tresponseJSON.map(\n    \t\t\t\ttitle => console.log(title)\n    \t\t\t)\n    \t\t\t).then(listOfMovies => {\n    \t\t\tdispatch({ type: 'ADD_MOVIES', movies: listOfMovies})\t\n    \t\t\t})\n    \t\t\n    \t})\n\t}\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}