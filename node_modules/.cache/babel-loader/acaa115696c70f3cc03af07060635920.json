{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/searchbox.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { listMovies } from '../actions/movieActions';\nimport MoviesList from './MoviesList';\nimport { Auth0Context } from \"../react-auth0-spa\";\nimport { findDOMNode } from 'react-dom';\nimport $ from 'jquery';\nlet moviesList;\nlet count = 0; //close sereach area if input box lose fousand input box is empty\n\nclass Searchbox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loseFocus = target => {};\n\n    this.handleClick = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.searchMovie = event => {\n      let keyword = event.target.value.toLowerCase();\n      this.setState({\n        search: keyword\n      });\n    };\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return ' ';\n      } else {\n        if (this.props.movieCards === undefined) {\n          window.location.reload();\n        }\n\n        let movieList;\n        movieList = this.props.movieCards.filter(movieCard => {\n          if (this.state.search.length >= 3) {\n            return movieCard;\n          } else {\n            moviesList = '';\n          }\n        }).map((movie, index) => {\n          moviesList = this.props.movieCards.map((movie, index) => {\n            return /*#__PURE__*/React.createElement(MoviesList, {\n              key: index,\n              search: this.state.search,\n              movie: movie,\n              movieID: index + 1,\n              cardStyle: \"height: -webkit-fill-available; overflow: hidden;\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 18\n              }\n            });\n          });\n        });\n      }\n    };\n\n    this.state = {\n      search: '',\n      MoiveData: \"\",\n      open: this.props.sBoxOpenState,\n      searchState: '',\n      setClass: ''\n    };\n    this.loseFocus = this.loseFocus.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.listMovies();\n    console.log(this.props.sBoxOpenState);\n  }\n\n  componentDidUpdate() {\n    if (this.state.open === false) {\n      this.setState({\n        searchState: '<p className={\"searchBar\"} onClick={this.handleClick}> Search </p>',\n        setClass: ''\n      });\n    } else {\n      this.setState({\n        searchState: '<input type=\"text\" id=\"name-input\" className=\"searchBar\" placeholder=\"Search by title\" onClick={this.props.pointer} onChange={(e)=>this.searchMovie(e)} />',\n        setClass: 'searchBackground'\n      });\n    }\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n\n      /* onClick={() => this.loseFocus(this.props.target)} */\n      React.createElement(\"div\", {\n        onBlur: () => this.loseFocus(this.props.target),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 5\n        }\n      }, this.searchState, this.handleLoading(), /*#__PURE__*/React.createElement(\"div\", {\n        className: setClass,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-list\",\n        onClick: this.props.pointer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, moviesList)))\n    );\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    loading: state.MoviesReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  listMovies\n})(Searchbox);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/searchbox.js"],"names":["React","Component","connect","listMovies","MoviesList","Auth0Context","findDOMNode","$","moviesList","count","Searchbox","constructor","props","loseFocus","target","handleClick","setState","open","searchMovie","event","keyword","value","toLowerCase","search","handleLoading","loading","movieCards","undefined","window","location","reload","movieList","filter","movieCard","state","length","map","movie","index","MoiveData","sBoxOpenState","searchState","setClass","bind","componentDidMount","console","log","componentDidUpdate","render","pointer","mapDispatchToProps","MoviesReducer","movies"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { listMovies } from '../actions/movieActions'\nimport MoviesList from './MoviesList';\nimport { Auth0Context } from \"../react-auth0-spa\";\nimport { findDOMNode } from 'react-dom';\nimport $ from 'jquery'; \n\nlet  moviesList\nlet count = 0\n//close sereach area if input box lose fousand input box is empty\n\nclass Searchbox extends Component {\n constructor(props){\n    super(props);\n\n    \n\n    this.state={\n      search:'',\n      MoiveData: \"\",\n      open: this.props.sBoxOpenState,\n      searchState: '',\n      setClass: ''\n    };\n\n  this.loseFocus = this.loseFocus.bind(this)\n  }\n\n  componentDidMount() {\n    this.props.listMovies()\n    console.log(this.props.sBoxOpenState)\n  }\n\n  componentDidUpdate(){\n    if (this.state.open === false){\n      this.setState({\n        searchState : '<p className={\"searchBar\"} onClick={this.handleClick}> Search </p>',\n        setClass: ''\n      })\n    } \n    else{\n      this.setState({\n        searchState: '<input type=\"text\" id=\"name-input\" className=\"searchBar\" placeholder=\"Search by title\" onClick={this.props.pointer} onChange={(e)=>this.searchMovie(e)} />',\n        setClass: 'searchBackground'\n      })\n    }   \n  }\n\n\n  loseFocus=(target)=>{\n\n  }\n\n\n  handleClick=()=>{\n    this.setState({open:true})\n  }\n\n  searchMovie=(event)=>{\n    let keyword = event.target.value.toLowerCase();\n    this.setState({search:keyword})\n    \n  }  \t\n\n  handleLoading = () => {\n    if(this.props.loading) {\n      return ' '\n    } \n    else {\n      if (this.props.movieCards === undefined){\n        window.location.reload();\n      } \n      let movieList\n    \n\n      movieList = this.props.movieCards.filter(movieCard=>{\n      if(this.state.search.length >= 3 ){\n            return movieCard\n      }\n      else{\n        moviesList = ''\n      }        \n      }).map((movie,index)=>{\n        moviesList = this.props.movieCards.map((movie, index) => {\n          return <MoviesList key={index} search={this.state.search}  movie={movie} movieID={(index+1)} cardStyle='height: -webkit-fill-available;\n          overflow: hidden;'/>\n        })\n      })\n    }\n  }\n\n  render(){\n  \treturn(\n      /* onClick={() => this.loseFocus(this.props.target)} */\n  \t\t<div onBlur= {() => this.loseFocus(this.props.target)}>\n  \t\t\t{this.searchState}\n  \t\t\t{this.handleLoading()}\n        <div className={setClass} >\n          <div className=\"search-list\" onClick={this.props.pointer} >\n              {moviesList}\n          </div>\n        </div>\n  \t\t</div>\n  \t)\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    loading: state.MoviesReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {listMovies})(Searchbox)"]},"metadata":{},"sourceType":"module"}