{"ast":null,"code":"import adapter from './adapter';\nvar listOfDares = [];\nvar streamsList = [{\n  name: \"netflix\"\n}, {\n  name: \"hulu\"\n}, {\n  name: \"amazon\"\n}, {\n  name: \"hbo\"\n}, {\n  name: \"showtime\"\n}];\n\nfunction addS() {\n  streamsList.push({\n    name: \"disney\"\n  });\n}\n\nclass Streams {\n  constructor(name) {\n    this.name = name;\n  }\n\n}\n\nfunction fetchDares() {\n  adapter.getDares().then(dares => retrieveDares(dares));\n}\n\nfunction retrieveDares(dares) {\n  let dareList = [];\n  dares.forEach(dare => {\n    dareList.push(dare);\n  });\n  listOfDares = dareList;\n}\n\nconsole.log(listOfDares);\nexport default streamsList;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/data.js"],"names":["adapter","listOfDares","streamsList","name","addS","push","Streams","constructor","fetchDares","getDares","then","dares","retrieveDares","dareList","forEach","dare","console","log"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AAEA,IAAIC,WAAW,GAAG,EAAlB;AACA,IAAIC,WAAW,GAAG,CAClB;AAACC,EAAAA,IAAI,EAAE;AAAP,CADkB,EAElB;AAACA,EAAAA,IAAI,EAAE;AAAP,CAFkB,EAGlB;AAACA,EAAAA,IAAI,EAAE;AAAP,CAHkB,EAIlB;AAACA,EAAAA,IAAI,EAAE;AAAP,CAJkB,EAMlB;AAACA,EAAAA,IAAI,EAAE;AAAP,CANkB,CAAlB;;AASA,SAASC,IAAT,GAAgB;AACfF,EAAAA,WAAW,CAACG,IAAZ,CAAiB;AAACF,IAAAA,IAAI,EAAE;AAAP,GAAjB;AACA;;AAED,MAAMG,OAAN,CAAa;AACZC,EAAAA,WAAW,CAACJ,IAAD,EAAM;AAChB,SAAKA,IAAL,GAAYA,IAAZ;AACA;;AAHW;;AAOb,SAASK,UAAT,GAAsB;AACrBR,EAAAA,OAAO,CAACS,QAAR,GACCC,IADD,CACMC,KAAK,IAAIC,aAAa,CAACD,KAAD,CAD5B;AAEA;;AAED,SAAUC,aAAV,CAAwBD,KAAxB,EAA8B;AAC7B,MAAIE,QAAQ,GAAG,EAAf;AACAF,EAAAA,KAAK,CAACG,OAAN,CAAcC,IAAI,IAAG;AACpBF,IAAAA,QAAQ,CAACR,IAAT,CAAcU,IAAd;AACA,GAFD;AAGAd,EAAAA,WAAW,GAAGY,QAAd;AACA;;AAIDG,OAAO,CAACC,GAAR,CAAYhB,WAAZ;AAGA,eAAeC,WAAf","sourcesContent":["import adapter from './adapter'\n\nvar listOfDares = [];\nvar streamsList = [\n{name: \"netflix\"},\n{name: \"hulu\"},\n{name: \"amazon\"},\n{name: \"hbo\"},\n\n{name: \"showtime\"}];\n\n\nfunction addS (){\n\tstreamsList.push({name: \"disney\"})\n}\n\nclass Streams{\n\tconstructor(name){\n\t\tthis.name = name;\n\t}\n\t\n}\n\nfunction fetchDares() {\n\tadapter.getDares()\n\t.then(dares => retrieveDares(dares))\t\n}\n\nfunction  retrieveDares(dares){\n\tlet dareList = [];\n\tdares.forEach(dare=> {\t\t\n\t\tdareList.push(dare);\t\n\t});\n\tlistOfDares = dareList;\n}\n\n \n\nconsole.log(listOfDares)\n\n\nexport default streamsList"]},"metadata":{},"sourceType":"module"}