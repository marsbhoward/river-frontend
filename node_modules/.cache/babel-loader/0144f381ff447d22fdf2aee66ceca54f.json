{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/MoviesPage.js\";\nimport React, { useState, useEffect } from 'react'; //import { connect } from 'react-redux';\n//import { fetchMovies } from '../actions/movieActions'\n\nimport MovieList from '../components/MovieList';\nimport { useLocation } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\n\nfunction MoviesPage(props) {\n  const fetchMovies = useSelector(movieCards => movieCards.fetchMovies);\n  const location = useLocation();\n  const [clicked, setCliked] = useState(location.state.clicked);\n  useEffect(() => {//props.fetchMovies(localStorage.currentStream)\n  });\n\n  function handleLoading() {\n    if (props.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Loading Movies...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"banner-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, localStorage.currentStreamName.toUpperCase()), handleLoading());\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies.sort(),\n    movieIds: state.MoviesReducer.ids,\n    loading: state.MoviesReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  fetchMovies\n})(MoviesPage);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/MoviesPage.js"],"names":["React","useState","useEffect","MovieList","useLocation","useSelector","MoviesPage","props","fetchMovies","movieCards","location","clicked","setCliked","state","handleLoading","loading","localStorage","currentStreamName","toUpperCase","mapDispatchToProps","MoviesReducer","movies","sort","movieIds","ids","connect"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C,C,CACA;AACA;;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAMC,WAAW,GAAGH,WAAW,CAACI,UAAU,IAAIA,UAAU,CAACD,WAA1B,CAA/B;AACA,QAAME,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,OAAD,EAAUC,SAAV,IAAuBX,QAAQ,CAACS,QAAQ,CAACG,KAAT,CAAeF,OAAhB,CAArC;AAEAT,EAAAA,SAAS,CAAC,MAAM,CACd;AACD,GAFQ,CAAT;;AAKA,WAASY,aAAT,GAAyB;AACvB,QAAGP,KAAK,CAACQ,OAAT,EAAkB;AAChB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACD,KAFD,MAEO;AACL,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAKD;AACF;;AAGC,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BC,YAAY,CAACC,iBAAb,CAA+BC,WAA/B,EAA3B,CADF,EAEGJ,aAAa,EAFhB,CADF;AAMD;;AAKH,MAAMK,kBAAkB,GAAGN,KAAK,IAAI;AAClC,SAAO;AACLJ,IAAAA,UAAU,EAAEI,KAAK,CAACO,aAAN,CAAoBC,MAApB,CAA2BC,IAA3B,EADP;AAELC,IAAAA,QAAQ,EAAEV,KAAK,CAACO,aAAN,CAAoBI,GAFzB;AAGLT,IAAAA,OAAO,EAAEF,KAAK,CAACO,aAAN,CAAoBL;AAHxB,GAAP;AAKD,CAND;;AAQA,eAAeU,OAAO,CAACN,kBAAD,EAAqB;AAACX,EAAAA;AAAD,CAArB,CAAP,CAA2CF,UAA3C,CAAf","sourcesContent":["import React,{ useState, useEffect } from 'react';\n//import { connect } from 'react-redux';\n//import { fetchMovies } from '../actions/movieActions'\nimport MovieList from '../components/MovieList'\nimport { useLocation } from \"react-router-dom\";\nimport { useSelector } from 'react-redux'\n\nfunction MoviesPage (props) { \n  const fetchMovies = useSelector(movieCards => movieCards.fetchMovies)\n  const location = useLocation();\n  const [clicked, setCliked] = useState(location.state.clicked);  \n\n  useEffect(() => {\n    //props.fetchMovies(localStorage.currentStream)\n  });    \n\n  \n  function handleLoading (){\n    if(props.loading) {\n      return <div>Loading Movies...</div>\n    } else {\n      return (\n      <div>\n      \n      </div>\n      )\n    }\n  }\n\n  \n    return (\n      <div className=\"App\">\n        <div className=\"banner-2\">{localStorage.currentStreamName.toUpperCase()}</div>\n        {handleLoading()}\n      </div>\n    );\n  }\n\n\n\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies.sort(),\n    movieIds: state.MoviesReducer.ids,\n    loading: state.MoviesReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {fetchMovies})(MoviesPage)"]},"metadata":{},"sourceType":"module"}