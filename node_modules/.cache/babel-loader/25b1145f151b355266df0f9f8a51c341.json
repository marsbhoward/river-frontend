{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/MovieList.js\";\nimport React from 'react';\nimport '../index.css';\nimport Movie from './Movie';\nimport InfoPage from '../containers/InfoPage';\nlet moviesList; // mars this page is causing multiple rerenders\n\nclass MovieList extends React.Component {\n  //binds passed handler to MoviesPage handler\n  constructor(props) {\n    super(props);\n\n    this.setCurrentMovieState = () => {\n      this.setState({\n        currentMovie: this.props.passedMovie,\n        clicked: true\n      }); //console.log(this.state.currentMovie)\n    };\n\n    this.handler = (movie, clicked, movieID) => {\n      //sessionStorage.setItem('currentMovie', this.props.movieIds[(movieID-1)])\n      console.log('state set');\n      this.props.handler();\n      sessionStorage.setItem('currentMovie', movie.id);\n      sessionStorage.setItem('selectedMovie', JSON.stringify(movie));\n      this.setState(prevState => ({\n        currentMovie: movie,\n        //this.props.isClicked fucntion\n        movieID: movieID\n      }));\n    };\n\n    this.trailerID = trailer => {\n      this.props.trailerID(trailer);\n    };\n\n    this.handler = this.handler.bind(this);\n    this.state = {\n      cssColor: \"\"\n    };\n  }\n\n  componentDidMount() {\n    if (typeof this.props.passedMovie !== \"undefined\") {\n      console.log(this.props);\n      this.setCurrentMovieState();\n    }\n\n    this.setState({\n      cssColor: this.props.css('Info', this.props.darkmodeProp)\n    });\n  }\n\n  render() {\n    //addition if to make sure passed movie is in\n    if (sessionStorage.currentMovieList !== \" \") {\n      moviesList = JSON.parse(sessionStorage.currentMovieList).map((movie, index) => {\n        return /*#__PURE__*/React.createElement(Movie, {\n          key: index,\n          movie: movie,\n          darkmodeProp: this.props.darkmodeProp,\n          passGetData: this.props.passGetData,\n          handler: this.handler,\n          movieID: index + 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 16\n          }\n        });\n      });\n    } else {\n      moviesList = this.props.movieCards.map((movie, index) => {\n        return /*#__PURE__*/React.createElement(Movie, {\n          key: index,\n          movie: movie,\n          darkmodeProp: this.props.darkmodeProp,\n          passGetData: this.props.passGetData,\n          handler: this.handler,\n          movieID: index + 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 16\n          }\n        });\n      });\n    }\n\n    if (this.props.isClicked !== true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"NotClicked\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 10\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"movie-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 8\n        }\n      }, moviesList));\n    } else if (typeof this.props.passedMovie !== \"undefined\") {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"WasClicked-undefined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(InfoPage, {\n        darkmodeProp: this.props.darkmodeProp,\n        css: this.props.css,\n        movieIds: this.props.movieIds,\n        streamID: this.props.streamID,\n        movieID: parseInt(sessionStorage.currentMovie),\n        currentBackend: this.props.movieBackend,\n        currentMovie: this.props.passedMovie,\n        trailerID: this.trailerID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"movie-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, moviesList, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      })));\n    } else {\n      // get omdb movie\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"WasClicked\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(InfoPage, {\n        darkmodeProp: this.props.darkmodeProp,\n        css: this.props.css,\n        movieIds: this.props.movieIds,\n        streamID: this.props.streamID,\n        movieID: parseInt(sessionStorage.currentMovie),\n        currentMovie: JSON.parse(sessionStorage.selectedMovie),\n        trailerID: this.trailerID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"movie-list\",\n        style: {\n          background: this.props.css(\"Movies\", this.props.darkmodeProp).background\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, moviesList));\n    }\n  }\n\n}\n\nexport default MovieList;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/MovieList.js"],"names":["React","Movie","InfoPage","moviesList","MovieList","Component","constructor","props","setCurrentMovieState","setState","currentMovie","passedMovie","clicked","handler","movie","movieID","console","log","sessionStorage","setItem","id","JSON","stringify","prevState","trailerID","trailer","bind","state","cssColor","componentDidMount","css","darkmodeProp","render","currentMovieList","parse","map","index","passGetData","movieCards","isClicked","movieIds","streamID","parseInt","movieBackend","selectedMovie","background"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../index.css';\nimport Movie from './Movie';\nimport InfoPage from '../containers/InfoPage'\n\nlet moviesList\n\n// mars this page is causing multiple rerenders\nclass MovieList extends React.Component {\n\n  //binds passed handler to MoviesPage handler\n  constructor(props){\n    super(props)\n    this.handler = this.handler.bind(this);\n    this.state = {\n      cssColor: \"\"\n    }\n  }\n\n  componentDidMount() {\n    if (typeof this.props.passedMovie !== \"undefined\"){\n      console.log(this.props)\n      this.setCurrentMovieState()\n    }\n    this.setState({cssColor: this.props.css('Info',this.props.darkmodeProp)})\n   }\n\n  setCurrentMovieState = () =>{\n    this.setState({\n        currentMovie: this.props.passedMovie,\n        clicked: true\n    })\n    //console.log(this.state.currentMovie)\n  }\n\n \n\n// recieves id from passed handler\n  handler = (movie, clicked, movieID) => {\n    //sessionStorage.setItem('currentMovie', this.props.movieIds[(movieID-1)])\n    console.log('state set')\n    this.props.handler()\n    sessionStorage.setItem('currentMovie',movie.id)\n    sessionStorage.setItem('selectedMovie',JSON.stringify( movie))\n    this.setState(prevState=>({\n      currentMovie: movie,\n      //this.props.isClicked fucntion\n      movieID: movieID\n    }))   \n  }\n\n  trailerID = (trailer) => { \n    this.props.trailerID(trailer)\n  }\n\n  render() {\n    //addition if to make sure passed movie is in\n    if (sessionStorage.currentMovieList !== \" \"){\n      moviesList = JSON.parse(sessionStorage.currentMovieList).map((movie, index) => {\n        return <Movie key={index} movie={movie} darkmodeProp = {this.props.darkmodeProp}  passGetData={this.props.passGetData} handler={this.handler} movieID={(index+1)}/>\n      })\n    }\n    else{\n      moviesList = this.props.movieCards.map((movie, index) => {\n        return <Movie key={index} movie={movie} darkmodeProp = {this.props.darkmodeProp}  passGetData={this.props.passGetData} handler={this.handler} movieID={(index+1)}/>\n      })  \n    }\n\n    if (this.props.isClicked !== true) {  \n     return (\n       <div className= \"NotClicked\">\n         <br/>\n       <div className=\"movie-list\">\n           {moviesList}\n       </div>\n       </div>\n     )\n   }\n    else\n      if (typeof this.props.passedMovie !== \"undefined\"){\n        return(\n          <div className = \"WasClicked-undefined\">\n            <br/>\n            <InfoPage darkmodeProp = {this.props.darkmodeProp} css={this.props.css} movieIds={this.props.movieIds} streamID={this.props.streamID} movieID={parseInt(sessionStorage.currentMovie)} currentBackend={this.props.movieBackend} currentMovie={this.props.passedMovie} trailerID={this.trailerID}/>\n            <div className=\"movie-list\">\n                {moviesList}\n                <br/>\n            </div>\n          </div>\n        )\n      }\n      else{\n\n        // get omdb movie\n        return(\n          <div className = \"WasClicked\">\n            <br/>\n            <InfoPage darkmodeProp = {this.props.darkmodeProp} css={this.props.css} movieIds={this.props.movieIds} streamID={this.props.streamID} movieID={parseInt(sessionStorage.currentMovie)} currentMovie={JSON.parse(sessionStorage.selectedMovie)} trailerID={this.trailerID}/>\n            <div className=\"movie-list\" style={{background:this.props.css(\"Movies\",this.props.darkmodeProp).background}}>\n                {moviesList}\n            </div>\n          </div>\n        )              \n      }\n   }\n  }\nexport default (MovieList);"]},"metadata":{},"sourceType":"module"}