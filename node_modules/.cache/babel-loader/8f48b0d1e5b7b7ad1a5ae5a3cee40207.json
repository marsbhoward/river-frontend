{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river/frontend/app/src/containers/MoviesPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../actions/movieActions';\nimport MovieList from '../components/MovieList';\n\nclass MoviesPage extends Component {\n  componentDidMount() {\n    this.props.fetchMovies(this.props.handler);\n    console.log(this.state.currentStream);\n  } //binds passed handler to StreamsPage handler\n\n\n  constructor(props) {\n    super(props);\n\n    this.currentStream = id => {\n      this.setState({\n        currentStream: id\n      });\n    };\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"Loading Movies...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(MovieList, {\n          movieCards: this.props.movieCards,\n          currentStream: this.currentStream,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.currentStream = this.currentStream.bind(this);\n  } // recieves id from passed handler\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.handleLoading());\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    currentStream: state.StreamsReducer.currentStream,\n    loading: state.MoviesReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  fetchMovies\n})(MoviesPage);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river/frontend/app/src/containers/MoviesPage.js"],"names":["React","Component","connect","fetchMovies","MovieList","MoviesPage","componentDidMount","props","handler","console","log","state","currentStream","constructor","id","setState","handleLoading","loading","movieCards","bind","render","mapDispatchToProps","MoviesReducer","movies","StreamsReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAEjCK,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,OAAlC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,aAAvB;AACD,GALgC,CAMnC;;;AACEC,EAAAA,WAAW,CAACN,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAKlBK,aALkB,GAKFE,EAAE,IAAI;AACpB,WAAKC,QAAL,CAAc;AACZH,QAAAA,aAAa,EAAEE;AADH,OAAd;AAID,KAViB;;AAAA,SAYlBE,aAZkB,GAYF,MAAM;AACpB,UAAG,KAAKT,KAAL,CAAWU,OAAd,EAAuB;AACrB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACD,OAFD,MAEO;AACL,eACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,SAAD;AAAW,UAAA,UAAU,EAAE,KAAKV,KAAL,CAAWW,UAAlC;AAA8C,UAAA,aAAa,EAAE,KAAKN,aAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CADA;AAKD;AACF,KAtBiB;;AAEhB,SAAKA,aAAL,GAAqB,KAAKA,aAAL,CAAmBO,IAAnB,CAAwB,IAAxB,CAArB;AACD,GAVgC,CAWnC;;;AAoBEC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,aAAL,EADH,CADF;AAKD;;AArCgC;;AA0CnC,MAAMK,kBAAkB,GAAGV,KAAK,IAAI;AAClC,SAAO;AACLO,IAAAA,UAAU,EAAEP,KAAK,CAACW,aAAN,CAAoBC,MAD3B;AAELX,IAAAA,aAAa,EAAGD,KAAK,CAACa,cAAN,CAAqBZ,aAFhC;AAGLK,IAAAA,OAAO,EAAEN,KAAK,CAACW,aAAN,CAAoBL;AAHxB,GAAP;AAKD,CAND;;AAQA,eAAef,OAAO,CAACmB,kBAAD,EAAqB;AAAClB,EAAAA;AAAD,CAArB,CAAP,CAA2CE,UAA3C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../actions/movieActions'\nimport MovieList from '../components/MovieList'\n\nclass MoviesPage extends Component {   \n  \n  componentDidMount() {\n    this.props.fetchMovies(this.props.handler)\n    console.log(this.state.currentStream)\n  }\n//binds passed handler to StreamsPage handler\n  constructor(props){\n    super(props)\n    this.currentStream = this.currentStream.bind(this)\n  }\n// recieves id from passed handler\n  currentStream = id => {\n    this.setState({\n      currentStream: id\n    });\n    \n  }\n  \n  handleLoading = () => {\n    if(this.props.loading) {\n      return <div>Loading Movies...</div>\n    } else {\n      return (\n      <div>\n      <MovieList movieCards={this.props.movieCards} currentStream={this.currentStream}/>\n      </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.handleLoading()}\n      </div>\n    );\n  }\n}\n\n\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    currentStream : state.StreamsReducer.currentStream,\n    loading: state.MoviesReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {fetchMovies})(MoviesPage)"]},"metadata":{},"sourceType":"module"}