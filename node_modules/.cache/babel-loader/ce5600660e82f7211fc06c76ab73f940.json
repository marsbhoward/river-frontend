{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/Streams.js\";\nimport Data from '../data';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Streams extends Component {\n  render() {\n    let authors = this.props.authors.map(stream => React.createElement(\"li\", {\n      key: stream.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, stream.name));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, streams));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    streams: state.streams\n  };\n};\n\nexport default connect(mapStateToProps)(Stream);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/Streams.js"],"names":["Data","React","Component","connect","Streams","render","authors","props","map","stream","id","name","streams","mapStateToProps","state","Stream"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAA+B;AAE7BG,EAAAA,MAAM,GAAG;AAEP,QAAIC,OAAO,GAAG,KAAKC,KAAL,CAAWD,OAAX,CAAmBE,GAAnB,CAAuBC,MAAM,IAAI;AAAI,MAAA,GAAG,EAAEA,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBD,MAAM,CAACE,IAA5B,CAAjC,CAAd;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,OADH,CADF,CADF;AAOD;;AAb4B;;AAc9B;;AAED,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AAAEF,IAAAA,OAAO,EAAEE,KAAK,CAACF;AAAjB,GAAP;AACD,CAFD;;AAIA,eAAeT,OAAO,CAACU,eAAD,CAAP,CAAyBE,MAAzB,CAAf","sourcesContent":["import Data from '../data';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Streams extends Component{\n\n  render() {\n\n    let authors = this.props.authors.map(stream => <li key={stream.id}>{stream.name}</li>);\n\n    return (\n      <div>\n        <ul>\n          {streams}\n        </ul>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return { streams: state.streams }\n}\n\nexport default connect(mapStateToProps)(Stream);\n"]},"metadata":{},"sourceType":"module"}