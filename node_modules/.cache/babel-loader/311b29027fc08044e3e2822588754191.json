{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/ProfilePage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserStreams } from '../actions/userStreamActions';\nimport Profile from '../components/Profile';\nimport { Auth0Context } from \"../react-auth0-spa\";\nimport { Fragment } from \"react\";\n\nclass ProfilePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchUserStreams = () => {\n      this.props.fetchUserStreams();\n    };\n\n    this.handler = id => {\n      this.setState({\n        currentUserId: id\n      });\n    };\n\n    this.handleClick = () => {};\n\n    this.handleLoading = userid => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Loading Streams...\");\n      } else {\n        return React.createElement(Profile, {\n          userID: userid,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.handler = this.handler.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this);\n  }\n\n  componentDidUpdate(prevProps) {}\n\n  render() {\n    const {\n      loading,\n      user\n    } = this.context;\n    const {\n      isAuthenticated,\n      loginWithRedirect\n    } = this.context;\n\n    if (loading || !user) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: user.picture,\n      alt: \"Profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Hi, \", user.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"email: \", user.email), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Edit Streams\"), this.handleLoading(user.id));\n  }\n\n}\n\nProfilePage.contextType = Auth0Context;\nconst adapter = {\n  getUser: (email, username) => {\n    return fetch(`https://cors-anywhere.herokuapp.com/https://river-api.herokuapp.com/users`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        username\n      })\n    }).then(res => res.json());\n  }\n};\n\nconst mapDispatchToProps = state => {\n  return {\n    userStreams: state.StreamsReducer.streams,\n    loading: state.StreamsReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  fetchUserStreams\n})(ProfilePage);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/ProfilePage.js"],"names":["React","Component","connect","fetchUserStreams","Profile","Auth0Context","Fragment","ProfilePage","constructor","props","handler","id","setState","currentUserId","handleClick","handleLoading","userid","loading","bind","componentDidMount","console","log","componentDidUpdate","prevProps","render","user","context","isAuthenticated","loginWithRedirect","picture","name","email","contextType","adapter","getUser","username","fetch","method","headers","body","JSON","stringify","then","res","json","mapDispatchToProps","state","userStreams","StreamsReducer","streams"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserStreams } from '../actions/userStreamActions'\nimport Profile from '../components/Profile';\nimport { Auth0Context } from \"../react-auth0-spa\";\nimport { Fragment } from \"react\";\n\n\nclass ProfilePage extends Component {\n static contextType = Auth0Context;  \n\n  constructor(props){\n    super(props)\n    this.handler = this.handler.bind(this)\n  }\n  \n  componentDidMount() {\n    console.log(this)\n  }\n\n  componentDidUpdate(prevProps){\n  }\n\n  fetchUserStreams = () => {\n  \tthis.props.fetchUserStreams()\n  }\n\n  handler = (id) => {\n    this.setState({\n      currentUserId: id,\n    })\n  }\n\n  handleClick = () => {\n\n  }\n\n  handleLoading = (userid) => {\n    if(this.props.loading) {\n      return <div>Loading Streams...</div>\n    } else {\n      \n      return <Profile userID={userid} />\n    }\n  }\n\n  render() {\n    const { loading, user } = this.context;\n    const { isAuthenticated, loginWithRedirect} = this.context;\n    if (loading || !user) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n    \t<div className= \"profile\">\n        <img src={user.picture} alt=\"Profile\" />\n        <h2>Hi, {user.name}</h2>\n        <p>email: {user.email}</p>\n        <button onClick={this.handleClick}>Edit Streams</button>\n        {this.handleLoading(user.id)}\n      </div>        \n\t\t\t\n \t);\n  }\n}\n\nconst adapter = {\n  getUser: (email,username) => {\n    return fetch(`https://cors-anywhere.herokuapp.com/https://river-api.herokuapp.com/users`, {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({email, username})\n    })\n  .then(res => res.json())       \n  }\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    userStreams: state.StreamsReducer.streams,\n    loading: state.StreamsReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {fetchUserStreams})(ProfilePage)"]},"metadata":{},"sourceType":"module"}