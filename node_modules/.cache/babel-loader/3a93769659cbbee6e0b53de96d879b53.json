{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/MoviesPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../actions/movieActions';\nimport MovieList from '../components/MovieList';\n\nclass MoviesPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, \"Loading Movies...\");\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(MovieList, {\n          movieCards: this.props.movieCards,\n          currentStream: this.currentStream,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchMovies(this.props.handler);\n    console.log(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"banner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \" \", this.props.handler), this.handleLoading());\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    loading: state.MoviesReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  fetchMovies\n})(MoviesPage);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/MoviesPage.js"],"names":["React","Component","connect","fetchMovies","MovieList","MoviesPage","handleLoading","props","loading","movieCards","currentStream","componentDidMount","handler","console","log","render","mapDispatchToProps","state","MoviesReducer","movies"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SASjCK,aATiC,GASjB,MAAM;AACpB,UAAG,KAAKC,KAAL,CAAWC,OAAd,EAAuB;AACrB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACD,OAFD,MAEO;AACL,eACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,SAAD;AAAW,UAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE,UAAlC;AAA8C,UAAA,aAAa,EAAE,KAAKC,aAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,CADA;AAKD;AACF,KAnBgC;AAAA;;AAEjCC,EAAAA,iBAAiB,GAAG;AAEpB,SAAKJ,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWK,OAAlC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AAEC;;AAcDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA0B,KAAKR,KAAL,CAAWK,OAArC,CADF,EAEG,KAAKN,aAAL,EAFH,CADF;AAMD;;AA5BgC;;AAiCnC,MAAMU,kBAAkB,GAAGC,KAAK,IAAI;AAClC,SAAO;AACLR,IAAAA,UAAU,EAAEQ,KAAK,CAACC,aAAN,CAAoBC,MAD3B;AAELX,IAAAA,OAAO,EAAES,KAAK,CAACC,aAAN,CAAoBV;AAFxB,GAAP;AAID,CALD;;AAOA,eAAeN,OAAO,CAACc,kBAAD,EAAqB;AAACb,EAAAA;AAAD,CAArB,CAAP,CAA2CE,UAA3C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchMovies } from '../actions/movieActions'\nimport MovieList from '../components/MovieList'\n\nclass MoviesPage extends Component {   \n  \n  componentDidMount() {\n\n  this.props.fetchMovies(this.props.handler)\n  console.log(this)\n\n  }\n  \n  handleLoading = () => {\n    if(this.props.loading) {\n      return <div>Loading Movies...</div>\n    } else {\n      return (\n      <div>\n      <MovieList movieCards={this.props.movieCards} currentStream={this.currentStream}/>\n      </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"banner\"> {this.props.handler}</div>\n        {this.handleLoading()}\n      </div>\n    );\n  }\n}\n\n\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies,\n    loading: state.MoviesReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {fetchMovies})(MoviesPage)"]},"metadata":{},"sourceType":"module"}