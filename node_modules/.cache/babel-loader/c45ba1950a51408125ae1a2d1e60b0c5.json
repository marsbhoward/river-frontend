{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/ProfilePage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserStreams } from '../actions/userStreamActions';\nimport Profile from '../components/Profile';\nimport { Auth0Context } from \"../react-auth0-spa\";\nimport { Fragment } from \"react\";\n\nclass ProfilePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchUserStreams = () => {\n      this.props.fetchUserStreams();\n    };\n\n    this.handler = id => {\n      this.setState({\n        currentUserId: id\n      });\n    };\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"Loading Profile...\");\n      }\n    };\n\n    this.handler = this.handler.bind(this);\n  }\n\n  componentDidMount() {\n    adapter.createUser(user.email, user.name).then(res => {\n      user.id = res.id;\n      getUserStreams(user.id);\n    });\n  }\n\n  componentDidUpdate(prevProps) {}\n\n  render() {\n    const {\n      loading,\n      user\n    } = this.context;\n\n    if (loading || !user) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"Profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"//profile component goes here\", React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Hi, \", user.email), console.log(user)));\n  }\n\n}\n\nProfilePage.contextType = Auth0Context;\nconst adapter = {\n  createUser: (email, username) => {\n    return fetch(`https://cors-anywhere.herokuapp.com/https://river-api.herokuapp.com/users`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        username\n      })\n    }).then(res => res.json());\n  }\n};\n\nconst mapDispatchToProps = state => {\n  return {\n    userStreams: state.StreamsReducer.streams,\n    loading: state.StreamsReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  fetchUserStreams\n})(ProfilePage);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/ProfilePage.js"],"names":["React","Component","connect","fetchUserStreams","Profile","Auth0Context","Fragment","ProfilePage","constructor","props","handler","id","setState","currentUserId","handleLoading","loading","bind","componentDidMount","adapter","createUser","user","email","name","then","res","getUserStreams","componentDidUpdate","prevProps","render","context","console","log","contextType","username","fetch","method","headers","body","JSON","stringify","json","mapDispatchToProps","state","userStreams","StreamsReducer","streams"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAGlCO,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAelBN,gBAfkB,GAeC,MAAM;AACxB,WAAKM,KAAL,CAAWN,gBAAX;AACA,KAjBiB;;AAAA,SAmBlBO,OAnBkB,GAmBPC,EAAD,IAAQ;AAChB,WAAKC,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAEF;AADH,OAAd;AAGD,KAvBiB;;AAAA,SA2BlBG,aA3BkB,GA2BF,MAAM;AACpB,UAAG,KAAKL,KAAL,CAAWM,OAAd,EACA;AACE,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACD;AAEF,KAjCiB;;AAEhB,SAAKL,OAAL,GAAe,KAAKA,OAAL,CAAaM,IAAb,CAAkB,IAAlB,CAAf;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,UAAR,CAAmBC,IAAI,CAACC,KAAxB,EAA8BD,IAAI,CAACE,IAAnC,EAAyCC,IAAzC,CAA8CC,GAAG,IAAG;AAClDJ,MAAAA,IAAI,CAACT,EAAL,GAAUa,GAAG,CAACb,EAAd;AACAc,MAAAA,cAAc,CAACL,IAAI,CAACT,EAAN,CAAd;AACD,KAHD;AAID;;AAEDe,EAAAA,kBAAkB,CAACC,SAAD,EAAW,CAC5B;;AAsBDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA,OAAF;AAAWK,MAAAA;AAAX,QAAoB,KAAKS,OAA/B;;AACA,QAAId,OAAO,IAAI,CAACK,IAAhB,EAAsB;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,WACC;AAAK,MAAA,SAAS,EAAE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAEG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAASA,IAAI,CAACC,KAAd,CADA,EAECS,OAAO,CAACC,GAAR,CAAYX,IAAZ,CAFD,CAFH,CADD;AASD;;AArDiC;;AAA9Bb,W,CACEyB,W,GAAc3B,Y;AAuDtB,MAAMa,OAAO,GAAG;AACdC,EAAAA,UAAU,EAAE,CAACE,KAAD,EAAOY,QAAP,KAAoB;AAC9B,WAAOC,KAAK,CAAE,2EAAF,EAA8E;AACxFC,MAAAA,MAAM,EAAE,MADgF;AAExFC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAF+E;AAGxFC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAClB,QAAAA,KAAD;AAAQY,QAAAA;AAAR,OAAf;AAHkF,KAA9E,CAAL,CAKRV,IALQ,CAKHC,GAAG,IAAIA,GAAG,CAACgB,IAAJ,EALJ,CAAP;AAMD;AARa,CAAhB;;AAWA,MAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAClC,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACE,cAAN,CAAqBC,OAD7B;AAEL9B,IAAAA,OAAO,EAAE2B,KAAK,CAACE,cAAN,CAAqB7B;AAFzB,GAAP;AAID,CALD;;AAOA,eAAeb,OAAO,CAACuC,kBAAD,EAAqB;AAACtC,EAAAA;AAAD,CAArB,CAAP,CAAgDI,WAAhD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserStreams } from '../actions/userStreamActions'\nimport Profile from '../components/Profile';\nimport { Auth0Context } from \"../react-auth0-spa\";\nimport { Fragment } from \"react\";\n\n\nclass ProfilePage extends Component {\n static contextType = Auth0Context;  \n\n  constructor(props){\n    super(props)\n    this.handler = this.handler.bind(this)\n  }\n  \n  componentDidMount() {\n    adapter.createUser(user.email,user.name).then(res=> {\n      user.id = res.id\n      getUserStreams(user.id)\n    })\n  }\n\n  componentDidUpdate(prevProps){\n  }\n\n  fetchUserStreams = () => {\n  \tthis.props.fetchUserStreams()\n  }\n\n  handler = (id) => {\n    this.setState({\n      currentUserId: id,\n    })\n  }\n\n\n\n  handleLoading = () => {\n    if(this.props.loading) \n    {\n      return <div>Loading Profile...</div>\n    } \n  \n  }\n\n  render() {\n    const { loading, user } = this.context;\n    if (loading || !user) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n    \t<div className= \"Profile\">\n      //profile component goes here\n        <Fragment>\n        <h2>Hi, {user.email}</h2>\n        {console.log(user)}\n        </Fragment>\n\t\t</div>\t\t\t\n \t);\n  }\n}\n\nconst adapter = {\n  createUser: (email,username) => {\n    return fetch(`https://cors-anywhere.herokuapp.com/https://river-api.herokuapp.com/users`, {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({email, username})\n    })\n  .then(res => res.json())       \n  }\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    userStreams: state.StreamsReducer.streams,\n    loading: state.StreamsReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {fetchUserStreams})(ProfilePage)"]},"metadata":{},"sourceType":"module"}