{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/MovieList.js\";\nimport React from 'react';\nimport '../index.css';\nimport Movie from './Movie';\nimport InfoPage from '../containers/InfoPage';\nlet moviesList;\n\nclass MovieList extends React.Component {\n  componentDidMount() {\n    console.log(this.props.passedMovie);\n\n    if (typeof this.props.passedMovie !== \"undefined\") {\n      this.setCurrentMovieState();\n    } else {}\n  } //binds passed handler to MoviesPage handler\n\n\n  constructor(props) {\n    super(props);\n\n    this.setCurrentMovieState = () => {\n      console.log('set new movie state');\n      this.setState({\n        currentMovie: this.props.passedMovie\n      }); //console.log(this.state.currentMovie)\n    };\n\n    this.handler = (movie, clicked, movieID) => {\n      //localStorage.setItem('currentMovie', this.props.movieIds[(movieID-1)])\n      console.log('updated current movie id');\n      this.setState({\n        currentMovie: movie,\n        clicked: true,\n        movieID: movieID\n      });\n    };\n\n    this.trailerID = trailer => {\n      this.props.trailerID(trailer);\n    };\n\n    this.handler = this.handler.bind(this);\n    this.state = {\n      clicked: this.props.isClicked\n    };\n  }\n\n  render() {\n    //addition if to make sure passed movie is in\n    if (localStorage.currentMovieList !== \" \") {\n      moviesList = JSON.parse(localStorage.currentMovieList).map((movie, index) => {\n        return /*#__PURE__*/React.createElement(Movie, {\n          key: index,\n          movie: movie,\n          passGetData: this.props.passGetData,\n          handler: this.handler,\n          movieID: index + 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 16\n          }\n        });\n      });\n    } else {\n      moviesList = this.props.movieCards.map((movie, index) => {\n        return /*#__PURE__*/React.createElement(Movie, {\n          key: index,\n          movie: movie,\n          passGetData: this.props.passGetData,\n          handler: this.handler,\n          movieID: index + 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 16\n          }\n        });\n      });\n    }\n\n    if (this.state.clicked !== true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"NotClicked\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 10\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"movie-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 8\n        }\n      }, moviesList));\n    } else if (typeof this.props.passedMovie !== \"undefined\") {\n      console.log('passed Movie not undefined');\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"WasClicked\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(InfoPage, {\n        movieIds: this.props.movieIds,\n        streamID: this.props.streamID,\n        movieID: parseInt(localStorage.currentMovie),\n        currentBackend: this.props.movieBackend,\n        currentMovie: this.props.passedMovie,\n        trailerID: this.trailerID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"movie-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, moviesList, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      })));\n    } else {\n      console.log('passed movie undefined'); // get omdb movie\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(InfoPage, {\n        movieIds: this.props.movieIds,\n        streamID: this.props.streamID,\n        movieID: parseInt(localStorage.currentMovie),\n        currentMovie: JSON.parse(localStorage.selectedMovie),\n        trailerID: this.trailerID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"movie-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, moviesList));\n    }\n  }\n\n}\n\nexport default MovieList;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/MovieList.js"],"names":["React","Movie","InfoPage","moviesList","MovieList","Component","componentDidMount","console","log","props","passedMovie","setCurrentMovieState","constructor","setState","currentMovie","handler","movie","clicked","movieID","trailerID","trailer","bind","state","isClicked","render","localStorage","currentMovieList","JSON","parse","map","index","passGetData","movieCards","movieIds","streamID","parseInt","movieBackend","selectedMovie"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../index.css';\nimport Movie from './Movie';\nimport InfoPage from '../containers/InfoPage'\n\nlet moviesList\n\n\nclass MovieList extends React.Component {\n  componentDidMount() {\n    console.log(this.props.passedMovie)\n    if (typeof this.props.passedMovie !== \"undefined\"){\n      this.setCurrentMovieState()\n    }\n    else{\n      \n    }\n   }\n\n//binds passed handler to MoviesPage handler\n  constructor(props){\n    super(props)\n    this.handler = this.handler.bind(this);\n    this.state = {\n      clicked: this.props.isClicked\n    }\n\n  }\n\n  setCurrentMovieState = () =>{\n    console.log('set new movie state')\n    this.setState({\n        currentMovie: this.props.passedMovie\n    })\n    //console.log(this.state.currentMovie)\n  }\n\n// recieves id from passed handler\n  handler = (movie, clicked, movieID) => {\n    //localStorage.setItem('currentMovie', this.props.movieIds[(movieID-1)])\n    console.log('updated current movie id')\n    this.setState({\n      currentMovie: movie,\n      clicked: true,\n      movieID: movieID\n    })   \n  }\n\n  trailerID = (trailer) => { \n    this.props.trailerID(trailer)\n  }\n\n  render() {\n    //addition if to make sure passed movie is in\n    if (localStorage.currentMovieList !== \" \"){\n      moviesList = JSON.parse(localStorage.currentMovieList).map((movie, index) => {\n        return <Movie key={index} movie={movie} passGetData={this.props.passGetData} handler={this.handler} movieID={(index+1)}/>\n      })\n    }\n    else{\n      moviesList = this.props.movieCards.map((movie, index) => {\n        return <Movie key={index} movie={movie} passGetData={this.props.passGetData} handler={this.handler} movieID={(index+1)}/>\n      })  \n    }\n\n    if (this.state.clicked !== true) {  \n     return (\n       <div className= \"NotClicked\">\n         <br/>\n       <div className=\"movie-list\">\n           {moviesList}\n       </div>\n       </div>\n     )\n   }\n    else\n      if (typeof this.props.passedMovie !== \"undefined\"){\n        console.log('passed Movie not undefined')\n        return(\n          <div className = \"WasClicked\">\n            <br/>\n            <InfoPage movieIds={this.props.movieIds} streamID={this.props.streamID} movieID={parseInt(localStorage.currentMovie)} currentBackend={this.props.movieBackend} currentMovie={this.props.passedMovie} trailerID={this.trailerID}/>\n            <div className=\"movie-list\">\n                {moviesList}\n                <br/>\n            </div>\n          </div>\n        )\n      }\n      else{\n        console.log('passed movie undefined')\n        // get omdb movie\n        return(\n          <div>\n            <br/>\n            <InfoPage movieIds={this.props.movieIds} streamID={this.props.streamID} movieID={parseInt(localStorage.currentMovie)} currentMovie={JSON.parse(localStorage.selectedMovie)} trailerID={this.trailerID}/>\n            <div className=\"movie-list\">\n                {moviesList}\n            </div>\n          </div>\n        )              \n      }\n   }\n  }\nexport default (MovieList);"]},"metadata":{},"sourceType":"module"}