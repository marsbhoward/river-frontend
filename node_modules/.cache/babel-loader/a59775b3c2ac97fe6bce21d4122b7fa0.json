{"ast":null,"code":"/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst {\n  helper,\n  assert,\n  debugError\n} = require('./helper');\n\nfunction createJSHandle(context, remoteObject) {\n  const frame = context.frame();\n\n  if (remoteObject.subtype === 'node' && frame) {\n    const frameManager = frame._frameManager;\n    return new ElementHandle(context, context._client, remoteObject, frameManager.page(), frameManager);\n  }\n\n  return new JSHandle(context, context._client, remoteObject);\n}\n\nclass JSHandle {\n  /**\n   * @param {!Puppeteer.ExecutionContext} context\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Runtime.RemoteObject} remoteObject\n   */\n  constructor(context, client, remoteObject) {\n    this._context = context;\n    this._client = client;\n    this._remoteObject = remoteObject;\n    this._disposed = false;\n  }\n  /**\n   * @return {!Puppeteer.ExecutionContext}\n   */\n\n\n  executionContext() {\n    return this._context;\n  }\n  /**\n   * @param {Function|String} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n\n\n  async evaluate(pageFunction, ...args) {\n    return await this.executionContext().evaluate(pageFunction, this, ...args);\n  }\n  /**\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n\n\n  async evaluateHandle(pageFunction, ...args) {\n    return await this.executionContext().evaluateHandle(pageFunction, this, ...args);\n  }\n  /**\n   * @param {string} propertyName\n   * @return {!Promise<?JSHandle>}\n   */\n\n\n  async getProperty(propertyName) {\n    const objectHandle = await this.evaluateHandle((object, propertyName) => {\n      const result = {\n        __proto__: null\n      };\n      result[propertyName] = object[propertyName];\n      return result;\n    }, propertyName);\n    const properties = await objectHandle.getProperties();\n    const result = properties.get(propertyName) || null;\n    await objectHandle.dispose();\n    return result;\n  }\n  /**\n   * @return {!Promise<!Map<string, !JSHandle>>}\n   */\n\n\n  async getProperties() {\n    const response = await this._client.send('Runtime.getProperties', {\n      objectId: this._remoteObject.objectId,\n      ownProperties: true\n    });\n    const result = new Map();\n\n    for (const property of response.result) {\n      if (!property.enumerable) continue;\n      result.set(property.name, createJSHandle(this._context, property.value));\n    }\n\n    return result;\n  }\n  /**\n   * @return {!Promise<?Object>}\n   */\n\n\n  async jsonValue() {\n    if (this._remoteObject.objectId) {\n      const response = await this._client.send('Runtime.callFunctionOn', {\n        functionDeclaration: 'function() { return this; }',\n        objectId: this._remoteObject.objectId,\n        returnByValue: true,\n        awaitPromise: true\n      });\n      return helper.valueFromRemoteObject(response.result);\n    }\n\n    return helper.valueFromRemoteObject(this._remoteObject);\n  }\n  /**\n   * @return {?Puppeteer.ElementHandle}\n   */\n\n\n  asElement() {\n    return null;\n  }\n\n  async dispose() {\n    if (this._disposed) return;\n    this._disposed = true;\n    await helper.releaseObject(this._client, this._remoteObject);\n  }\n  /**\n   * @override\n   * @return {string}\n   */\n\n\n  toString() {\n    if (this._remoteObject.objectId) {\n      const type = this._remoteObject.subtype || this._remoteObject.type;\n      return 'JSHandle@' + type;\n    }\n\n    return 'JSHandle:' + helper.valueFromRemoteObject(this._remoteObject);\n  }\n\n}\n\nclass ElementHandle extends JSHandle {\n  /**\n   * @param {!Puppeteer.ExecutionContext} context\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Runtime.RemoteObject} remoteObject\n   * @param {!Puppeteer.Page} page\n   * @param {!Puppeteer.FrameManager} frameManager\n   */\n  constructor(context, client, remoteObject, page, frameManager) {\n    super(context, client, remoteObject);\n    this._client = client;\n    this._remoteObject = remoteObject;\n    this._page = page;\n    this._frameManager = frameManager;\n    this._disposed = false;\n  }\n  /**\n   * @override\n   * @return {?ElementHandle}\n   */\n\n\n  asElement() {\n    return this;\n  }\n  /**\n   * @return {!Promise<?Puppeteer.Frame>}\n   */\n\n\n  async contentFrame() {\n    const nodeInfo = await this._client.send('DOM.describeNode', {\n      objectId: this._remoteObject.objectId\n    });\n    if (typeof nodeInfo.node.frameId !== 'string') return null;\n    return this._frameManager.frame(nodeInfo.node.frameId);\n  }\n\n  async _scrollIntoViewIfNeeded() {\n    const error = await this.evaluate(async (element, pageJavascriptEnabled) => {\n      if (!element.isConnected) return 'Node is detached from document';\n      if (element.nodeType !== Node.ELEMENT_NODE) return 'Node is not of type HTMLElement'; // force-scroll if page's javascript is disabled.\n\n      if (!pageJavascriptEnabled) {\n        element.scrollIntoView({\n          block: 'center',\n          inline: 'center',\n          behavior: 'instant'\n        });\n        return false;\n      }\n\n      const visibleRatio = await new Promise(resolve => {\n        const observer = new IntersectionObserver(entries => {\n          resolve(entries[0].intersectionRatio);\n          observer.disconnect();\n        });\n        observer.observe(element);\n      });\n      if (visibleRatio !== 1.0) element.scrollIntoView({\n        block: 'center',\n        inline: 'center',\n        behavior: 'instant'\n      });\n      return false;\n    }, this._page._javascriptEnabled);\n    if (error) throw new Error(error);\n  }\n  /**\n   * @return {!Promise<!{x: number, y: number}>}\n   */\n\n\n  async _clickablePoint() {\n    const [result, layoutMetrics] = await Promise.all([this._client.send('DOM.getContentQuads', {\n      objectId: this._remoteObject.objectId\n    }).catch(debugError), this._client.send('Page.getLayoutMetrics')]);\n    if (!result || !result.quads.length) throw new Error('Node is either not visible or not an HTMLElement'); // Filter out quads that have too small area to click into.\n\n    const {\n      clientWidth,\n      clientHeight\n    } = layoutMetrics.layoutViewport;\n    const quads = result.quads.map(quad => this._fromProtocolQuad(quad)).map(quad => this._intersectQuadWithViewport(quad, clientWidth, clientHeight)).filter(quad => computeQuadArea(quad) > 1);\n    if (!quads.length) throw new Error('Node is either not visible or not an HTMLElement'); // Return the middle point of the first quad.\n\n    const quad = quads[0];\n    let x = 0;\n    let y = 0;\n\n    for (const point of quad) {\n      x += point.x;\n      y += point.y;\n    }\n\n    return {\n      x: x / 4,\n      y: y / 4\n    };\n  }\n  /**\n   * @return {!Promise<void|Protocol.DOM.getBoxModelReturnValue>}\n   */\n\n\n  _getBoxModel() {\n    return this._client.send('DOM.getBoxModel', {\n      objectId: this._remoteObject.objectId\n    }).catch(error => debugError(error));\n  }\n  /**\n   * @param {!Array<number>} quad\n   * @return {!Array<{x: number, y: number}>}\n   */\n\n\n  _fromProtocolQuad(quad) {\n    return [{\n      x: quad[0],\n      y: quad[1]\n    }, {\n      x: quad[2],\n      y: quad[3]\n    }, {\n      x: quad[4],\n      y: quad[5]\n    }, {\n      x: quad[6],\n      y: quad[7]\n    }];\n  }\n  /**\n   * @param {!Array<{x: number, y: number}>} quad\n   * @param {number} width\n   * @param {number} height\n   * @return {!Array<{x: number, y: number}>}\n   */\n\n\n  _intersectQuadWithViewport(quad, width, height) {\n    return quad.map(point => ({\n      x: Math.min(Math.max(point.x, 0), width),\n      y: Math.min(Math.max(point.y, 0), height)\n    }));\n  }\n\n  async hover() {\n    await this._scrollIntoViewIfNeeded();\n    const {\n      x,\n      y\n    } = await this._clickablePoint();\n    await this._page.mouse.move(x, y);\n  }\n  /**\n   * @param {!{delay?: number, button?: \"left\"|\"right\"|\"middle\", clickCount?: number}=} options\n   */\n\n\n  async click(options) {\n    await this._scrollIntoViewIfNeeded();\n    const {\n      x,\n      y\n    } = await this._clickablePoint();\n    await this._page.mouse.click(x, y, options);\n  }\n  /**\n   * @param {!Array<string>} values\n   * @return {!Promise<!Array<string>>}\n   */\n\n\n  async select(...values) {\n    for (const value of values) assert(helper.isString(value), 'Values must be strings. Found value \"' + value + '\" of type \"' + typeof value + '\"');\n\n    return this.evaluate((element, values) => {\n      if (element.nodeName.toLowerCase() !== 'select') throw new Error('Element is not a <select> element.');\n      const options = Array.from(element.options);\n      element.value = undefined;\n\n      for (const option of options) {\n        option.selected = values.includes(option.value);\n        if (option.selected && !element.multiple) break;\n      }\n\n      element.dispatchEvent(new Event('input', {\n        bubbles: true\n      }));\n      element.dispatchEvent(new Event('change', {\n        bubbles: true\n      }));\n      return options.filter(option => option.selected).map(option => option.value);\n    }, values);\n  }\n  /**\n   * @param {!Array<string>} filePaths\n   */\n\n\n  async uploadFile(...filePaths) {\n    const isMultiple = await this.evaluate(element => element.multiple);\n    assert(filePaths.length <= 1 || isMultiple, 'Multiple file uploads only work with <input type=file multiple>'); // These imports are only needed for `uploadFile`, so keep them\n    // scoped here to avoid paying the cost unnecessarily.\n\n    const path = require('path');\n\n    const mime = require('mime-types');\n\n    const fs = require('fs');\n\n    const readFileAsync = helper.promisify(fs.readFile);\n    const promises = filePaths.map(filePath => readFileAsync(filePath));\n    const files = [];\n\n    for (let i = 0; i < filePaths.length; i++) {\n      const buffer = await promises[i];\n      const filePath = path.basename(filePaths[i]);\n      const file = {\n        name: filePath,\n        content: buffer.toString('base64'),\n        mimeType: mime.lookup(filePath)\n      };\n      files.push(file);\n    }\n\n    await this.evaluateHandle(async (element, files) => {\n      const dt = new DataTransfer();\n\n      for (const item of files) {\n        const response = await fetch(`data:${item.mimeType};base64,${item.content}`);\n        const file = new File([await response.blob()], item.name);\n        dt.items.add(file);\n      }\n\n      element.files = dt.files;\n      element.dispatchEvent(new Event('input', {\n        bubbles: true\n      }));\n    }, files);\n  }\n\n  async tap() {\n    await this._scrollIntoViewIfNeeded();\n    const {\n      x,\n      y\n    } = await this._clickablePoint();\n    await this._page.touchscreen.tap(x, y);\n  }\n\n  async focus() {\n    await this.evaluate(element => element.focus());\n  }\n  /**\n   * @param {string} text\n   * @param {{delay: (number|undefined)}=} options\n   */\n\n\n  async type(text, options) {\n    await this.focus();\n    await this._page.keyboard.type(text, options);\n  }\n  /**\n   * @param {string} key\n   * @param {!{delay?: number, text?: string}=} options\n   */\n\n\n  async press(key, options) {\n    await this.focus();\n    await this._page.keyboard.press(key, options);\n  }\n  /**\n   * @return {!Promise<?{x: number, y: number, width: number, height: number}>}\n   */\n\n\n  async boundingBox() {\n    const result = await this._getBoxModel();\n    if (!result) return null;\n    const quad = result.model.border;\n    const x = Math.min(quad[0], quad[2], quad[4], quad[6]);\n    const y = Math.min(quad[1], quad[3], quad[5], quad[7]);\n    const width = Math.max(quad[0], quad[2], quad[4], quad[6]) - x;\n    const height = Math.max(quad[1], quad[3], quad[5], quad[7]) - y;\n    return {\n      x,\n      y,\n      width,\n      height\n    };\n  }\n  /**\n   * @return {!Promise<?BoxModel>}\n   */\n\n\n  async boxModel() {\n    const result = await this._getBoxModel();\n    if (!result) return null;\n    const {\n      content,\n      padding,\n      border,\n      margin,\n      width,\n      height\n    } = result.model;\n    return {\n      content: this._fromProtocolQuad(content),\n      padding: this._fromProtocolQuad(padding),\n      border: this._fromProtocolQuad(border),\n      margin: this._fromProtocolQuad(margin),\n      width,\n      height\n    };\n  }\n  /**\n   *\n   * @param {!Object=} options\n   * @returns {!Promise<string|!Buffer>}\n   */\n\n\n  async screenshot(options = {}) {\n    let needsViewportReset = false;\n    let boundingBox = await this.boundingBox();\n    assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n\n    const viewport = this._page.viewport();\n\n    if (viewport && (boundingBox.width > viewport.width || boundingBox.height > viewport.height)) {\n      const newViewport = {\n        width: Math.max(viewport.width, Math.ceil(boundingBox.width)),\n        height: Math.max(viewport.height, Math.ceil(boundingBox.height))\n      };\n      await this._page.setViewport(Object.assign({}, viewport, newViewport));\n      needsViewportReset = true;\n    }\n\n    await this._scrollIntoViewIfNeeded();\n    boundingBox = await this.boundingBox();\n    assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n    assert(boundingBox.width !== 0, 'Node has 0 width.');\n    assert(boundingBox.height !== 0, 'Node has 0 height.');\n    const {\n      layoutViewport: {\n        pageX,\n        pageY\n      }\n    } = await this._client.send('Page.getLayoutMetrics');\n    const clip = Object.assign({}, boundingBox);\n    clip.x += pageX;\n    clip.y += pageY;\n    const imageData = await this._page.screenshot(Object.assign({}, {\n      clip\n    }, options));\n    if (needsViewportReset) await this._page.setViewport(viewport);\n    return imageData;\n  }\n  /**\n   * @param {string} selector\n   * @return {!Promise<?ElementHandle>}\n   */\n\n\n  async $(selector) {\n    const handle = await this.evaluateHandle((element, selector) => element.querySelector(selector), selector);\n    const element = handle.asElement();\n    if (element) return element;\n    await handle.dispose();\n    return null;\n  }\n  /**\n   * @param {string} selector\n   * @return {!Promise<!Array<!ElementHandle>>}\n   */\n\n\n  async $$(selector) {\n    const arrayHandle = await this.evaluateHandle((element, selector) => element.querySelectorAll(selector), selector);\n    const properties = await arrayHandle.getProperties();\n    await arrayHandle.dispose();\n    const result = [];\n\n    for (const property of properties.values()) {\n      const elementHandle = property.asElement();\n      if (elementHandle) result.push(elementHandle);\n    }\n\n    return result;\n  }\n  /**\n   * @param {string} selector\n   * @param {Function|String} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n\n\n  async $eval(selector, pageFunction, ...args) {\n    const elementHandle = await this.$(selector);\n    if (!elementHandle) throw new Error(`Error: failed to find element matching selector \"${selector}\"`);\n    const result = await elementHandle.evaluate(pageFunction, ...args);\n    await elementHandle.dispose();\n    return result;\n  }\n  /**\n   * @param {string} selector\n   * @param {Function|String} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n\n\n  async $$eval(selector, pageFunction, ...args) {\n    const arrayHandle = await this.evaluateHandle((element, selector) => Array.from(element.querySelectorAll(selector)), selector);\n    const result = await arrayHandle.evaluate(pageFunction, ...args);\n    await arrayHandle.dispose();\n    return result;\n  }\n  /**\n   * @param {string} expression\n   * @return {!Promise<!Array<!ElementHandle>>}\n   */\n\n\n  async $x(expression) {\n    const arrayHandle = await this.evaluateHandle((element, expression) => {\n      const document = element.ownerDocument || element;\n      const iterator = document.evaluate(expression, element, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE);\n      const array = [];\n      let item;\n\n      while (item = iterator.iterateNext()) array.push(item);\n\n      return array;\n    }, expression);\n    const properties = await arrayHandle.getProperties();\n    await arrayHandle.dispose();\n    const result = [];\n\n    for (const property of properties.values()) {\n      const elementHandle = property.asElement();\n      if (elementHandle) result.push(elementHandle);\n    }\n\n    return result;\n  }\n  /**\n   * @returns {!Promise<boolean>}\n   */\n\n\n  isIntersectingViewport() {\n    return this.evaluate(async element => {\n      const visibleRatio = await new Promise(resolve => {\n        const observer = new IntersectionObserver(entries => {\n          resolve(entries[0].intersectionRatio);\n          observer.disconnect();\n        });\n        observer.observe(element);\n      });\n      return visibleRatio > 0;\n    });\n  }\n\n}\n\nfunction computeQuadArea(quad) {\n  // Compute sum of all directed areas of adjacent triangles\n  // https://en.wikipedia.org/wiki/Polygon#Simple_polygons\n  let area = 0;\n\n  for (let i = 0; i < quad.length; ++i) {\n    const p1 = quad[i];\n    const p2 = quad[(i + 1) % quad.length];\n    area += (p1.x * p2.y - p2.x * p1.y) / 2;\n  }\n\n  return Math.abs(area);\n}\n/**\n * @typedef {Object} BoxModel\n * @property {!Array<!{x: number, y: number}>} content\n * @property {!Array<!{x: number, y: number}>} padding\n * @property {!Array<!{x: number, y: number}>} border\n * @property {!Array<!{x: number, y: number}>} margin\n * @property {number} width\n * @property {number} height\n */\n\n\nmodule.exports = {\n  createJSHandle,\n  JSHandle,\n  ElementHandle\n};","map":{"version":3,"sources":["/Users/marshoward/Development/code/river/frontend/app/node_modules/puppeteer/lib/JSHandle.js"],"names":["helper","assert","debugError","require","createJSHandle","context","remoteObject","frame","subtype","frameManager","_frameManager","ElementHandle","_client","page","JSHandle","constructor","client","_context","_remoteObject","_disposed","executionContext","evaluate","pageFunction","args","evaluateHandle","getProperty","propertyName","objectHandle","object","result","__proto__","properties","getProperties","get","dispose","response","send","objectId","ownProperties","Map","property","enumerable","set","name","value","jsonValue","functionDeclaration","returnByValue","awaitPromise","valueFromRemoteObject","asElement","releaseObject","toString","type","_page","contentFrame","nodeInfo","node","frameId","_scrollIntoViewIfNeeded","error","element","pageJavascriptEnabled","isConnected","nodeType","Node","ELEMENT_NODE","scrollIntoView","block","inline","behavior","visibleRatio","Promise","resolve","observer","IntersectionObserver","entries","intersectionRatio","disconnect","observe","_javascriptEnabled","Error","_clickablePoint","layoutMetrics","all","catch","quads","length","clientWidth","clientHeight","layoutViewport","map","quad","_fromProtocolQuad","_intersectQuadWithViewport","filter","computeQuadArea","x","y","point","_getBoxModel","width","height","Math","min","max","hover","mouse","move","click","options","select","values","isString","nodeName","toLowerCase","Array","from","undefined","option","selected","includes","multiple","dispatchEvent","Event","bubbles","uploadFile","filePaths","isMultiple","path","mime","fs","readFileAsync","promisify","readFile","promises","filePath","files","i","buffer","basename","file","content","mimeType","lookup","push","dt","DataTransfer","item","fetch","File","blob","items","add","tap","touchscreen","focus","text","keyboard","press","key","boundingBox","model","border","boxModel","padding","margin","screenshot","needsViewportReset","viewport","newViewport","ceil","setViewport","Object","assign","pageX","pageY","clip","imageData","$","selector","handle","querySelector","$$","arrayHandle","querySelectorAll","elementHandle","$eval","$$eval","$x","expression","document","ownerDocument","iterator","XPathResult","ORDERED_NODE_ITERATOR_TYPE","array","iterateNext","isIntersectingViewport","area","p1","p2","abs","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst {helper, assert, debugError} = require('./helper');\n\nfunction createJSHandle(context, remoteObject) {\n  const frame = context.frame();\n  if (remoteObject.subtype === 'node' && frame) {\n    const frameManager = frame._frameManager;\n    return new ElementHandle(context, context._client, remoteObject, frameManager.page(), frameManager);\n  }\n  return new JSHandle(context, context._client, remoteObject);\n}\n\nclass JSHandle {\n  /**\n   * @param {!Puppeteer.ExecutionContext} context\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Runtime.RemoteObject} remoteObject\n   */\n  constructor(context, client, remoteObject) {\n    this._context = context;\n    this._client = client;\n    this._remoteObject = remoteObject;\n    this._disposed = false;\n  }\n\n  /**\n   * @return {!Puppeteer.ExecutionContext}\n   */\n  executionContext() {\n    return this._context;\n  }\n\n  /**\n   * @param {Function|String} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  async evaluate(pageFunction, ...args) {\n    return await this.executionContext().evaluate(pageFunction, this, ...args);\n  }\n\n  /**\n   * @param {Function|string} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<!Puppeteer.JSHandle>}\n   */\n  async evaluateHandle(pageFunction, ...args) {\n    return await this.executionContext().evaluateHandle(pageFunction, this, ...args);\n  }\n\n  /**\n   * @param {string} propertyName\n   * @return {!Promise<?JSHandle>}\n   */\n  async getProperty(propertyName) {\n    const objectHandle = await this.evaluateHandle((object, propertyName) => {\n      const result = {__proto__: null};\n      result[propertyName] = object[propertyName];\n      return result;\n    }, propertyName);\n    const properties = await objectHandle.getProperties();\n    const result = properties.get(propertyName) || null;\n    await objectHandle.dispose();\n    return result;\n  }\n\n  /**\n   * @return {!Promise<!Map<string, !JSHandle>>}\n   */\n  async getProperties() {\n    const response = await this._client.send('Runtime.getProperties', {\n      objectId: this._remoteObject.objectId,\n      ownProperties: true\n    });\n    const result = new Map();\n    for (const property of response.result) {\n      if (!property.enumerable)\n        continue;\n      result.set(property.name, createJSHandle(this._context, property.value));\n    }\n    return result;\n  }\n\n  /**\n   * @return {!Promise<?Object>}\n   */\n  async jsonValue() {\n    if (this._remoteObject.objectId) {\n      const response = await this._client.send('Runtime.callFunctionOn', {\n        functionDeclaration: 'function() { return this; }',\n        objectId: this._remoteObject.objectId,\n        returnByValue: true,\n        awaitPromise: true,\n      });\n      return helper.valueFromRemoteObject(response.result);\n    }\n    return helper.valueFromRemoteObject(this._remoteObject);\n  }\n\n  /**\n   * @return {?Puppeteer.ElementHandle}\n   */\n  asElement() {\n    return null;\n  }\n\n  async dispose() {\n    if (this._disposed)\n      return;\n    this._disposed = true;\n    await helper.releaseObject(this._client, this._remoteObject);\n  }\n\n  /**\n   * @override\n   * @return {string}\n   */\n  toString() {\n    if (this._remoteObject.objectId) {\n      const type =  this._remoteObject.subtype || this._remoteObject.type;\n      return 'JSHandle@' + type;\n    }\n    return 'JSHandle:' + helper.valueFromRemoteObject(this._remoteObject);\n  }\n}\n\nclass ElementHandle extends JSHandle {\n  /**\n   * @param {!Puppeteer.ExecutionContext} context\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Runtime.RemoteObject} remoteObject\n   * @param {!Puppeteer.Page} page\n   * @param {!Puppeteer.FrameManager} frameManager\n   */\n  constructor(context, client, remoteObject, page, frameManager) {\n    super(context, client, remoteObject);\n    this._client = client;\n    this._remoteObject = remoteObject;\n    this._page = page;\n    this._frameManager = frameManager;\n    this._disposed = false;\n  }\n\n  /**\n   * @override\n   * @return {?ElementHandle}\n   */\n  asElement() {\n    return this;\n  }\n\n  /**\n   * @return {!Promise<?Puppeteer.Frame>}\n   */\n  async contentFrame() {\n    const nodeInfo = await this._client.send('DOM.describeNode', {\n      objectId: this._remoteObject.objectId\n    });\n    if (typeof nodeInfo.node.frameId !== 'string')\n      return null;\n    return this._frameManager.frame(nodeInfo.node.frameId);\n  }\n\n  async _scrollIntoViewIfNeeded() {\n    const error = await this.evaluate(async(element, pageJavascriptEnabled) => {\n      if (!element.isConnected)\n        return 'Node is detached from document';\n      if (element.nodeType !== Node.ELEMENT_NODE)\n        return 'Node is not of type HTMLElement';\n      // force-scroll if page's javascript is disabled.\n      if (!pageJavascriptEnabled) {\n        element.scrollIntoView({block: 'center', inline: 'center', behavior: 'instant'});\n        return false;\n      }\n      const visibleRatio = await new Promise(resolve => {\n        const observer = new IntersectionObserver(entries => {\n          resolve(entries[0].intersectionRatio);\n          observer.disconnect();\n        });\n        observer.observe(element);\n      });\n      if (visibleRatio !== 1.0)\n        element.scrollIntoView({block: 'center', inline: 'center', behavior: 'instant'});\n      return false;\n    }, this._page._javascriptEnabled);\n    if (error)\n      throw new Error(error);\n  }\n\n  /**\n   * @return {!Promise<!{x: number, y: number}>}\n   */\n  async _clickablePoint() {\n    const [result, layoutMetrics] = await Promise.all([\n      this._client.send('DOM.getContentQuads', {\n        objectId: this._remoteObject.objectId\n      }).catch(debugError),\n      this._client.send('Page.getLayoutMetrics'),\n    ]);\n    if (!result || !result.quads.length)\n      throw new Error('Node is either not visible or not an HTMLElement');\n    // Filter out quads that have too small area to click into.\n    const {clientWidth, clientHeight} = layoutMetrics.layoutViewport;\n    const quads = result.quads.map(quad => this._fromProtocolQuad(quad)).map(quad => this._intersectQuadWithViewport(quad, clientWidth, clientHeight)).filter(quad => computeQuadArea(quad) > 1);\n    if (!quads.length)\n      throw new Error('Node is either not visible or not an HTMLElement');\n    // Return the middle point of the first quad.\n    const quad = quads[0];\n    let x = 0;\n    let y = 0;\n    for (const point of quad) {\n      x += point.x;\n      y += point.y;\n    }\n    return {\n      x: x / 4,\n      y: y / 4\n    };\n  }\n\n  /**\n   * @return {!Promise<void|Protocol.DOM.getBoxModelReturnValue>}\n   */\n  _getBoxModel() {\n    return this._client.send('DOM.getBoxModel', {\n      objectId: this._remoteObject.objectId\n    }).catch(error => debugError(error));\n  }\n\n  /**\n   * @param {!Array<number>} quad\n   * @return {!Array<{x: number, y: number}>}\n   */\n  _fromProtocolQuad(quad) {\n    return [\n      {x: quad[0], y: quad[1]},\n      {x: quad[2], y: quad[3]},\n      {x: quad[4], y: quad[5]},\n      {x: quad[6], y: quad[7]}\n    ];\n  }\n\n  /**\n   * @param {!Array<{x: number, y: number}>} quad\n   * @param {number} width\n   * @param {number} height\n   * @return {!Array<{x: number, y: number}>}\n   */\n  _intersectQuadWithViewport(quad, width, height) {\n    return quad.map(point => ({\n      x: Math.min(Math.max(point.x, 0), width),\n      y: Math.min(Math.max(point.y, 0), height),\n    }));\n  }\n\n  async hover() {\n    await this._scrollIntoViewIfNeeded();\n    const {x, y} = await this._clickablePoint();\n    await this._page.mouse.move(x, y);\n  }\n\n  /**\n   * @param {!{delay?: number, button?: \"left\"|\"right\"|\"middle\", clickCount?: number}=} options\n   */\n  async click(options) {\n    await this._scrollIntoViewIfNeeded();\n    const {x, y} = await this._clickablePoint();\n    await this._page.mouse.click(x, y, options);\n  }\n\n  /**\n   * @param {!Array<string>} values\n   * @return {!Promise<!Array<string>>}\n   */\n  async select(...values) {\n    for (const value of values)\n      assert(helper.isString(value), 'Values must be strings. Found value \"' + value + '\" of type \"' + (typeof value) + '\"');\n    return this.evaluate((element, values) => {\n      if (element.nodeName.toLowerCase() !== 'select')\n        throw new Error('Element is not a <select> element.');\n\n      const options = Array.from(element.options);\n      element.value = undefined;\n      for (const option of options) {\n        option.selected = values.includes(option.value);\n        if (option.selected && !element.multiple)\n          break;\n      }\n      element.dispatchEvent(new Event('input', { bubbles: true }));\n      element.dispatchEvent(new Event('change', { bubbles: true }));\n      return options.filter(option => option.selected).map(option => option.value);\n    }, values);\n  }\n\n  /**\n   * @param {!Array<string>} filePaths\n   */\n  async uploadFile(...filePaths) {\n    const isMultiple = await this.evaluate(element => element.multiple);\n    assert(filePaths.length <= 1 || isMultiple, 'Multiple file uploads only work with <input type=file multiple>');\n    // These imports are only needed for `uploadFile`, so keep them\n    // scoped here to avoid paying the cost unnecessarily.\n    const path = require('path');\n    const mime = require('mime-types');\n    const fs = require('fs');\n    const readFileAsync = helper.promisify(fs.readFile);\n\n    const promises = filePaths.map(filePath => readFileAsync(filePath));\n    const files = [];\n    for (let i = 0; i < filePaths.length; i++) {\n      const buffer = await promises[i];\n      const filePath = path.basename(filePaths[i]);\n      const file = {\n        name: filePath,\n        content: buffer.toString('base64'),\n        mimeType: mime.lookup(filePath),\n      };\n      files.push(file);\n    }\n    await this.evaluateHandle(async(element, files) => {\n      const dt = new DataTransfer();\n      for (const item of files) {\n        const response = await fetch(`data:${item.mimeType};base64,${item.content}`);\n        const file = new File([await response.blob()], item.name);\n        dt.items.add(file);\n      }\n      element.files = dt.files;\n      element.dispatchEvent(new Event('input', { bubbles: true }));\n    }, files);\n  }\n\n  async tap() {\n    await this._scrollIntoViewIfNeeded();\n    const {x, y} = await this._clickablePoint();\n    await this._page.touchscreen.tap(x, y);\n  }\n\n  async focus() {\n    await this.evaluate(element => element.focus());\n  }\n\n  /**\n   * @param {string} text\n   * @param {{delay: (number|undefined)}=} options\n   */\n  async type(text, options) {\n    await this.focus();\n    await this._page.keyboard.type(text, options);\n  }\n\n  /**\n   * @param {string} key\n   * @param {!{delay?: number, text?: string}=} options\n   */\n  async press(key, options) {\n    await this.focus();\n    await this._page.keyboard.press(key, options);\n  }\n\n  /**\n   * @return {!Promise<?{x: number, y: number, width: number, height: number}>}\n   */\n  async boundingBox() {\n    const result = await this._getBoxModel();\n\n    if (!result)\n      return null;\n\n    const quad = result.model.border;\n    const x = Math.min(quad[0], quad[2], quad[4], quad[6]);\n    const y = Math.min(quad[1], quad[3], quad[5], quad[7]);\n    const width = Math.max(quad[0], quad[2], quad[4], quad[6]) - x;\n    const height = Math.max(quad[1], quad[3], quad[5], quad[7]) - y;\n\n    return {x, y, width, height};\n  }\n\n  /**\n   * @return {!Promise<?BoxModel>}\n   */\n  async boxModel() {\n    const result = await this._getBoxModel();\n\n    if (!result)\n      return null;\n\n    const {content, padding, border, margin, width, height} = result.model;\n    return {\n      content: this._fromProtocolQuad(content),\n      padding: this._fromProtocolQuad(padding),\n      border: this._fromProtocolQuad(border),\n      margin: this._fromProtocolQuad(margin),\n      width,\n      height\n    };\n  }\n\n  /**\n   *\n   * @param {!Object=} options\n   * @returns {!Promise<string|!Buffer>}\n   */\n  async screenshot(options = {}) {\n    let needsViewportReset = false;\n\n    let boundingBox = await this.boundingBox();\n    assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n\n    const viewport = this._page.viewport();\n\n    if (viewport && (boundingBox.width > viewport.width || boundingBox.height > viewport.height)) {\n      const newViewport = {\n        width: Math.max(viewport.width, Math.ceil(boundingBox.width)),\n        height: Math.max(viewport.height, Math.ceil(boundingBox.height)),\n      };\n      await this._page.setViewport(Object.assign({}, viewport, newViewport));\n\n      needsViewportReset = true;\n    }\n\n    await this._scrollIntoViewIfNeeded();\n\n    boundingBox = await this.boundingBox();\n    assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n    assert(boundingBox.width !== 0, 'Node has 0 width.');\n    assert(boundingBox.height !== 0, 'Node has 0 height.');\n\n    const { layoutViewport: { pageX, pageY } } = await this._client.send('Page.getLayoutMetrics');\n\n    const clip = Object.assign({}, boundingBox);\n    clip.x += pageX;\n    clip.y += pageY;\n\n    const imageData = await this._page.screenshot(Object.assign({}, {\n      clip\n    }, options));\n\n    if (needsViewportReset)\n      await this._page.setViewport(viewport);\n\n    return imageData;\n  }\n\n  /**\n   * @param {string} selector\n   * @return {!Promise<?ElementHandle>}\n   */\n  async $(selector) {\n    const handle = await this.evaluateHandle(\n        (element, selector) => element.querySelector(selector),\n        selector\n    );\n    const element = handle.asElement();\n    if (element)\n      return element;\n    await handle.dispose();\n    return null;\n  }\n\n  /**\n   * @param {string} selector\n   * @return {!Promise<!Array<!ElementHandle>>}\n   */\n  async $$(selector) {\n    const arrayHandle = await this.evaluateHandle(\n        (element, selector) => element.querySelectorAll(selector),\n        selector\n    );\n    const properties = await arrayHandle.getProperties();\n    await arrayHandle.dispose();\n    const result = [];\n    for (const property of properties.values()) {\n      const elementHandle = property.asElement();\n      if (elementHandle)\n        result.push(elementHandle);\n    }\n    return result;\n  }\n\n  /**\n   * @param {string} selector\n   * @param {Function|String} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  async $eval(selector, pageFunction, ...args) {\n    const elementHandle = await this.$(selector);\n    if (!elementHandle)\n      throw new Error(`Error: failed to find element matching selector \"${selector}\"`);\n    const result = await elementHandle.evaluate(pageFunction, ...args);\n    await elementHandle.dispose();\n    return result;\n  }\n\n  /**\n   * @param {string} selector\n   * @param {Function|String} pageFunction\n   * @param {!Array<*>} args\n   * @return {!Promise<(!Object|undefined)>}\n   */\n  async $$eval(selector, pageFunction, ...args) {\n    const arrayHandle = await this.evaluateHandle(\n        (element, selector) => Array.from(element.querySelectorAll(selector)),\n        selector\n    );\n\n    const result = await arrayHandle.evaluate(pageFunction, ...args);\n    await arrayHandle.dispose();\n    return result;\n  }\n\n  /**\n   * @param {string} expression\n   * @return {!Promise<!Array<!ElementHandle>>}\n   */\n  async $x(expression) {\n    const arrayHandle = await this.evaluateHandle(\n        (element, expression) => {\n          const document = element.ownerDocument || element;\n          const iterator = document.evaluate(expression, element, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE);\n          const array = [];\n          let item;\n          while ((item = iterator.iterateNext()))\n            array.push(item);\n          return array;\n        },\n        expression\n    );\n    const properties = await arrayHandle.getProperties();\n    await arrayHandle.dispose();\n    const result = [];\n    for (const property of properties.values()) {\n      const elementHandle = property.asElement();\n      if (elementHandle)\n        result.push(elementHandle);\n    }\n    return result;\n  }\n\n  /**\n   * @returns {!Promise<boolean>}\n   */\n  isIntersectingViewport() {\n    return this.evaluate(async element => {\n      const visibleRatio = await new Promise(resolve => {\n        const observer = new IntersectionObserver(entries => {\n          resolve(entries[0].intersectionRatio);\n          observer.disconnect();\n        });\n        observer.observe(element);\n      });\n      return visibleRatio > 0;\n    });\n  }\n}\n\nfunction computeQuadArea(quad) {\n  // Compute sum of all directed areas of adjacent triangles\n  // https://en.wikipedia.org/wiki/Polygon#Simple_polygons\n  let area = 0;\n  for (let i = 0; i < quad.length; ++i) {\n    const p1 = quad[i];\n    const p2 = quad[(i + 1) % quad.length];\n    area += (p1.x * p2.y - p2.x * p1.y) / 2;\n  }\n  return Math.abs(area);\n}\n\n/**\n * @typedef {Object} BoxModel\n * @property {!Array<!{x: number, y: number}>} content\n * @property {!Array<!{x: number, y: number}>} padding\n * @property {!Array<!{x: number, y: number}>} border\n * @property {!Array<!{x: number, y: number}>} margin\n * @property {number} width\n * @property {number} height\n */\n\nmodule.exports = {createJSHandle, JSHandle, ElementHandle};\n"]},"metadata":{},"sourceType":"script"}