{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/MovieInfo.js\";\nimport React, { Component } from 'react';\nimport Video from './Video';\n\nclass MovieInfo extends Component {\n  componentDidMount() {\n    this.props.path(this.props.currentMovie);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.currentMovie.Title !== prevProps.currentMovie.Title && this.props.selectedMovie === \"\") {\n      console.log('different title');\n      this.props.path(this.props.selectedMovie);\n    }\n  }\n\n  render() {\n    let currentMovie = this.props.currentMovie;\n    let videoId;\n    let fullSrc;\n\n    if (this.props.youtube !== null && this.props.selectedMovie !== null) {\n      fullSrc = 'https://www.youtube.com/embed/' + this.props.selectedMovie.youtube_id;\n      console.log('trailer was not fetched from youtube because it youtube id is present');\n    } else {\n      fullSrc = 'https://www.youtube.com/embed/' + this.props.trailer;\n      console.log('trailer fetched from youtube');\n    }\n\n    let errorMsg;\n\n    if (this.props.trailer === \"kJQP7kiw5Fk\") {\n      errorMsg = \"due to an issue with this sites connection to youtube the trailer can not be viewed at this time\";\n      this.props.handler(\"default\");\n      videoId = this.props.trailer;\n    } else {\n      this.props.handler(this.props.trailer);\n    }\n\n    const ratings = currentMovie.Ratings.map((rating, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }\n    }, \"\\xBB \", rating.Source, \": \", rating.Value, \" \\xAB\"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"show_Movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"selected_Movie\",\n      alt: currentMovie.Title,\n      src: currentMovie.Poster,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \" Rated: \", currentMovie.Rated), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \" Year: \", currentMovie.Year), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \" Genre: \", currentMovie.Genre, \" \"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \" Actors: \", currentMovie.Actors, \" \"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, \" Director: \", currentMovie.Director, \" \"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \" Awards: \", currentMovie.Awards, \" \"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \" Plot\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, currentMovie.Plot, \" \"), /*#__PURE__*/React.createElement(Video, {\n      fullSrc: fullSrc,\n      videoID: videoId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, errorMsg));\n  }\n\n}\n\nexport default MovieInfo;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/MovieInfo.js"],"names":["React","Component","Video","MovieInfo","componentDidMount","props","path","currentMovie","componentDidUpdate","prevProps","Title","selectedMovie","console","log","render","videoId","fullSrc","youtube","youtube_id","trailer","errorMsg","handler","ratings","Ratings","map","rating","index","Source","Value","Poster","Rated","Year","Genre","Actors","Director","Awards","Plot"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Video from './Video';\n\nclass MovieInfo extends Component {\n\n  componentDidMount() {\n    this.props.path(this.props.currentMovie)\n  }\n\n   componentDidUpdate(prevProps){\n\n    if (this.props.currentMovie.Title !== prevProps.currentMovie.Title && this.props.selectedMovie === \"\")\n    {\n      console.log('different title')\n      this.props.path(this.props.selectedMovie)\n    } \n  }\n\n  render() {\n  \tlet currentMovie = this.props.currentMovie\n    let videoId \n    let fullSrc\n\n    if (this.props.youtube !== null && this.props.selectedMovie !== null){\n      fullSrc = 'https://www.youtube.com/embed/' + this.props.selectedMovie.youtube_id\n      console.log('trailer was not fetched from youtube because it youtube id is present')\n    }\n    else{\n      fullSrc = 'https://www.youtube.com/embed/' + this.props.trailer\n      console.log('trailer fetched from youtube')\n    }\n    let errorMsg\n\n    if (this.props.trailer === \"kJQP7kiw5Fk\"){\n      errorMsg = \"due to an issue with this sites connection to youtube the trailer can not be viewed at this time\";\n      this.props.handler(\"default\")\n      videoId = this.props.trailer\n    }\n    else{\n      this.props.handler(this.props.trailer)\n    }\n\n  \tconst ratings = currentMovie.Ratings.map((rating, index) =>(\n  \t\t<li  key={index}>» {rating.Source}: {rating.Value} «</li>  \n \t  ));    \n\n    return (\n    \t<div className = \"show_Movie\" >\n        <img className= \"selected_Movie\" alt={currentMovie.Title} src={currentMovie.Poster}></img>\n          <h4> Rated: {currentMovie.Rated}</h4>   \n          <h4> Year: {currentMovie.Year}</h4> \n          <h4> Genre: {currentMovie.Genre} </h4>\n          <h5> Actors: {currentMovie.Actors} </h5>\n          <h5> Director: {currentMovie.Director} </h5>\n          <h5> Awards: {currentMovie.Awards} </h5>\n\t\t   \n          <h4> Plot</h4>\n          <h5>{currentMovie.Plot} </h5>\n        <Video fullSrc= {fullSrc} videoID = {videoId}/>\n        <p>{errorMsg}</p>        \n      </div>\n    )\n  }\n}\nexport default MovieInfo;\n\n"]},"metadata":{},"sourceType":"module"}