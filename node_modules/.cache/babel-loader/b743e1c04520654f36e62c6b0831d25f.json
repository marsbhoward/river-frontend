{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/MovieInfo.js\";\nimport React, { Component } from 'react';\nimport Video from './Video';\n\nclass MovieInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.shouldTrailerLoad = passedMovie => {\n      if (this.props.youtube !== null) {\n        this.setState({\n          fullSrc: 'https://www.youtube.com/embed/' + this.props.youtube,\n          videoId: this.passedMovie.youtube\n        });\n        console.log('youtube id is present on backend');\n      } else {\n        this.setState({\n          fullSrc: 'https://www.youtube.com/embed/' + this.props.trailer\n        }); //trigged incoreectly\n\n        console.log('trailer fetched from youtube');\n      }\n    };\n\n    this.state = {\n      currentMovie: this.props.currentMovie,\n      videoId: ' ',\n      fullSrc: ' '\n    };\n  }\n\n  componentDidMount() {\n    this.props.path(this.props.selectedMovie);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.currentMovie.Title !== prevProps.currentMovie.Title && this.props.selectedMovie === \"\") {\n      console.log('different title'); //this.props.path(this.props.selectedMovie)\n    }\n  }\n\n  render() {\n    //console.log(this.props.selectedMovie )\n    //error when selecting from search\n    let errorMsg;\n\n    if (this.props.trailer === \"kJQP7kiw5Fk\") {\n      errorMsg = \"due to an issue with this sites connection to youtube the trailer can not be viewed at this time\";\n      this.props.handler(\"default\");\n      this.setState({\n        videoId: this.props.trailer\n      });\n    } else {\n      this.props.handler(this.props.trailer);\n    }\n\n    const ratings = this.state.currentMovie.Ratings.map((rating, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }, \"\\xBB \", rating.Source, \": \", rating.Value, \" \\xAB\"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"show_Movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"selected_Movie\",\n      alt: this.state.currentMovie.Title,\n      src: this.state.currentMovie.Poster,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \" Rated: \", this.state.currentMovie.Rated), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \" Year: \", this.state.currentMovie.Year), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \" Genre: \", this.state.currentMovie.Genre, \" \"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \" Actors: \", this.state.currentMovie.Actors, \" \"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, \" Director: \", this.state.currentMovie.Director, \" \"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \" Awards: \", this.state.currentMovie.Awards, \" \"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, \" Ratings \"), /*#__PURE__*/React.createElement(\"ul\", {\n      style: {\n        display: 'inline',\n        margin: 40,\n        listStyle: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, \" \", ratings, \" \"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, \" Plot\"), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, this.state.currentMovie.Plot, \" \"), /*#__PURE__*/React.createElement(Video, {\n      fullSrc: this.state.fullSrc,\n      videoID: this.state.videoId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, errorMsg));\n  }\n\n}\n\nexport default MovieInfo;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/MovieInfo.js"],"names":["React","Component","Video","MovieInfo","constructor","props","shouldTrailerLoad","passedMovie","youtube","setState","fullSrc","videoId","console","log","trailer","state","currentMovie","componentDidMount","path","selectedMovie","componentDidUpdate","prevProps","Title","render","errorMsg","handler","ratings","Ratings","map","rating","index","Source","Value","Poster","Rated","Year","Genre","Actors","Director","Awards","display","margin","listStyle","Plot"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Video from './Video';\n\nclass MovieInfo extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      currentMovie: this.props.currentMovie,\n      videoId: ' ',\n      fullSrc: ' ' \n    }\n\n  }   \n\n  componentDidMount() {\n    this.props.path(this.props.selectedMovie)\n  }\n\n   componentDidUpdate(prevProps){\n\n    if (this.props.currentMovie.Title !== prevProps.currentMovie.Title && this.props.selectedMovie === \"\")\n    {\n      console.log('different title')\n      //this.props.path(this.props.selectedMovie)\n    } \n  }\n\n  shouldTrailerLoad = (passedMovie) => {\n    if (this.props.youtube !== null) {\n      this.setState ({\n        fullSrc: 'https://www.youtube.com/embed/' + this.props.youtube,\n        videoId: this.passedMovie.youtube\n      })\n      \n      console.log('youtube id is present on backend')\n    }\n    else{\n      this.setState ({fullSrc: 'https://www.youtube.com/embed/' + this.props.trailer})\n      \n      //trigged incoreectly\n      console.log('trailer fetched from youtube')\n    }\n  }\n\n  render() {\n\n\n    //console.log(this.props.selectedMovie )\n    //error when selecting from search\n\n    let errorMsg\n\n    if (this.props.trailer === \"kJQP7kiw5Fk\"){\n      errorMsg = \"due to an issue with this sites connection to youtube the trailer can not be viewed at this time\";\n      this.props.handler(\"default\")\n      this.setState ({videoId: this.props.trailer})\n    }\n    else{\n      this.props.handler(this.props.trailer)\n    }\n\n  \tconst ratings = this.state.currentMovie.Ratings.map((rating, index) =>(\n  \t\t<li  key={index}>» {rating.Source}: {rating.Value} «</li>  \n \t  ));    \n\n    return (\n    \t<div className = \"show_Movie\" >\n        <img className= \"selected_Movie\" alt={this.state.currentMovie.Title} src={this.state.currentMovie.Poster}></img>\n          <h4> Rated: {this.state.currentMovie.Rated}</h4>   \n          <h4> Year: {this.state.currentMovie.Year}</h4> \n          <h4> Genre: {this.state.currentMovie.Genre} </h4>\n          <h5> Actors: {this.state.currentMovie.Actors} </h5>\n          <h5> Director: {this.state.currentMovie.Director} </h5>\n          <h5> Awards: {this.state.currentMovie.Awards} </h5>\n\t\t    <h4> Ratings </h4>\n        <ul style={{display: 'inline',margin: 40, listStyle: 'none'}}> {ratings} </ul>\n          <h4> Plot</h4>\n          <h5>{this.state.currentMovie.Plot} </h5>\n        <Video fullSrc= {this.state.fullSrc} videoID = {this.state.videoId}/>\n        <p>{errorMsg}</p>        \n      </div>\n    )\n  }\n}\nexport default MovieInfo;\n\n"]},"metadata":{},"sourceType":"module"}