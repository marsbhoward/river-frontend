{"ast":null,"code":"/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst {\n  helper,\n  assert\n} = require('./helper');\n\nconst {\n  createJSHandle,\n  JSHandle\n} = require('./JSHandle');\n\nconst EVALUATION_SCRIPT_URL = '__puppeteer_evaluation_script__';\nconst SOURCE_URL_REGEX = /^[\\040\\t]*\\/\\/[@#] sourceURL=\\s*(\\S*?)\\s*$/m;\n\nclass ExecutionContext {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Runtime.ExecutionContextDescription} contextPayload\n   * @param {?Puppeteer.DOMWorld} world\n   */\n  constructor(client, contextPayload, world) {\n    this._client = client;\n    this._world = world;\n    this._contextId = contextPayload.id;\n  }\n  /**\n   * @return {?Puppeteer.Frame}\n   */\n\n\n  frame() {\n    return this._world ? this._world.frame() : null;\n  }\n  /**\n   * @param {Function|string} pageFunction\n   * @param {...*} args\n   * @return {!Promise<*>}\n   */\n\n\n  async evaluate(pageFunction, ...args) {\n    return await this._evaluateInternal(true\n    /* returnByValue */\n    , pageFunction, ...args);\n  }\n  /**\n   * @param {Function|string} pageFunction\n   * @param {...*} args\n   * @return {!Promise<!JSHandle>}\n   */\n\n\n  async evaluateHandle(pageFunction, ...args) {\n    return this._evaluateInternal(false\n    /* returnByValue */\n    , pageFunction, ...args);\n  }\n  /**\n   * @param {boolean} returnByValue\n   * @param {Function|string} pageFunction\n   * @param {...*} args\n   * @return {!Promise<*>}\n   */\n\n\n  async _evaluateInternal(returnByValue, pageFunction, ...args) {\n    const suffix = `//# sourceURL=${EVALUATION_SCRIPT_URL}`;\n\n    if (helper.isString(pageFunction)) {\n      const contextId = this._contextId;\n      const expression =\n      /** @type {string} */\n      pageFunction;\n      const expressionWithSourceUrl = SOURCE_URL_REGEX.test(expression) ? expression : expression + '\\n' + suffix;\n      const {\n        exceptionDetails,\n        result: remoteObject\n      } = await this._client.send('Runtime.evaluate', {\n        expression: expressionWithSourceUrl,\n        contextId,\n        returnByValue,\n        awaitPromise: true,\n        userGesture: true\n      }).catch(rewriteError);\n      if (exceptionDetails) throw new Error('Evaluation failed: ' + helper.getExceptionMessage(exceptionDetails));\n      return returnByValue ? helper.valueFromRemoteObject(remoteObject) : createJSHandle(this, remoteObject);\n    }\n\n    if (typeof pageFunction !== 'function') throw new Error(`Expected to get |string| or |function| as the first argument, but got \"${pageFunction}\" instead.`);\n    let functionText = pageFunction.toString();\n\n    try {\n      new Function('(' + functionText + ')');\n    } catch (e1) {\n      // This means we might have a function shorthand. Try another\n      // time prefixing 'function '.\n      if (functionText.startsWith('async ')) functionText = 'async function ' + functionText.substring('async '.length);else functionText = 'function ' + functionText;\n\n      try {\n        new Function('(' + functionText + ')');\n      } catch (e2) {\n        // We tried hard to serialize, but there's a weird beast here.\n        throw new Error('Passed function is not well-serializable!');\n      }\n    }\n\n    let callFunctionOnPromise;\n\n    try {\n      callFunctionOnPromise = this._client.send('Runtime.callFunctionOn', {\n        functionDeclaration: functionText + '\\n' + suffix + '\\n',\n        executionContextId: this._contextId,\n        arguments: args.map(convertArgument.bind(this)),\n        returnByValue,\n        awaitPromise: true,\n        userGesture: true\n      });\n    } catch (err) {\n      if (err instanceof TypeError && err.message.startsWith('Converting circular structure to JSON')) err.message += ' Are you passing a nested JSHandle?';\n      throw err;\n    }\n\n    const {\n      exceptionDetails,\n      result: remoteObject\n    } = await callFunctionOnPromise.catch(rewriteError);\n    if (exceptionDetails) throw new Error('Evaluation failed: ' + helper.getExceptionMessage(exceptionDetails));\n    return returnByValue ? helper.valueFromRemoteObject(remoteObject) : createJSHandle(this, remoteObject);\n    /**\n     * @param {*} arg\n     * @return {*}\n     * @this {ExecutionContext}\n     */\n\n    function convertArgument(arg) {\n      if (typeof arg === 'bigint') // eslint-disable-line valid-typeof\n        return {\n          unserializableValue: `${arg.toString()}n`\n        };\n      if (Object.is(arg, -0)) return {\n        unserializableValue: '-0'\n      };\n      if (Object.is(arg, Infinity)) return {\n        unserializableValue: 'Infinity'\n      };\n      if (Object.is(arg, -Infinity)) return {\n        unserializableValue: '-Infinity'\n      };\n      if (Object.is(arg, NaN)) return {\n        unserializableValue: 'NaN'\n      };\n      const objectHandle = arg && arg instanceof JSHandle ? arg : null;\n\n      if (objectHandle) {\n        if (objectHandle._context !== this) throw new Error('JSHandles can be evaluated only in the context they were created!');\n        if (objectHandle._disposed) throw new Error('JSHandle is disposed!');\n        if (objectHandle._remoteObject.unserializableValue) return {\n          unserializableValue: objectHandle._remoteObject.unserializableValue\n        };\n        if (!objectHandle._remoteObject.objectId) return {\n          value: objectHandle._remoteObject.value\n        };\n        return {\n          objectId: objectHandle._remoteObject.objectId\n        };\n      }\n\n      return {\n        value: arg\n      };\n    }\n    /**\n     * @param {!Error} error\n     * @return {!Protocol.Runtime.evaluateReturnValue}\n     */\n\n\n    function rewriteError(error) {\n      if (error.message.includes('Object reference chain is too long')) return {\n        result: {\n          type: 'undefined'\n        }\n      };\n      if (error.message.includes('Object couldn\\'t be returned by value')) return {\n        result: {\n          type: 'undefined'\n        }\n      };\n      if (error.message.endsWith('Cannot find context with specified id') || error.message.endsWith('Inspected target navigated or closed')) throw new Error('Execution context was destroyed, most likely because of a navigation.');\n      throw error;\n    }\n  }\n  /**\n   * @param {!JSHandle} prototypeHandle\n   * @return {!Promise<!JSHandle>}\n   */\n\n\n  async queryObjects(prototypeHandle) {\n    assert(!prototypeHandle._disposed, 'Prototype JSHandle is disposed!');\n    assert(prototypeHandle._remoteObject.objectId, 'Prototype JSHandle must not be referencing primitive value');\n    const response = await this._client.send('Runtime.queryObjects', {\n      prototypeObjectId: prototypeHandle._remoteObject.objectId\n    });\n    return createJSHandle(this, response.objects);\n  }\n  /**\n   * @param {Protocol.DOM.BackendNodeId} backendNodeId\n   * @return {Promise<Puppeteer.ElementHandle>}\n   */\n\n\n  async _adoptBackendNodeId(backendNodeId) {\n    const {\n      object\n    } = await this._client.send('DOM.resolveNode', {\n      backendNodeId: backendNodeId,\n      executionContextId: this._contextId\n    });\n    return (\n      /** @type {Puppeteer.ElementHandle}*/\n      createJSHandle(this, object)\n    );\n  }\n  /**\n   * @param {Puppeteer.ElementHandle} elementHandle\n   * @return {Promise<Puppeteer.ElementHandle>}\n   */\n\n\n  async _adoptElementHandle(elementHandle) {\n    assert(elementHandle.executionContext() !== this, 'Cannot adopt handle that already belongs to this execution context');\n    assert(this._world, 'Cannot adopt handle without DOMWorld');\n    const nodeInfo = await this._client.send('DOM.describeNode', {\n      objectId: elementHandle._remoteObject.objectId\n    });\n    return this._adoptBackendNodeId(nodeInfo.node.backendNodeId);\n  }\n\n}\n\nmodule.exports = {\n  ExecutionContext,\n  EVALUATION_SCRIPT_URL\n};","map":{"version":3,"sources":["/Users/marshoward/Development/code/river/frontend/app/node_modules/puppeteer/lib/ExecutionContext.js"],"names":["helper","assert","require","createJSHandle","JSHandle","EVALUATION_SCRIPT_URL","SOURCE_URL_REGEX","ExecutionContext","constructor","client","contextPayload","world","_client","_world","_contextId","id","frame","evaluate","pageFunction","args","_evaluateInternal","evaluateHandle","returnByValue","suffix","isString","contextId","expression","expressionWithSourceUrl","test","exceptionDetails","result","remoteObject","send","awaitPromise","userGesture","catch","rewriteError","Error","getExceptionMessage","valueFromRemoteObject","functionText","toString","Function","e1","startsWith","substring","length","e2","callFunctionOnPromise","functionDeclaration","executionContextId","arguments","map","convertArgument","bind","err","TypeError","message","arg","unserializableValue","Object","is","Infinity","NaN","objectHandle","_context","_disposed","_remoteObject","objectId","value","error","includes","type","endsWith","queryObjects","prototypeHandle","response","prototypeObjectId","objects","_adoptBackendNodeId","backendNodeId","object","_adoptElementHandle","elementHandle","executionContext","nodeInfo","node","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst {helper, assert} = require('./helper');\nconst {createJSHandle, JSHandle} = require('./JSHandle');\n\nconst EVALUATION_SCRIPT_URL = '__puppeteer_evaluation_script__';\nconst SOURCE_URL_REGEX = /^[\\040\\t]*\\/\\/[@#] sourceURL=\\s*(\\S*?)\\s*$/m;\n\nclass ExecutionContext {\n  /**\n   * @param {!Puppeteer.CDPSession} client\n   * @param {!Protocol.Runtime.ExecutionContextDescription} contextPayload\n   * @param {?Puppeteer.DOMWorld} world\n   */\n  constructor(client, contextPayload, world) {\n    this._client = client;\n    this._world = world;\n    this._contextId = contextPayload.id;\n  }\n\n  /**\n   * @return {?Puppeteer.Frame}\n   */\n  frame() {\n    return this._world ? this._world.frame() : null;\n  }\n\n  /**\n   * @param {Function|string} pageFunction\n   * @param {...*} args\n   * @return {!Promise<*>}\n   */\n  async evaluate(pageFunction, ...args) {\n    return await this._evaluateInternal(true /* returnByValue */, pageFunction, ...args);\n  }\n\n  /**\n   * @param {Function|string} pageFunction\n   * @param {...*} args\n   * @return {!Promise<!JSHandle>}\n   */\n  async evaluateHandle(pageFunction, ...args) {\n    return this._evaluateInternal(false /* returnByValue */, pageFunction, ...args);\n  }\n\n  /**\n   * @param {boolean} returnByValue\n   * @param {Function|string} pageFunction\n   * @param {...*} args\n   * @return {!Promise<*>}\n   */\n  async _evaluateInternal(returnByValue, pageFunction, ...args) {\n    const suffix = `//# sourceURL=${EVALUATION_SCRIPT_URL}`;\n\n    if (helper.isString(pageFunction)) {\n      const contextId = this._contextId;\n      const expression = /** @type {string} */ (pageFunction);\n      const expressionWithSourceUrl = SOURCE_URL_REGEX.test(expression) ? expression : expression + '\\n' + suffix;\n      const {exceptionDetails, result: remoteObject} = await this._client.send('Runtime.evaluate', {\n        expression: expressionWithSourceUrl,\n        contextId,\n        returnByValue,\n        awaitPromise: true,\n        userGesture: true\n      }).catch(rewriteError);\n      if (exceptionDetails)\n        throw new Error('Evaluation failed: ' + helper.getExceptionMessage(exceptionDetails));\n      return returnByValue ? helper.valueFromRemoteObject(remoteObject) : createJSHandle(this, remoteObject);\n    }\n\n    if (typeof pageFunction !== 'function')\n      throw new Error(`Expected to get |string| or |function| as the first argument, but got \"${pageFunction}\" instead.`);\n\n    let functionText = pageFunction.toString();\n    try {\n      new Function('(' + functionText + ')');\n    } catch (e1) {\n      // This means we might have a function shorthand. Try another\n      // time prefixing 'function '.\n      if (functionText.startsWith('async '))\n        functionText = 'async function ' + functionText.substring('async '.length);\n      else\n        functionText = 'function ' + functionText;\n      try {\n        new Function('(' + functionText  + ')');\n      } catch (e2) {\n        // We tried hard to serialize, but there's a weird beast here.\n        throw new Error('Passed function is not well-serializable!');\n      }\n    }\n    let callFunctionOnPromise;\n    try {\n      callFunctionOnPromise = this._client.send('Runtime.callFunctionOn', {\n        functionDeclaration: functionText + '\\n' + suffix + '\\n',\n        executionContextId: this._contextId,\n        arguments: args.map(convertArgument.bind(this)),\n        returnByValue,\n        awaitPromise: true,\n        userGesture: true\n      });\n    } catch (err) {\n      if (err instanceof TypeError && err.message.startsWith('Converting circular structure to JSON'))\n        err.message += ' Are you passing a nested JSHandle?';\n      throw err;\n    }\n    const { exceptionDetails, result: remoteObject } = await callFunctionOnPromise.catch(rewriteError);\n    if (exceptionDetails)\n      throw new Error('Evaluation failed: ' + helper.getExceptionMessage(exceptionDetails));\n    return returnByValue ? helper.valueFromRemoteObject(remoteObject) : createJSHandle(this, remoteObject);\n\n    /**\n     * @param {*} arg\n     * @return {*}\n     * @this {ExecutionContext}\n     */\n    function convertArgument(arg) {\n      if (typeof arg === 'bigint') // eslint-disable-line valid-typeof\n        return { unserializableValue: `${arg.toString()}n` };\n      if (Object.is(arg, -0))\n        return { unserializableValue: '-0' };\n      if (Object.is(arg, Infinity))\n        return { unserializableValue: 'Infinity' };\n      if (Object.is(arg, -Infinity))\n        return { unserializableValue: '-Infinity' };\n      if (Object.is(arg, NaN))\n        return { unserializableValue: 'NaN' };\n      const objectHandle = arg && (arg instanceof JSHandle) ? arg : null;\n      if (objectHandle) {\n        if (objectHandle._context !== this)\n          throw new Error('JSHandles can be evaluated only in the context they were created!');\n        if (objectHandle._disposed)\n          throw new Error('JSHandle is disposed!');\n        if (objectHandle._remoteObject.unserializableValue)\n          return { unserializableValue: objectHandle._remoteObject.unserializableValue };\n        if (!objectHandle._remoteObject.objectId)\n          return { value: objectHandle._remoteObject.value };\n        return { objectId: objectHandle._remoteObject.objectId };\n      }\n      return { value: arg };\n    }\n\n    /**\n     * @param {!Error} error\n     * @return {!Protocol.Runtime.evaluateReturnValue}\n     */\n    function rewriteError(error) {\n      if (error.message.includes('Object reference chain is too long'))\n        return {result: {type: 'undefined'}};\n      if (error.message.includes('Object couldn\\'t be returned by value'))\n        return {result: {type: 'undefined'}};\n\n      if (error.message.endsWith('Cannot find context with specified id') || error.message.endsWith('Inspected target navigated or closed'))\n        throw new Error('Execution context was destroyed, most likely because of a navigation.');\n      throw error;\n    }\n  }\n\n  /**\n   * @param {!JSHandle} prototypeHandle\n   * @return {!Promise<!JSHandle>}\n   */\n  async queryObjects(prototypeHandle) {\n    assert(!prototypeHandle._disposed, 'Prototype JSHandle is disposed!');\n    assert(prototypeHandle._remoteObject.objectId, 'Prototype JSHandle must not be referencing primitive value');\n    const response = await this._client.send('Runtime.queryObjects', {\n      prototypeObjectId: prototypeHandle._remoteObject.objectId\n    });\n    return createJSHandle(this, response.objects);\n  }\n\n  /**\n   * @param {Protocol.DOM.BackendNodeId} backendNodeId\n   * @return {Promise<Puppeteer.ElementHandle>}\n   */\n  async _adoptBackendNodeId(backendNodeId) {\n    const {object} = await this._client.send('DOM.resolveNode', {\n      backendNodeId: backendNodeId,\n      executionContextId: this._contextId,\n    });\n    return /** @type {Puppeteer.ElementHandle}*/(createJSHandle(this, object));\n  }\n\n  /**\n   * @param {Puppeteer.ElementHandle} elementHandle\n   * @return {Promise<Puppeteer.ElementHandle>}\n   */\n  async _adoptElementHandle(elementHandle) {\n    assert(elementHandle.executionContext() !== this, 'Cannot adopt handle that already belongs to this execution context');\n    assert(this._world, 'Cannot adopt handle without DOMWorld');\n    const nodeInfo = await this._client.send('DOM.describeNode', {\n      objectId: elementHandle._remoteObject.objectId,\n    });\n    return this._adoptBackendNodeId(nodeInfo.node.backendNodeId);\n  }\n}\n\nmodule.exports = {ExecutionContext, EVALUATION_SCRIPT_URL};\n"]},"metadata":{},"sourceType":"script"}