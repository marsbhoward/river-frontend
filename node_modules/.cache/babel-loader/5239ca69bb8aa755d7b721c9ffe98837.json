{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/components/MoviesList.js\";\nimport React, { useState, useEffect } from 'react';\nimport InfoPage from '../containers/InfoPage';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\n\nfunction MoviesList(props) {\n  const history = useHistory(); //binds passed handler to StreamsList handler\n\n  const [streamName] = useState('');\n  const [style] = useState('');\n  useEffect(() => {\n    streamName('Netflix');\n    /*\n    switch (props.movie.stream_id) {\n      case 1:\n        // statements_1\n        streamName('Netflix')\n        style('movie-card netflix')\n        break;\n      case 2:\n        // statements_1\n        streamName(\"Hulu\")\n        style(\"movie-card hulu\")        \n        break;\n      case 3:\n        // statements_1\n        streamName(\"Amazon\")\n        style(\"movie-card prime\")          \n        break;\n      case 4:\n        // statements_1\n        streamName(\"HBO Max\")\n        style(\"movie-card hbo\")          \n        break;\n      case 5:\n        // statements_1\n        streamName(\"Disney+\")\n        style(\"movie-card disney\")          \n        break;\n      case 6:\n        // statements_1\n        streamName(\"Showtime\")\n        style(\"movie-card showtime\")          \n        break;\n      case 7:\n        // statements_1\n        streamName(\"Starz\")\n        style(\"movie-card starz\")          \n        break;\n      case 8:\n        // statements_1\n        streamName(\"Cinimax\")\n        style(\"movie-card max\")          \n        break;\n      case 9:\n        // statements_1\n        streamName(\"DC Universe\")\n        style(\"movie-card dc\")          \n        break;\n      case 10:\n        // statements_1\n        streamName(\"Apple TV\")\n        style(\"movie-card apple\")          \n        break;\n      case 11:\n        // statements_1\n        streamName(\"Epix\")\n        style(\"movie-card epix\")          \n        break;\n      case 12:\n        // statements_1\n        streamName(\"CBS\")\n        style(\"movie-card cbs\")          \n        break;\n      case 13:\n        // statements_1\n        streamName(\"TBS\")\n        style(\"movie-card tbs\")          \n        break;\n      case 14:\n        // statements_1\n        streamName(\"TNT\")\n        style(\"movie-card tnt\")          \n        break;\n      case 15:\n        // statements_1\n        streamName(\"Shudder\")\n        style(\"movie-card shudder\")          \n        break;\n      case 16:\n        // statements_1\n        streamName(\"AMC\")\n        style(\"movie-card amc\")          \n        break;\n      case 17:\n        // statements_1\n        streamName(\"FX\")\n        style(\"movie-card fx\")          \n        break;\n      case 18:\n        // statements_1\n        streamName(\"SYFY\")\n        style(\"movie-card stfy\")          \n        break;\n      case 19:\n        // statements_1\n        streamName(\"IFC\")\n        style(\"movie-card ifc\")          \n        break;                                                                                                \n      default:\n        // statements_def\n        streamName(\"\")\n        style(\"movie-card\")          \n        break;\n    }\n    */\n  });\n\n  function handleMovie() {\n    props.history.push({\n      pathname: `/streams/${streamName.toLowerCase()}/movies`,\n      state: {\n        clicked: true\n      }\n    });\n  }\n\n  const regex = /-/g;\n  let unslug = props.movie.slug.replace(regex, ' ');\n  let currentStream = streamName;\n  unslug = unslug.toLowerCase();\n\n  if (unslug.includes(props.search)) {\n    //onclick route to stream address ex: http://localhost:3000/streams/hbo/movies\n    //also render movie as if it was clicked on the movies page\n    //movie sends info to movieList and MovieList renders Infopage\n    //<InfoPage movieIds={this.props.movieIds} streamID={this.props.streamID} movieID={this.state.movieID} currentMovie={showMovie} trailerID={this.trailerID}/>\n\n    /* alternative\n    this.props.history.push({\n      pathname: '/',\n      state: {\n        successMessage: this.generateSuccessMessage(payload)\n      }\n    });      \n      */\n    return React.createElement(\"div\", {\n      className: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      onClick: handleMovie,\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \" \", \"unslug\", \" \"), React.createElement(Link, {\n      to: `/streams/${currentStream.toLowerCase()}/movies`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"stream-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \" \", streamName)));\n  } else {\n    return \"\";\n  }\n}\n\nexport default MoviesList;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/components/MoviesList.js"],"names":["React","useState","useEffect","InfoPage","Link","useHistory","MoviesList","props","history","streamName","style","handleMovie","push","pathname","toLowerCase","state","clicked","regex","unslug","movie","slug","replace","currentStream","includes","search"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAIA,SAASC,UAAT,CAAqBC,KAArB,EAA2B;AACzB,QAAMC,OAAO,GAAGH,UAAU,EAA1B,CADyB,CAE3B;;AACE,QAAM,CAACI,UAAD,IAAeR,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACS,KAAD,IAAUT,QAAQ,CAAC,EAAD,CAAxB;AAIAC,EAAAA,SAAS,CAAC,MAAM;AAEdO,IAAAA,UAAU,CAAC,SAAD,CAAV;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGC,GA5GM,CAAT;;AA8GA,WAASE,WAAT,GAAuB;AACrBJ,IAAAA,KAAK,CAACC,OAAN,CAAcI,IAAd,CAAmB;AACjBC,MAAAA,QAAQ,EAAG,YAAWJ,UAAU,CAACK,WAAX,EAAyB,SAD9B;AAEjBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX;AAFU,KAAnB;AAID;;AAIG,QAAMC,KAAK,GAAG,IAAd;AACA,MAAIC,MAAM,GAAGX,KAAK,CAACY,KAAN,CAAYC,IAAZ,CAAiBC,OAAjB,CAAyBJ,KAAzB,EAAgC,GAAhC,CAAb;AACA,MAAIK,aAAa,GAAGb,UAApB;AACAS,EAAAA,MAAM,GAAGA,MAAM,CAACJ,WAAP,EAAT;;AACA,MAAII,MAAM,CAACK,QAAP,CAAgBhB,KAAK,CAACiB,MAAtB,CAAJ,EAAkC;AAChC;AACA;AAGA;AACA;;AAGF;;;;;;;;AASE,WACE;AAAK,MAAA,SAAS,EAAGd,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,OAAO,EAAGC,WAAb;AAA0B,MAAA,SAAS,EAAE,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA+C,QAA/C,MADJ,EAGE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,YAAWW,aAAa,CAACR,WAAd,EAA4B,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAE,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAiCL,UAAjC,CADF,CAHF,CADF;AASD,GA3BD,MA4BI;AACF,WACE,EADF;AAGD;AACF;;AAGL,eAAeH,UAAf","sourcesContent":["import React,{ useState, useEffect } from 'react';\nimport InfoPage from '../containers/InfoPage'\nimport {Link} from 'react-router-dom'\nimport { useHistory } from \"react-router-dom\";\n\n\n\nfunction MoviesList (props){\n  const history = useHistory();\n//binds passed handler to StreamsList handler\n  const [streamName] = useState('')\n  const [style] = useState('')\n       \n\n\n  useEffect(() => {\n\n    streamName('Netflix');\n\n    /*\n    switch (props.movie.stream_id) {\n      case 1:\n        // statements_1\n        streamName('Netflix')\n        style('movie-card netflix')\n        break;\n      case 2:\n        // statements_1\n        streamName(\"Hulu\")\n        style(\"movie-card hulu\")        \n        break;\n      case 3:\n        // statements_1\n        streamName(\"Amazon\")\n        style(\"movie-card prime\")          \n        break;\n      case 4:\n        // statements_1\n        streamName(\"HBO Max\")\n        style(\"movie-card hbo\")          \n        break;\n      case 5:\n        // statements_1\n        streamName(\"Disney+\")\n        style(\"movie-card disney\")          \n        break;\n      case 6:\n        // statements_1\n        streamName(\"Showtime\")\n        style(\"movie-card showtime\")          \n        break;\n      case 7:\n        // statements_1\n        streamName(\"Starz\")\n        style(\"movie-card starz\")          \n        break;\n      case 8:\n        // statements_1\n        streamName(\"Cinimax\")\n        style(\"movie-card max\")          \n        break;\n      case 9:\n        // statements_1\n        streamName(\"DC Universe\")\n        style(\"movie-card dc\")          \n        break;\n      case 10:\n        // statements_1\n        streamName(\"Apple TV\")\n        style(\"movie-card apple\")          \n        break;\n      case 11:\n        // statements_1\n        streamName(\"Epix\")\n        style(\"movie-card epix\")          \n        break;\n      case 12:\n        // statements_1\n        streamName(\"CBS\")\n        style(\"movie-card cbs\")          \n        break;\n      case 13:\n        // statements_1\n        streamName(\"TBS\")\n        style(\"movie-card tbs\")          \n        break;\n      case 14:\n        // statements_1\n        streamName(\"TNT\")\n        style(\"movie-card tnt\")          \n        break;\n      case 15:\n        // statements_1\n        streamName(\"Shudder\")\n        style(\"movie-card shudder\")          \n        break;\n      case 16:\n        // statements_1\n        streamName(\"AMC\")\n        style(\"movie-card amc\")          \n        break;\n      case 17:\n        // statements_1\n        streamName(\"FX\")\n        style(\"movie-card fx\")          \n        break;\n      case 18:\n        // statements_1\n        streamName(\"SYFY\")\n        style(\"movie-card stfy\")          \n        break;\n      case 19:\n        // statements_1\n        streamName(\"IFC\")\n        style(\"movie-card ifc\")          \n        break;                                                                                                \n      default:\n        // statements_def\n        streamName(\"\")\n        style(\"movie-card\")          \n        break;\n    }\n    */\n    });\n\n  function handleMovie() {\n    props.history.push({\n      pathname: `/streams/${streamName.toLowerCase()}/movies`,\n      state: { clicked: true }    \n    })\n  }\n\n\n\n      const regex = /-/g;\n      let unslug = props.movie.slug.replace(regex, ' ')\n      let currentStream = streamName\n      unslug = unslug.toLowerCase()\n      if (unslug.includes(props.search)){\n        //onclick route to stream address ex: http://localhost:3000/streams/hbo/movies\n        //also render movie as if it was clicked on the movies page\n\n\n        //movie sends info to movieList and MovieList renders Infopage\n        //<InfoPage movieIds={this.props.movieIds} streamID={this.props.streamID} movieID={this.state.movieID} currentMovie={showMovie} trailerID={this.trailerID}/>\n\n\n      /* alternative\n      this.props.history.push({\n        pathname: '/',\n        state: {\n          successMessage: this.generateSuccessMessage(payload)\n        }\n      });      \n\n       */\n        return (\n          <div className= {style}>\n              <p onClick= {handleMovie} className= 'title'> {\"unslug\"} </p>\n            \n            <Link to={`/streams/${currentStream.toLowerCase()}/movies`}>\n              <span className= 'stream-name'> {streamName}</span>\n            </Link>\n          </div>\n        )\n      }\n      else{\n        return(\n          \"\"\n        )\n      }\n    }\n \n\nexport default MoviesList;"]},"metadata":{},"sourceType":"module"}