{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/ProfilePage.js\";\nimport React, { Component } from 'react';\nimport { Fragment } from \"react\";\nimport { useState, useEffect } from 'react';\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport { connect } from 'react-redux';\nimport { fetchUserStreams } from '../actions/userStreamActions';\nimport Profile from '../components/Profile';\n\nclass ProfilePage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.fetchUserStreams = () => {\n      this.props.fetchUserStreams(1);\n    };\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"Loading Profile...\");\n      } else {\n        return React.createElement(Profile, {\n          UserStreams: this.fetchUserStreams,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchUserStreams(1);\n    console.log(this);\n  }\n\n  componentDidUpdate(prevProps) {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.handleLoading());\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    userStreams: state.StreamsReducer.streams,\n    loading: state.StreamsReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  fetchUserStreams\n})(ProfilePage);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/ProfilePage.js"],"names":["React","Component","Fragment","useState","useEffect","useAuth0","connect","fetchUserStreams","Profile","ProfilePage","props","handleLoading","loading","componentDidMount","console","log","componentDidUpdate","prevProps","render","mapDispatchToProps","state","userStreams","StreamsReducer","streams"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,WAAN,SAA0BR,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAUlCM,gBAVkC,GAUf,MAAM;AACxB,WAAKG,KAAL,CAAWH,gBAAX,CAA4B,CAA5B;AACA,KAZiC;;AAAA,SAelCI,aAfkC,GAelB,MAAM;AACpB,UAAG,KAAKD,KAAL,CAAWE,OAAd,EACA;AACE,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACD,OAHD,MAIK;AACA,eAAO,oBAAC,OAAD;AAAU,UAAA,WAAW,EAAE,KAAKL,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACJ;AACF,KAvBiC;AAAA;;AAElCM,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,KAAL,CAAWH,gBAAX,CAA4B,CAA5B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAW,CAC5B;;AAiBDC,EAAAA,MAAM,GAAG;AACP,WACC;AAAK,MAAA,SAAS,EAAE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD,KAAKP,aAAL,EADC,CADD;AAKD;;AA/BiC;;AAkCpC,MAAMQ,kBAAkB,GAAGC,KAAK,IAAI;AAClC,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACE,cAAN,CAAqBC,OAD7B;AAELX,IAAAA,OAAO,EAAEQ,KAAK,CAACE,cAAN,CAAqBV;AAFzB,GAAP;AAID,CALD;;AAOA,eAAeN,OAAO,CAACa,kBAAD,EAAqB;AAACZ,EAAAA;AAAD,CAArB,CAAP,CAAgDE,WAAhD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Fragment } from \"react\";\nimport { useState, useEffect } from 'react';\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport { connect } from 'react-redux';\nimport { fetchUserStreams } from '../actions/userStreamActions'\nimport Profile from '../components/Profile';\n\nclass ProfilePage extends Component {  \n  \n  componentDidMount() {\n    this.props.fetchUserStreams(1)\n    console.log(this)\n  }\n\n  componentDidUpdate(prevProps){\n  }\n\n  fetchUserStreams = () => {\n  \tthis.props.fetchUserStreams(1)\n  }\n\n\n  handleLoading = () => {\n    if(this.props.loading) \n    {\n      return <div>Loading Profile...</div>\n    } \n    else {\n         return <Profile  UserStreams={this.fetchUserStreams}/>\n    }\n  }\n\n  render() {\n    return (\n    \t<div className= \"Profile\">\n\t\t\t{this.handleLoading()}\n\t\t</div>\t\t\t\n \t);\n  }\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    userStreams: state.StreamsReducer.streams,\n    loading: state.StreamsReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {fetchUserStreams})(ProfilePage)"]},"metadata":{},"sourceType":"module"}