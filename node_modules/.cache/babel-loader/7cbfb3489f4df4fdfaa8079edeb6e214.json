{"ast":null,"code":"/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst os = require('os');\n\nconst path = require('path');\n\nconst http = require('http');\n\nconst https = require('https');\n\nconst URL = require('url');\n\nconst removeFolder = require('rimraf');\n\nconst childProcess = require('child_process');\n\nconst BrowserFetcher = require('./BrowserFetcher');\n\nconst {\n  Connection\n} = require('./Connection');\n\nconst {\n  Browser\n} = require('./Browser');\n\nconst readline = require('readline');\n\nconst fs = require('fs');\n\nconst {\n  helper,\n  assert,\n  debugError\n} = require('./helper');\n\nconst debugLauncher = require('debug')(`puppeteer:launcher`);\n\nconst {\n  TimeoutError\n} = require('./Errors');\n\nconst WebSocketTransport = require('./WebSocketTransport');\n\nconst PipeTransport = require('./PipeTransport');\n\nconst mkdtempAsync = helper.promisify(fs.mkdtemp);\nconst removeFolderAsync = helper.promisify(removeFolder);\nconst writeFileAsync = helper.promisify(fs.writeFile);\n\nclass BrowserRunner {\n  /**\n   * @param {string} executablePath\n   * @param {!Array<string>} processArguments\n   * @param {string=} tempDirectory\n   */\n  constructor(executablePath, processArguments, tempDirectory) {\n    this._executablePath = executablePath;\n    this._processArguments = processArguments;\n    this._tempDirectory = tempDirectory;\n    this.proc = null;\n    this.connection = null;\n    this._closed = true;\n    this._listeners = [];\n  }\n  /**\n   * @param {!(Launcher.LaunchOptions)=} options\n   */\n\n\n  start(options = {}) {\n    const {\n      handleSIGINT,\n      handleSIGTERM,\n      handleSIGHUP,\n      dumpio,\n      env,\n      pipe\n    } = options;\n    /** @type {!Array<\"ignore\"|\"pipe\">} */\n\n    let stdio = ['pipe', 'pipe', 'pipe'];\n\n    if (pipe) {\n      if (dumpio) stdio = ['ignore', 'pipe', 'pipe', 'pipe', 'pipe'];else stdio = ['ignore', 'ignore', 'ignore', 'pipe', 'pipe'];\n    }\n\n    assert(!this.proc, 'This process has previously been started.');\n    debugLauncher(`Calling ${this._executablePath} ${this._processArguments.join(' ')}`);\n    this.proc = childProcess.spawn(this._executablePath, this._processArguments, {\n      // On non-windows platforms, `detached: true` makes child process a leader of a new\n      // process group, making it possible to kill child process tree with `.kill(-pid)` command.\n      // @see https://nodejs.org/api/child_process.html#child_process_options_detached\n      detached: process.platform !== 'win32',\n      env,\n      stdio\n    });\n\n    if (dumpio) {\n      this.proc.stderr.pipe(process.stderr);\n      this.proc.stdout.pipe(process.stdout);\n    }\n\n    this._closed = false;\n    this._processClosing = new Promise((fulfill, reject) => {\n      this.proc.once('exit', () => {\n        this._closed = true; // Cleanup as processes exit.\n\n        if (this._tempDirectory) {\n          removeFolderAsync(this._tempDirectory).then(() => fulfill()).catch(err => console.error(err));\n        } else {\n          fulfill();\n        }\n      });\n    });\n    this._listeners = [helper.addEventListener(process, 'exit', this.kill.bind(this))];\n    if (handleSIGINT) this._listeners.push(helper.addEventListener(process, 'SIGINT', () => {\n      this.kill();\n      process.exit(130);\n    }));\n    if (handleSIGTERM) this._listeners.push(helper.addEventListener(process, 'SIGTERM', this.close.bind(this)));\n    if (handleSIGHUP) this._listeners.push(helper.addEventListener(process, 'SIGHUP', this.close.bind(this)));\n  }\n  /**\n   * @return {Promise}\n   */\n\n\n  close() {\n    if (this._closed) return Promise.resolve();\n    helper.removeEventListeners(this._listeners);\n\n    if (this._tempDirectory) {\n      this.kill();\n    } else if (this.connection) {\n      // Attempt to close the browser gracefully\n      this.connection.send('Browser.close').catch(error => {\n        debugError(error);\n        this.kill();\n      });\n    }\n\n    return this._processClosing;\n  } // This function has to be sync to be used as 'exit' event handler.\n\n\n  kill() {\n    helper.removeEventListeners(this._listeners);\n\n    if (this.proc && this.proc.pid && !this.proc.killed && !this._closed) {\n      try {\n        if (process.platform === 'win32') childProcess.execSync(`taskkill /pid ${this.proc.pid} /T /F`);else process.kill(-this.proc.pid, 'SIGKILL');\n      } catch (error) {// the process might have already stopped\n      }\n    } // Attempt to remove temporary profile directory to avoid littering.\n\n\n    try {\n      removeFolder.sync(this._tempDirectory);\n    } catch (error) {}\n  }\n  /**\n   * @param {!({usePipe?: boolean, timeout: number, slowMo: number, preferredRevision: string})} options\n   *\n   * @return {!Promise<!Connection>}\n   */\n\n\n  async setupConnection(options) {\n    const {\n      usePipe,\n      timeout,\n      slowMo,\n      preferredRevision\n    } = options;\n\n    if (!usePipe) {\n      const browserWSEndpoint = await waitForWSEndpoint(this.proc, timeout, preferredRevision);\n      const transport = await WebSocketTransport.create(browserWSEndpoint);\n      this.connection = new Connection(browserWSEndpoint, transport, slowMo);\n    } else {\n      const transport = new PipeTransport(\n      /** @type {!NodeJS.WritableStream} */\n      this.proc.stdio[3],\n      /** @type {!NodeJS.ReadableStream} */\n      this.proc.stdio[4]);\n      this.connection = new Connection('', transport, slowMo);\n    }\n\n    return this.connection;\n  }\n\n}\n/**\n * @implements {!Puppeteer.ProductLauncher}\n */\n\n\nclass ChromeLauncher {\n  /**\n   * @param {string} projectRoot\n   * @param {string} preferredRevision\n   * @param {boolean} isPuppeteerCore\n   */\n  constructor(projectRoot, preferredRevision, isPuppeteerCore) {\n    this._projectRoot = projectRoot;\n    this._preferredRevision = preferredRevision;\n    this._isPuppeteerCore = isPuppeteerCore;\n  }\n  /**\n   * @param {!(Launcher.LaunchOptions & Launcher.ChromeArgOptions & Launcher.BrowserOptions)=} options\n   * @return {!Promise<!Browser>}\n   */\n\n\n  async launch(options = {}) {\n    const {\n      ignoreDefaultArgs = false,\n      args = [],\n      dumpio = false,\n      executablePath = null,\n      pipe = false,\n      env = process.env,\n      handleSIGINT = true,\n      handleSIGTERM = true,\n      handleSIGHUP = true,\n      ignoreHTTPSErrors = false,\n      defaultViewport = {\n        width: 800,\n        height: 600\n      },\n      slowMo = 0,\n      timeout = 30000\n    } = options;\n    const profilePath = path.join(os.tmpdir(), 'puppeteer_dev_chrome_profile-');\n    const chromeArguments = [];\n    if (!ignoreDefaultArgs) chromeArguments.push(...this.defaultArgs(options));else if (Array.isArray(ignoreDefaultArgs)) chromeArguments.push(...this.defaultArgs(options).filter(arg => !ignoreDefaultArgs.includes(arg)));else chromeArguments.push(...args);\n    let temporaryUserDataDir = null;\n    if (!chromeArguments.some(argument => argument.startsWith('--remote-debugging-'))) chromeArguments.push(pipe ? '--remote-debugging-pipe' : '--remote-debugging-port=0');\n\n    if (!chromeArguments.some(arg => arg.startsWith('--user-data-dir'))) {\n      temporaryUserDataDir = await mkdtempAsync(profilePath);\n      chromeArguments.push(`--user-data-dir=${temporaryUserDataDir}`);\n    }\n\n    let chromeExecutable = executablePath;\n\n    if (!executablePath) {\n      const {\n        missingText,\n        executablePath\n      } = resolveExecutablePath(this);\n      if (missingText) throw new Error(missingText);\n      chromeExecutable = executablePath;\n    }\n\n    const usePipe = chromeArguments.includes('--remote-debugging-pipe');\n    const runner = new BrowserRunner(chromeExecutable, chromeArguments, temporaryUserDataDir);\n    runner.start({\n      handleSIGHUP,\n      handleSIGTERM,\n      handleSIGINT,\n      dumpio,\n      env,\n      pipe: usePipe\n    });\n\n    try {\n      const connection = await runner.setupConnection({\n        usePipe,\n        timeout,\n        slowMo,\n        preferredRevision: this._preferredRevision\n      });\n      const browser = await Browser.create(connection, [], ignoreHTTPSErrors, defaultViewport, runner.proc, runner.close.bind(runner));\n      await browser.waitForTarget(t => t.type() === 'page');\n      return browser;\n    } catch (error) {\n      runner.kill();\n      throw error;\n    }\n  }\n  /**\n   * @param {!Launcher.ChromeArgOptions=} options\n   * @return {!Array<string>}\n   */\n\n\n  defaultArgs(options = {}) {\n    const chromeArguments = ['--disable-background-networking', '--enable-features=NetworkService,NetworkServiceInProcess', '--disable-background-timer-throttling', '--disable-backgrounding-occluded-windows', '--disable-breakpad', '--disable-client-side-phishing-detection', '--disable-component-extensions-with-background-pages', '--disable-default-apps', '--disable-dev-shm-usage', '--disable-extensions', '--disable-features=TranslateUI', '--disable-hang-monitor', '--disable-ipc-flooding-protection', '--disable-popup-blocking', '--disable-prompt-on-repost', '--disable-renderer-backgrounding', '--disable-sync', '--force-color-profile=srgb', '--metrics-recording-only', '--no-first-run', '--enable-automation', '--password-store=basic', '--use-mock-keychain'];\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir = null\n    } = options;\n    if (userDataDir) chromeArguments.push(`--user-data-dir=${userDataDir}`);\n    if (devtools) chromeArguments.push('--auto-open-devtools-for-tabs');\n\n    if (headless) {\n      chromeArguments.push('--headless', '--hide-scrollbars', '--mute-audio');\n    }\n\n    if (args.every(arg => arg.startsWith('-'))) chromeArguments.push('about:blank');\n    chromeArguments.push(...args);\n    return chromeArguments;\n  }\n  /**\n   * @return {string}\n   */\n\n\n  executablePath() {\n    return resolveExecutablePath(this).executablePath;\n  }\n  /**\n  * @return {string}\n  */\n\n\n  get product() {\n    return 'chrome';\n  }\n  /**\n   * @param {!(Launcher.BrowserOptions & {browserWSEndpoint?: string, browserURL?: string, transport?: !Puppeteer.ConnectionTransport})} options\n   * @return {!Promise<!Browser>}\n   */\n\n\n  async connect(options) {\n    const {\n      browserWSEndpoint,\n      browserURL,\n      ignoreHTTPSErrors = false,\n      defaultViewport = {\n        width: 800,\n        height: 600\n      },\n      transport,\n      slowMo = 0\n    } = options;\n    assert(Number(!!browserWSEndpoint) + Number(!!browserURL) + Number(!!transport) === 1, 'Exactly one of browserWSEndpoint, browserURL or transport must be passed to puppeteer.connect');\n    let connection = null;\n\n    if (transport) {\n      connection = new Connection('', transport, slowMo);\n    } else if (browserWSEndpoint) {\n      const connectionTransport = await WebSocketTransport.create(browserWSEndpoint);\n      connection = new Connection(browserWSEndpoint, connectionTransport, slowMo);\n    } else if (browserURL) {\n      const connectionURL = await getWSEndpoint(browserURL);\n      const connectionTransport = await WebSocketTransport.create(connectionURL);\n      connection = new Connection(connectionURL, connectionTransport, slowMo);\n    }\n\n    const {\n      browserContextIds\n    } = await connection.send('Target.getBrowserContexts');\n    return Browser.create(connection, browserContextIds, ignoreHTTPSErrors, defaultViewport, null, () => connection.send('Browser.close').catch(debugError));\n  }\n\n}\n/**\n * @implements {!Puppeteer.ProductLauncher}\n */\n\n\nclass FirefoxLauncher {\n  /**\n   * @param {string} projectRoot\n   * @param {string} preferredRevision\n   * @param {boolean} isPuppeteerCore\n   */\n  constructor(projectRoot, preferredRevision, isPuppeteerCore) {\n    this._projectRoot = projectRoot;\n    this._preferredRevision = preferredRevision;\n    this._isPuppeteerCore = isPuppeteerCore;\n  }\n  /**\n   * @param {!(Launcher.LaunchOptions & Launcher.ChromeArgOptions & Launcher.BrowserOptions & {extraPrefsFirefox?: !object})=} options\n   * @return {!Promise<!Browser>}\n   */\n\n\n  async launch(options = {}) {\n    const {\n      ignoreDefaultArgs = false,\n      args = [],\n      dumpio = false,\n      executablePath = null,\n      pipe = false,\n      env = process.env,\n      handleSIGINT = true,\n      handleSIGTERM = true,\n      handleSIGHUP = true,\n      ignoreHTTPSErrors = false,\n      defaultViewport = {\n        width: 800,\n        height: 600\n      },\n      slowMo = 0,\n      timeout = 30000,\n      extraPrefsFirefox = {}\n    } = options;\n    const firefoxArguments = [];\n    if (!ignoreDefaultArgs) firefoxArguments.push(...this.defaultArgs(options));else if (Array.isArray(ignoreDefaultArgs)) firefoxArguments.push(...this.defaultArgs(options).filter(arg => !ignoreDefaultArgs.includes(arg)));else firefoxArguments.push(...args);\n    let temporaryUserDataDir = null;\n\n    if (!firefoxArguments.includes('-profile') && !firefoxArguments.includes('--profile')) {\n      temporaryUserDataDir = await this._createProfile(extraPrefsFirefox);\n      firefoxArguments.push('--profile');\n      firefoxArguments.push(temporaryUserDataDir);\n    }\n\n    let executable = executablePath;\n\n    if (!executablePath) {\n      const {\n        missingText,\n        executablePath\n      } = resolveExecutablePath(this);\n      if (missingText) throw new Error(missingText);\n      executable = executablePath;\n    }\n\n    const runner = new BrowserRunner(executable, firefoxArguments, temporaryUserDataDir);\n    runner.start({\n      handleSIGHUP,\n      handleSIGTERM,\n      handleSIGINT,\n      dumpio,\n      env,\n      pipe\n    });\n\n    try {\n      const connection = await runner.setupConnection({\n        usePipe: pipe,\n        timeout,\n        slowMo,\n        preferredRevision: this._preferredRevision\n      });\n      const browser = await Browser.create(connection, [], ignoreHTTPSErrors, defaultViewport, runner.proc, runner.close.bind(runner));\n      await browser.waitForTarget(t => t.type() === 'page');\n      return browser;\n    } catch (error) {\n      runner.kill();\n      throw error;\n    }\n  }\n  /**\n   * @param {!(Launcher.BrowserOptions & {browserWSEndpoint?: string, browserURL?: string, transport?: !Puppeteer.ConnectionTransport})} options\n   * @return {!Promise<!Browser>}\n   */\n\n\n  async connect(options) {\n    const {\n      browserWSEndpoint,\n      browserURL,\n      ignoreHTTPSErrors = false,\n      defaultViewport = {\n        width: 800,\n        height: 600\n      },\n      transport,\n      slowMo = 0\n    } = options;\n    assert(Number(!!browserWSEndpoint) + Number(!!browserURL) + Number(!!transport) === 1, 'Exactly one of browserWSEndpoint, browserURL or transport must be passed to puppeteer.connect');\n    let connection = null;\n\n    if (transport) {\n      connection = new Connection('', transport, slowMo);\n    } else if (browserWSEndpoint) {\n      const connectionTransport = await WebSocketTransport.create(browserWSEndpoint);\n      connection = new Connection(browserWSEndpoint, connectionTransport, slowMo);\n    } else if (browserURL) {\n      const connectionURL = await getWSEndpoint(browserURL);\n      const connectionTransport = await WebSocketTransport.create(connectionURL);\n      connection = new Connection(connectionURL, connectionTransport, slowMo);\n    }\n\n    const {\n      browserContextIds\n    } = await connection.send('Target.getBrowserContexts');\n    return Browser.create(connection, browserContextIds, ignoreHTTPSErrors, defaultViewport, null, () => connection.send('Browser.close').catch(debugError));\n  }\n  /**\n   * @return {string}\n   */\n\n\n  executablePath() {\n    const executablePath = process.env.PUPPETEER_EXECUTABLE_PATH || process.env.npm_config_puppeteer_executable_path || process.env.npm_package_config_puppeteer_executable_path; // TODO get resolveExecutablePath working for Firefox\n\n    if (!executablePath) throw new Error('Please set PUPPETEER_EXECUTABLE_PATH to a Firefox binary.');\n    return executablePath;\n  }\n  /**\n   * @return {string}\n   */\n\n\n  get product() {\n    return 'firefox';\n  }\n  /**\n   * @param {!Launcher.ChromeArgOptions=} options\n   * @return {!Array<string>}\n   */\n\n\n  defaultArgs(options = {}) {\n    const firefoxArguments = ['--remote-debugging-port=0', '--no-remote', '--foreground'];\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir = null\n    } = options;\n\n    if (userDataDir) {\n      firefoxArguments.push('--profile');\n      firefoxArguments.push(userDataDir);\n    }\n\n    if (headless) firefoxArguments.push('--headless');\n    if (devtools) firefoxArguments.push('--devtools');\n    if (args.every(arg => arg.startsWith('-'))) firefoxArguments.push('about:blank');\n    firefoxArguments.push(...args);\n    return firefoxArguments;\n  }\n  /**\n   * @param {!Object=} extraPrefs\n   * @return {!Promise<string>}\n   */\n\n\n  async _createProfile(extraPrefs) {\n    const profilePath = await mkdtempAsync(path.join(os.tmpdir(), 'puppeteer_dev_firefox_profile-'));\n    const prefsJS = [];\n    const userJS = [];\n    const server = 'dummy.test';\n    const defaultPreferences = {\n      // Make sure Shield doesn't hit the network.\n      'app.normandy.api_url': '',\n      // Disable Firefox old build background check\n      'app.update.checkInstallTime': false,\n      // Disable automatically upgrading Firefox\n      'app.update.disabledForTesting': true,\n      // Increase the APZ content response timeout to 1 minute\n      'apz.content_response_timeout': 60000,\n      // Prevent various error message on the console\n      // jest-puppeteer asserts that no error message is emitted by the console\n      'browser.contentblocking.features.standard': '-tp,tpPrivate,cookieBehavior0,-cm,-fp',\n      // Enable the dump function: which sends messages to the system\n      // console\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1543115\n      'browser.dom.window.dump.enabled': true,\n      // Disable topstories\n      'browser.newtabpage.activity-stream.feeds.section.topstories': false,\n      // Always display a blank page\n      'browser.newtabpage.enabled': false,\n      // Background thumbnails in particular cause grief: and disabling\n      // thumbnails in general cannot hurt\n      'browser.pagethumbnails.capturing_disabled': true,\n      // Disable safebrowsing components.\n      'browser.safebrowsing.blockedURIs.enabled': false,\n      'browser.safebrowsing.downloads.enabled': false,\n      'browser.safebrowsing.malware.enabled': false,\n      'browser.safebrowsing.passwords.enabled': false,\n      'browser.safebrowsing.phishing.enabled': false,\n      // Disable updates to search engines.\n      'browser.search.update': false,\n      // Do not restore the last open set of tabs if the browser has crashed\n      'browser.sessionstore.resume_from_crash': false,\n      // Skip check for default browser on startup\n      'browser.shell.checkDefaultBrowser': false,\n      // Disable newtabpage\n      'browser.startup.homepage': 'about:blank',\n      // Do not redirect user when a milstone upgrade of Firefox is detected\n      'browser.startup.homepage_override.mstone': 'ignore',\n      // Start with a blank page about:blank\n      'browser.startup.page': 0,\n      // Do not allow background tabs to be zombified on Android: otherwise for\n      // tests that open additional tabs: the test harness tab itself might get\n      // unloaded\n      'browser.tabs.disableBackgroundZombification': false,\n      // Do not warn when closing all other open tabs\n      'browser.tabs.warnOnCloseOtherTabs': false,\n      // Do not warn when multiple tabs will be opened\n      'browser.tabs.warnOnOpen': false,\n      // Disable the UI tour.\n      'browser.uitour.enabled': false,\n      // Turn off search suggestions in the location bar so as not to trigger\n      // network connections.\n      'browser.urlbar.suggest.searches': false,\n      // Disable first run splash page on Windows 10\n      'browser.usedOnWindows10.introURL': '',\n      // Do not warn on quitting Firefox\n      'browser.warnOnQuit': false,\n      // Do not show datareporting policy notifications which can\n      // interfere with tests\n      'datareporting.healthreport.about.reportUrl': `http://${server}/dummy/abouthealthreport/`,\n      'datareporting.healthreport.documentServerURI': `http://${server}/dummy/healthreport/`,\n      'datareporting.healthreport.logging.consoleEnabled': false,\n      'datareporting.healthreport.service.enabled': false,\n      'datareporting.healthreport.service.firstRun': false,\n      'datareporting.healthreport.uploadEnabled': false,\n      'datareporting.policy.dataSubmissionEnabled': false,\n      'datareporting.policy.dataSubmissionPolicyAccepted': false,\n      'datareporting.policy.dataSubmissionPolicyBypassNotification': true,\n      // DevTools JSONViewer sometimes fails to load dependencies with its require.js.\n      // This doesn't affect Puppeteer but spams console (Bug 1424372)\n      'devtools.jsonview.enabled': false,\n      // Disable popup-blocker\n      'dom.disable_open_during_load': false,\n      // Enable the support for File object creation in the content process\n      // Required for |Page.setFileInputFiles| protocol method.\n      'dom.file.createInChild': true,\n      // Disable the ProcessHangMonitor\n      'dom.ipc.reportProcessHangs': false,\n      // Disable slow script dialogues\n      'dom.max_chrome_script_run_time': 0,\n      'dom.max_script_run_time': 0,\n      // Only load extensions from the application and user profile\n      // AddonManager.SCOPE_PROFILE + AddonManager.SCOPE_APPLICATION\n      'extensions.autoDisableScopes': 0,\n      'extensions.enabledScopes': 5,\n      // Disable metadata caching for installed add-ons by default\n      'extensions.getAddons.cache.enabled': false,\n      // Disable installing any distribution extensions or add-ons.\n      'extensions.installDistroAddons': false,\n      // Disabled screenshots extension\n      'extensions.screenshots.disabled': true,\n      // Turn off extension updates so they do not bother tests\n      'extensions.update.enabled': false,\n      // Turn off extension updates so they do not bother tests\n      'extensions.update.notifyUser': false,\n      // Make sure opening about:addons will not hit the network\n      'extensions.webservice.discoverURL': `http://${server}/dummy/discoveryURL`,\n      // Allow the application to have focus even it runs in the background\n      'focusmanager.testmode': true,\n      // Disable useragent updates\n      'general.useragent.updates.enabled': false,\n      // Always use network provider for geolocation tests so we bypass the\n      // macOS dialog raised by the corelocation provider\n      'geo.provider.testing': true,\n      // Do not scan Wifi\n      'geo.wifi.scan': false,\n      // No hang monitor\n      'hangmonitor.timeout': 0,\n      // Show chrome errors and warnings in the error console\n      'javascript.options.showInConsole': true,\n      // Disable download and usage of OpenH264: and Widevine plugins\n      'media.gmp-manager.updateEnabled': false,\n      // Prevent various error message on the console\n      // jest-puppeteer asserts that no error message is emitted by the console\n      'network.cookie.cookieBehavior': 0,\n      // Do not prompt for temporary redirects\n      'network.http.prompt-temp-redirect': false,\n      // Disable speculative connections so they are not reported as leaking\n      // when they are hanging around\n      'network.http.speculative-parallel-limit': 0,\n      // Do not automatically switch between offline and online\n      'network.manage-offline-status': false,\n      // Make sure SNTP requests do not hit the network\n      'network.sntp.pools': server,\n      // Disable Flash.\n      'plugin.state.flash': 0,\n      'privacy.trackingprotection.enabled': false,\n      // Enable Remote Agent\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1544393\n      'remote.enabled': true,\n      // Don't do network connections for mitm priming\n      'security.certerrors.mitm.priming.enabled': false,\n      // Local documents have access to all other local documents,\n      // including directory listings\n      'security.fileuri.strict_origin_policy': false,\n      // Do not wait for the notification button security delay\n      'security.notification_enable_delay': 0,\n      // Ensure blocklist updates do not hit the network\n      'services.settings.server': `http://${server}/dummy/blocklist/`,\n      // Do not automatically fill sign-in forms with known usernames and\n      // passwords\n      'signon.autofillForms': false,\n      // Disable password capture, so that tests that include forms are not\n      // influenced by the presence of the persistent doorhanger notification\n      'signon.rememberSignons': false,\n      // Disable first-run welcome page\n      'startup.homepage_welcome_url': 'about:blank',\n      // Disable first-run welcome page\n      'startup.homepage_welcome_url.additional': '',\n      // Disable browser animations (tabs, fullscreen, sliding alerts)\n      'toolkit.cosmeticAnimations.enabled': false,\n      // We want to collect telemetry, but we don't want to send in the results\n      'toolkit.telemetry.server': `https://${server}/dummy/telemetry/`,\n      // Prevent starting into safe mode after application crashes\n      'toolkit.startup.max_resumed_crashes': -1\n    };\n    Object.assign(defaultPreferences, extraPrefs);\n\n    for (const [key, value] of Object.entries(defaultPreferences)) userJS.push(`user_pref(${JSON.stringify(key)}, ${JSON.stringify(value)});`);\n\n    await writeFileAsync(path.join(profilePath, 'user.js'), userJS.join('\\n'));\n    await writeFileAsync(path.join(profilePath, 'prefs.js'), prefsJS.join('\\n'));\n    return profilePath;\n  }\n\n}\n/**\n * @param {!Puppeteer.ChildProcess} browserProcess\n * @param {number} timeout\n * @param {string} preferredRevision\n * @return {!Promise<string>}\n */\n\n\nfunction waitForWSEndpoint(browserProcess, timeout, preferredRevision) {\n  return new Promise((resolve, reject) => {\n    const rl = readline.createInterface({\n      input: browserProcess.stderr\n    });\n    let stderr = '';\n    const listeners = [helper.addEventListener(rl, 'line', onLine), helper.addEventListener(rl, 'close', () => onClose()), helper.addEventListener(browserProcess, 'exit', () => onClose()), helper.addEventListener(browserProcess, 'error', error => onClose(error))];\n    const timeoutId = timeout ? setTimeout(onTimeout, timeout) : 0;\n    /**\n     * @param {!Error=} error\n     */\n\n    function onClose(error) {\n      cleanup();\n      reject(new Error(['Failed to launch the browser process!' + (error ? ' ' + error.message : ''), stderr, '', 'TROUBLESHOOTING: https://github.com/puppeteer/puppeteer/blob/master/docs/troubleshooting.md', ''].join('\\n')));\n    }\n\n    function onTimeout() {\n      cleanup();\n      reject(new TimeoutError(`Timed out after ${timeout} ms while trying to connect to the browser! Only Chrome at revision r${preferredRevision} is guaranteed to work.`));\n    }\n    /**\n     * @param {string} line\n     */\n\n\n    function onLine(line) {\n      stderr += line + '\\n';\n      const match = line.match(/^DevTools listening on (ws:\\/\\/.*)$/);\n      if (!match) return;\n      cleanup();\n      resolve(match[1]);\n    }\n\n    function cleanup() {\n      if (timeoutId) clearTimeout(timeoutId);\n      helper.removeEventListeners(listeners);\n    }\n  });\n}\n/**\n * @param {string} browserURL\n * @return {!Promise<string>}\n */\n\n\nfunction getWSEndpoint(browserURL) {\n  let resolve, reject;\n  const promise = new Promise((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n  const endpointURL = URL.resolve(browserURL, '/json/version');\n  const protocol = endpointURL.startsWith('https') ? https : http;\n  const requestOptions = Object.assign(URL.parse(endpointURL), {\n    method: 'GET'\n  });\n  const request = protocol.request(requestOptions, res => {\n    let data = '';\n\n    if (res.statusCode !== 200) {\n      // Consume response data to free up memory.\n      res.resume();\n      reject(new Error('HTTP ' + res.statusCode));\n      return;\n    }\n\n    res.setEncoding('utf8');\n    res.on('data', chunk => data += chunk);\n    res.on('end', () => resolve(JSON.parse(data).webSocketDebuggerUrl));\n  });\n  request.on('error', reject);\n  request.end();\n  return promise.catch(e => {\n    e.message = `Failed to fetch browser webSocket url from ${endpointURL}: ` + e.message;\n    throw e;\n  });\n}\n/**\n * @param {ChromeLauncher|FirefoxLauncher} launcher\n *\n * @return {{executablePath: string, missingText: ?string}}\n */\n\n\nfunction resolveExecutablePath(launcher) {\n  // puppeteer-core doesn't take into account PUPPETEER_* env variables.\n  if (!launcher._isPuppeteerCore) {\n    const executablePath = process.env.PUPPETEER_EXECUTABLE_PATH || process.env.npm_config_puppeteer_executable_path || process.env.npm_package_config_puppeteer_executable_path;\n\n    if (executablePath) {\n      const missingText = !fs.existsSync(executablePath) ? 'Tried to use PUPPETEER_EXECUTABLE_PATH env variable to launch browser but did not find any executable at: ' + executablePath : null;\n      return {\n        executablePath,\n        missingText\n      };\n    }\n  }\n\n  const browserFetcher = new BrowserFetcher(launcher._projectRoot);\n\n  if (!launcher._isPuppeteerCore) {\n    const revision = process.env['PUPPETEER_CHROMIUM_REVISION'];\n\n    if (revision) {\n      const revisionInfo = browserFetcher.revisionInfo(revision);\n      const missingText = !revisionInfo.local ? 'Tried to use PUPPETEER_CHROMIUM_REVISION env variable to launch browser but did not find executable at: ' + revisionInfo.executablePath : null;\n      return {\n        executablePath: revisionInfo.executablePath,\n        missingText\n      };\n    }\n  }\n\n  const revisionInfo = browserFetcher.revisionInfo(launcher._preferredRevision);\n  const missingText = !revisionInfo.local ? `Browser is not downloaded. Run \"npm install\" or \"yarn install\"` : null;\n  return {\n    executablePath: revisionInfo.executablePath,\n    missingText\n  };\n}\n/**\n * @param {string} projectRoot\n * @param {string} preferredRevision\n * @param {boolean} isPuppeteerCore\n * @param {string=} product\n * @return {!Puppeteer.ProductLauncher}\n */\n\n\nfunction Launcher(projectRoot, preferredRevision, isPuppeteerCore, product) {\n  // puppeteer-core doesn't take into account PUPPETEER_* env variables.\n  if (!product && !isPuppeteerCore) product = process.env.PUPPETEER_PRODUCT || process.env.npm_config_puppeteer_product || process.env.npm_package_config_puppeteer_product;\n\n  switch (product) {\n    case 'firefox':\n      return new FirefoxLauncher(projectRoot, preferredRevision, isPuppeteerCore);\n\n    case 'chrome':\n    default:\n      return new ChromeLauncher(projectRoot, preferredRevision, isPuppeteerCore);\n  }\n}\n/**\n * @typedef {Object} Launcher.ChromeArgOptions\n * @property {boolean=} headless\n * @property {Array<string>=} args\n * @property {string=} userDataDir\n * @property {boolean=} devtools\n */\n\n/**\n * @typedef {Object} Launcher.LaunchOptions\n * @property {string=} executablePath\n * @property {boolean|Array<string>=} ignoreDefaultArgs\n * @property {boolean=} handleSIGINT\n * @property {boolean=} handleSIGTERM\n * @property {boolean=} handleSIGHUP\n * @property {number=} timeout\n * @property {boolean=} dumpio\n * @property {!Object<string, string | undefined>=} env\n * @property {boolean=} pipe\n */\n\n/**\n * @typedef {Object} Launcher.BrowserOptions\n * @property {boolean=} ignoreHTTPSErrors\n * @property {(?Puppeteer.Viewport)=} defaultViewport\n * @property {number=} slowMo\n */\n\n\nmodule.exports = Launcher;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river/frontend/app/node_modules/puppeteer/lib/Launcher.js"],"names":["os","require","path","http","https","URL","removeFolder","childProcess","BrowserFetcher","Connection","Browser","readline","fs","helper","assert","debugError","debugLauncher","TimeoutError","WebSocketTransport","PipeTransport","mkdtempAsync","promisify","mkdtemp","removeFolderAsync","writeFileAsync","writeFile","BrowserRunner","constructor","executablePath","processArguments","tempDirectory","_executablePath","_processArguments","_tempDirectory","proc","connection","_closed","_listeners","start","options","handleSIGINT","handleSIGTERM","handleSIGHUP","dumpio","env","pipe","stdio","join","spawn","detached","process","platform","stderr","stdout","_processClosing","Promise","fulfill","reject","once","then","catch","err","console","error","addEventListener","kill","bind","push","exit","close","resolve","removeEventListeners","send","pid","killed","execSync","sync","setupConnection","usePipe","timeout","slowMo","preferredRevision","browserWSEndpoint","waitForWSEndpoint","transport","create","ChromeLauncher","projectRoot","isPuppeteerCore","_projectRoot","_preferredRevision","_isPuppeteerCore","launch","ignoreDefaultArgs","args","ignoreHTTPSErrors","defaultViewport","width","height","profilePath","tmpdir","chromeArguments","defaultArgs","Array","isArray","filter","arg","includes","temporaryUserDataDir","some","argument","startsWith","chromeExecutable","missingText","resolveExecutablePath","Error","runner","browser","waitForTarget","t","type","devtools","headless","userDataDir","every","product","connect","browserURL","Number","connectionTransport","connectionURL","getWSEndpoint","browserContextIds","FirefoxLauncher","extraPrefsFirefox","firefoxArguments","_createProfile","executable","PUPPETEER_EXECUTABLE_PATH","npm_config_puppeteer_executable_path","npm_package_config_puppeteer_executable_path","extraPrefs","prefsJS","userJS","server","defaultPreferences","Object","assign","key","value","entries","JSON","stringify","browserProcess","rl","createInterface","input","listeners","onLine","onClose","timeoutId","setTimeout","onTimeout","cleanup","message","line","match","clearTimeout","promise","res","rej","endpointURL","protocol","requestOptions","parse","method","request","data","statusCode","resume","setEncoding","on","chunk","webSocketDebuggerUrl","end","e","launcher","existsSync","browserFetcher","revision","revisionInfo","local","Launcher","PUPPETEER_PRODUCT","npm_config_puppeteer_product","npm_package_config_puppeteer_product","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst os = require('os');\nconst path = require('path');\nconst http = require('http');\nconst https = require('https');\nconst URL = require('url');\nconst removeFolder = require('rimraf');\nconst childProcess = require('child_process');\nconst BrowserFetcher = require('./BrowserFetcher');\nconst {Connection} = require('./Connection');\nconst {Browser} = require('./Browser');\nconst readline = require('readline');\nconst fs = require('fs');\nconst {helper, assert, debugError} = require('./helper');\nconst debugLauncher = require('debug')(`puppeteer:launcher`);\nconst {TimeoutError} = require('./Errors');\nconst WebSocketTransport = require('./WebSocketTransport');\nconst PipeTransport = require('./PipeTransport');\n\nconst mkdtempAsync = helper.promisify(fs.mkdtemp);\nconst removeFolderAsync = helper.promisify(removeFolder);\nconst writeFileAsync = helper.promisify(fs.writeFile);\n\nclass BrowserRunner {\n\n  /**\n   * @param {string} executablePath\n   * @param {!Array<string>} processArguments\n   * @param {string=} tempDirectory\n   */\n  constructor(executablePath, processArguments, tempDirectory) {\n    this._executablePath = executablePath;\n    this._processArguments = processArguments;\n    this._tempDirectory = tempDirectory;\n    this.proc = null;\n    this.connection = null;\n    this._closed = true;\n    this._listeners = [];\n  }\n\n  /**\n   * @param {!(Launcher.LaunchOptions)=} options\n   */\n  start(options = {}) {\n    const {\n      handleSIGINT,\n      handleSIGTERM,\n      handleSIGHUP,\n      dumpio,\n      env,\n      pipe\n    } = options;\n    /** @type {!Array<\"ignore\"|\"pipe\">} */\n    let stdio = ['pipe', 'pipe', 'pipe'];\n    if (pipe) {\n      if (dumpio)\n        stdio = ['ignore', 'pipe', 'pipe', 'pipe', 'pipe'];\n      else\n        stdio = ['ignore', 'ignore', 'ignore', 'pipe', 'pipe'];\n    }\n    assert(!this.proc, 'This process has previously been started.');\n    debugLauncher(`Calling ${this._executablePath} ${this._processArguments.join(' ')}`);\n    this.proc = childProcess.spawn(\n        this._executablePath,\n        this._processArguments,\n        {\n          // On non-windows platforms, `detached: true` makes child process a leader of a new\n          // process group, making it possible to kill child process tree with `.kill(-pid)` command.\n          // @see https://nodejs.org/api/child_process.html#child_process_options_detached\n          detached: process.platform !== 'win32',\n          env,\n          stdio\n        }\n    );\n    if (dumpio) {\n      this.proc.stderr.pipe(process.stderr);\n      this.proc.stdout.pipe(process.stdout);\n    }\n    this._closed = false;\n    this._processClosing = new Promise((fulfill, reject) => {\n      this.proc.once('exit', () => {\n        this._closed = true;\n        // Cleanup as processes exit.\n        if (this._tempDirectory) {\n          removeFolderAsync(this._tempDirectory)\n              .then(() => fulfill())\n              .catch(err => console.error(err));\n        } else {\n          fulfill();\n        }\n      });\n    });\n    this._listeners = [ helper.addEventListener(process, 'exit', this.kill.bind(this)) ];\n    if (handleSIGINT)\n      this._listeners.push(helper.addEventListener(process, 'SIGINT', () => { this.kill(); process.exit(130); }));\n    if (handleSIGTERM)\n      this._listeners.push(helper.addEventListener(process, 'SIGTERM', this.close.bind(this)));\n    if (handleSIGHUP)\n      this._listeners.push(helper.addEventListener(process, 'SIGHUP', this.close.bind(this)));\n  }\n\n  /**\n   * @return {Promise}\n   */\n  close() {\n    if (this._closed)\n      return Promise.resolve();\n    helper.removeEventListeners(this._listeners);\n    if (this._tempDirectory) {\n      this.kill();\n    } else if (this.connection) {\n      // Attempt to close the browser gracefully\n      this.connection.send('Browser.close').catch(error => {\n        debugError(error);\n        this.kill();\n      });\n    }\n    return this._processClosing;\n  }\n\n  // This function has to be sync to be used as 'exit' event handler.\n  kill() {\n    helper.removeEventListeners(this._listeners);\n    if (this.proc && this.proc.pid && !this.proc.killed && !this._closed) {\n      try {\n        if (process.platform === 'win32')\n          childProcess.execSync(`taskkill /pid ${this.proc.pid} /T /F`);\n        else\n          process.kill(-this.proc.pid, 'SIGKILL');\n      } catch (error) {\n        // the process might have already stopped\n      }\n    }\n    // Attempt to remove temporary profile directory to avoid littering.\n    try {\n      removeFolder.sync(this._tempDirectory);\n    } catch (error) { }\n  }\n\n  /**\n   * @param {!({usePipe?: boolean, timeout: number, slowMo: number, preferredRevision: string})} options\n   *\n   * @return {!Promise<!Connection>}\n   */\n  async setupConnection(options) {\n    const {\n      usePipe,\n      timeout,\n      slowMo,\n      preferredRevision\n    } = options;\n    if (!usePipe) {\n      const browserWSEndpoint = await waitForWSEndpoint(this.proc, timeout, preferredRevision);\n      const transport = await WebSocketTransport.create(browserWSEndpoint);\n      this.connection = new Connection(browserWSEndpoint, transport, slowMo);\n    } else {\n      const transport = new PipeTransport(/** @type {!NodeJS.WritableStream} */(this.proc.stdio[3]), /** @type {!NodeJS.ReadableStream} */ (this.proc.stdio[4]));\n      this.connection = new Connection('', transport, slowMo);\n    }\n    return this.connection;\n  }\n}\n\n/**\n * @implements {!Puppeteer.ProductLauncher}\n */\nclass ChromeLauncher {\n  /**\n   * @param {string} projectRoot\n   * @param {string} preferredRevision\n   * @param {boolean} isPuppeteerCore\n   */\n  constructor(projectRoot, preferredRevision, isPuppeteerCore) {\n    this._projectRoot = projectRoot;\n    this._preferredRevision = preferredRevision;\n    this._isPuppeteerCore = isPuppeteerCore;\n  }\n\n  /**\n   * @param {!(Launcher.LaunchOptions & Launcher.ChromeArgOptions & Launcher.BrowserOptions)=} options\n   * @return {!Promise<!Browser>}\n   */\n  async launch(options = {}) {\n    const {\n      ignoreDefaultArgs = false,\n      args = [],\n      dumpio = false,\n      executablePath = null,\n      pipe = false,\n      env = process.env,\n      handleSIGINT = true,\n      handleSIGTERM = true,\n      handleSIGHUP = true,\n      ignoreHTTPSErrors = false,\n      defaultViewport = {width: 800, height: 600},\n      slowMo = 0,\n      timeout = 30000\n    } = options;\n\n    const profilePath = path.join(os.tmpdir(), 'puppeteer_dev_chrome_profile-');\n    const chromeArguments = [];\n    if (!ignoreDefaultArgs)\n      chromeArguments.push(...this.defaultArgs(options));\n    else if (Array.isArray(ignoreDefaultArgs))\n      chromeArguments.push(...this.defaultArgs(options).filter(arg => !ignoreDefaultArgs.includes(arg)));\n    else\n      chromeArguments.push(...args);\n\n    let temporaryUserDataDir = null;\n\n    if (!chromeArguments.some(argument => argument.startsWith('--remote-debugging-')))\n      chromeArguments.push(pipe ? '--remote-debugging-pipe' : '--remote-debugging-port=0');\n    if (!chromeArguments.some(arg => arg.startsWith('--user-data-dir'))) {\n      temporaryUserDataDir = await mkdtempAsync(profilePath);\n      chromeArguments.push(`--user-data-dir=${temporaryUserDataDir}`);\n    }\n\n    let chromeExecutable = executablePath;\n    if (!executablePath) {\n      const {missingText, executablePath} = resolveExecutablePath(this);\n      if (missingText)\n        throw new Error(missingText);\n      chromeExecutable = executablePath;\n    }\n\n    const usePipe = chromeArguments.includes('--remote-debugging-pipe');\n    const runner = new BrowserRunner(chromeExecutable, chromeArguments, temporaryUserDataDir);\n    runner.start({handleSIGHUP, handleSIGTERM, handleSIGINT, dumpio, env, pipe: usePipe});\n\n    try {\n      const connection = await runner.setupConnection({usePipe, timeout, slowMo, preferredRevision: this._preferredRevision});\n      const browser = await Browser.create(connection, [], ignoreHTTPSErrors, defaultViewport, runner.proc, runner.close.bind(runner));\n      await browser.waitForTarget(t => t.type() === 'page');\n      return browser;\n    } catch (error) {\n      runner.kill();\n      throw error;\n    }\n  }\n\n  /**\n   * @param {!Launcher.ChromeArgOptions=} options\n   * @return {!Array<string>}\n   */\n  defaultArgs(options = {}) {\n    const chromeArguments = [\n      '--disable-background-networking',\n      '--enable-features=NetworkService,NetworkServiceInProcess',\n      '--disable-background-timer-throttling',\n      '--disable-backgrounding-occluded-windows',\n      '--disable-breakpad',\n      '--disable-client-side-phishing-detection',\n      '--disable-component-extensions-with-background-pages',\n      '--disable-default-apps',\n      '--disable-dev-shm-usage',\n      '--disable-extensions',\n      '--disable-features=TranslateUI',\n      '--disable-hang-monitor',\n      '--disable-ipc-flooding-protection',\n      '--disable-popup-blocking',\n      '--disable-prompt-on-repost',\n      '--disable-renderer-backgrounding',\n      '--disable-sync',\n      '--force-color-profile=srgb',\n      '--metrics-recording-only',\n      '--no-first-run',\n      '--enable-automation',\n      '--password-store=basic',\n      '--use-mock-keychain',\n    ];\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir = null\n    } = options;\n    if (userDataDir)\n      chromeArguments.push(`--user-data-dir=${userDataDir}`);\n    if (devtools)\n      chromeArguments.push('--auto-open-devtools-for-tabs');\n    if (headless) {\n      chromeArguments.push(\n          '--headless',\n          '--hide-scrollbars',\n          '--mute-audio'\n      );\n    }\n    if (args.every(arg => arg.startsWith('-')))\n      chromeArguments.push('about:blank');\n    chromeArguments.push(...args);\n    return chromeArguments;\n  }\n\n  /**\n   * @return {string}\n   */\n  executablePath() {\n    return resolveExecutablePath(this).executablePath;\n  }\n\n  /**\n  * @return {string}\n  */\n  get product() {\n    return 'chrome';\n  }\n\n  /**\n   * @param {!(Launcher.BrowserOptions & {browserWSEndpoint?: string, browserURL?: string, transport?: !Puppeteer.ConnectionTransport})} options\n   * @return {!Promise<!Browser>}\n   */\n  async connect(options) {\n    const {\n      browserWSEndpoint,\n      browserURL,\n      ignoreHTTPSErrors = false,\n      defaultViewport = {width: 800, height: 600},\n      transport,\n      slowMo = 0,\n    } = options;\n\n    assert(Number(!!browserWSEndpoint) + Number(!!browserURL) + Number(!!transport) === 1, 'Exactly one of browserWSEndpoint, browserURL or transport must be passed to puppeteer.connect');\n\n    let connection = null;\n    if (transport) {\n      connection = new Connection('', transport, slowMo);\n    } else if (browserWSEndpoint) {\n      const connectionTransport = await WebSocketTransport.create(browserWSEndpoint);\n      connection = new Connection(browserWSEndpoint, connectionTransport, slowMo);\n    } else if (browserURL) {\n      const connectionURL = await getWSEndpoint(browserURL);\n      const connectionTransport = await WebSocketTransport.create(connectionURL);\n      connection = new Connection(connectionURL, connectionTransport, slowMo);\n    }\n\n    const {browserContextIds} = await connection.send('Target.getBrowserContexts');\n    return Browser.create(connection, browserContextIds, ignoreHTTPSErrors, defaultViewport, null, () => connection.send('Browser.close').catch(debugError));\n  }\n\n}\n\n/**\n * @implements {!Puppeteer.ProductLauncher}\n */\nclass FirefoxLauncher {\n  /**\n   * @param {string} projectRoot\n   * @param {string} preferredRevision\n   * @param {boolean} isPuppeteerCore\n   */\n  constructor(projectRoot, preferredRevision, isPuppeteerCore) {\n    this._projectRoot = projectRoot;\n    this._preferredRevision = preferredRevision;\n    this._isPuppeteerCore = isPuppeteerCore;\n  }\n\n  /**\n   * @param {!(Launcher.LaunchOptions & Launcher.ChromeArgOptions & Launcher.BrowserOptions & {extraPrefsFirefox?: !object})=} options\n   * @return {!Promise<!Browser>}\n   */\n  async launch(options = {}) {\n    const {\n      ignoreDefaultArgs = false,\n      args = [],\n      dumpio = false,\n      executablePath = null,\n      pipe = false,\n      env = process.env,\n      handleSIGINT = true,\n      handleSIGTERM = true,\n      handleSIGHUP = true,\n      ignoreHTTPSErrors = false,\n      defaultViewport = {width: 800, height: 600},\n      slowMo = 0,\n      timeout = 30000,\n      extraPrefsFirefox = {}\n    } = options;\n\n    const firefoxArguments = [];\n    if (!ignoreDefaultArgs)\n      firefoxArguments.push(...this.defaultArgs(options));\n    else if (Array.isArray(ignoreDefaultArgs))\n      firefoxArguments.push(...this.defaultArgs(options).filter(arg => !ignoreDefaultArgs.includes(arg)));\n    else\n      firefoxArguments.push(...args);\n\n    let temporaryUserDataDir = null;\n\n    if (!firefoxArguments.includes('-profile') && !firefoxArguments.includes('--profile')) {\n      temporaryUserDataDir = await this._createProfile(extraPrefsFirefox);\n      firefoxArguments.push('--profile');\n      firefoxArguments.push(temporaryUserDataDir);\n    }\n\n    let executable = executablePath;\n    if (!executablePath) {\n      const {missingText, executablePath} = resolveExecutablePath(this);\n      if (missingText)\n        throw new Error(missingText);\n      executable = executablePath;\n    }\n\n    const runner = new BrowserRunner(executable, firefoxArguments, temporaryUserDataDir);\n    runner.start({handleSIGHUP, handleSIGTERM, handleSIGINT, dumpio, env, pipe});\n\n    try {\n      const connection = await runner.setupConnection({usePipe: pipe, timeout, slowMo, preferredRevision: this._preferredRevision});\n      const browser = await Browser.create(connection, [], ignoreHTTPSErrors, defaultViewport, runner.proc, runner.close.bind(runner));\n      await browser.waitForTarget(t => t.type() === 'page');\n      return browser;\n    } catch (error) {\n      runner.kill();\n      throw error;\n    }\n  }\n\n  /**\n   * @param {!(Launcher.BrowserOptions & {browserWSEndpoint?: string, browserURL?: string, transport?: !Puppeteer.ConnectionTransport})} options\n   * @return {!Promise<!Browser>}\n   */\n  async connect(options) {\n    const {\n      browserWSEndpoint,\n      browserURL,\n      ignoreHTTPSErrors = false,\n      defaultViewport = {width: 800, height: 600},\n      transport,\n      slowMo = 0,\n    } = options;\n\n    assert(Number(!!browserWSEndpoint) + Number(!!browserURL) + Number(!!transport) === 1, 'Exactly one of browserWSEndpoint, browserURL or transport must be passed to puppeteer.connect');\n\n    let connection = null;\n    if (transport) {\n      connection = new Connection('', transport, slowMo);\n    } else if (browserWSEndpoint) {\n      const connectionTransport = await WebSocketTransport.create(browserWSEndpoint);\n      connection = new Connection(browserWSEndpoint, connectionTransport, slowMo);\n    } else if (browserURL) {\n      const connectionURL = await getWSEndpoint(browserURL);\n      const connectionTransport = await WebSocketTransport.create(connectionURL);\n      connection = new Connection(connectionURL, connectionTransport, slowMo);\n    }\n\n    const {browserContextIds} = await connection.send('Target.getBrowserContexts');\n    return Browser.create(connection, browserContextIds, ignoreHTTPSErrors, defaultViewport, null, () => connection.send('Browser.close').catch(debugError));\n  }\n\n  /**\n   * @return {string}\n   */\n  executablePath() {\n    const executablePath = process.env.PUPPETEER_EXECUTABLE_PATH || process.env.npm_config_puppeteer_executable_path || process.env.npm_package_config_puppeteer_executable_path;\n    // TODO get resolveExecutablePath working for Firefox\n    if (!executablePath)\n      throw new Error('Please set PUPPETEER_EXECUTABLE_PATH to a Firefox binary.');\n    return executablePath;\n  }\n\n  /**\n   * @return {string}\n   */\n  get product() {\n    return 'firefox';\n  }\n\n  /**\n   * @param {!Launcher.ChromeArgOptions=} options\n   * @return {!Array<string>}\n   */\n  defaultArgs(options = {}) {\n    const firefoxArguments = [\n      '--remote-debugging-port=0',\n      '--no-remote',\n      '--foreground',\n    ];\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir = null\n    } = options;\n    if (userDataDir) {\n      firefoxArguments.push('--profile');\n      firefoxArguments.push(userDataDir);\n    }\n    if (headless)\n      firefoxArguments.push('--headless');\n    if (devtools)\n      firefoxArguments.push('--devtools');\n    if (args.every(arg => arg.startsWith('-')))\n      firefoxArguments.push('about:blank');\n    firefoxArguments.push(...args);\n    return firefoxArguments;\n  }\n\n  /**\n   * @param {!Object=} extraPrefs\n   * @return {!Promise<string>}\n   */\n  async _createProfile(extraPrefs) {\n    const profilePath = await mkdtempAsync(path.join(os.tmpdir(), 'puppeteer_dev_firefox_profile-'));\n    const prefsJS = [];\n    const userJS = [];\n    const server = 'dummy.test';\n    const defaultPreferences = {\n      // Make sure Shield doesn't hit the network.\n      'app.normandy.api_url': '',\n      // Disable Firefox old build background check\n      'app.update.checkInstallTime': false,\n      // Disable automatically upgrading Firefox\n      'app.update.disabledForTesting': true,\n\n      // Increase the APZ content response timeout to 1 minute\n      'apz.content_response_timeout': 60000,\n\n      // Prevent various error message on the console\n      // jest-puppeteer asserts that no error message is emitted by the console\n      'browser.contentblocking.features.standard': '-tp,tpPrivate,cookieBehavior0,-cm,-fp',\n\n\n      // Enable the dump function: which sends messages to the system\n      // console\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1543115\n      'browser.dom.window.dump.enabled': true,\n      // Disable topstories\n      'browser.newtabpage.activity-stream.feeds.section.topstories': false,\n      // Always display a blank page\n      'browser.newtabpage.enabled': false,\n      // Background thumbnails in particular cause grief: and disabling\n      // thumbnails in general cannot hurt\n      'browser.pagethumbnails.capturing_disabled': true,\n\n      // Disable safebrowsing components.\n      'browser.safebrowsing.blockedURIs.enabled': false,\n      'browser.safebrowsing.downloads.enabled': false,\n      'browser.safebrowsing.malware.enabled': false,\n      'browser.safebrowsing.passwords.enabled': false,\n      'browser.safebrowsing.phishing.enabled': false,\n\n      // Disable updates to search engines.\n      'browser.search.update': false,\n      // Do not restore the last open set of tabs if the browser has crashed\n      'browser.sessionstore.resume_from_crash': false,\n      // Skip check for default browser on startup\n      'browser.shell.checkDefaultBrowser': false,\n\n      // Disable newtabpage\n      'browser.startup.homepage': 'about:blank',\n      // Do not redirect user when a milstone upgrade of Firefox is detected\n      'browser.startup.homepage_override.mstone': 'ignore',\n      // Start with a blank page about:blank\n      'browser.startup.page': 0,\n\n      // Do not allow background tabs to be zombified on Android: otherwise for\n      // tests that open additional tabs: the test harness tab itself might get\n      // unloaded\n      'browser.tabs.disableBackgroundZombification': false,\n      // Do not warn when closing all other open tabs\n      'browser.tabs.warnOnCloseOtherTabs': false,\n      // Do not warn when multiple tabs will be opened\n      'browser.tabs.warnOnOpen': false,\n\n      // Disable the UI tour.\n      'browser.uitour.enabled': false,\n      // Turn off search suggestions in the location bar so as not to trigger\n      // network connections.\n      'browser.urlbar.suggest.searches': false,\n      // Disable first run splash page on Windows 10\n      'browser.usedOnWindows10.introURL': '',\n      // Do not warn on quitting Firefox\n      'browser.warnOnQuit': false,\n\n      // Do not show datareporting policy notifications which can\n      // interfere with tests\n      'datareporting.healthreport.about.reportUrl': `http://${server}/dummy/abouthealthreport/`,\n      'datareporting.healthreport.documentServerURI': `http://${server}/dummy/healthreport/`,\n      'datareporting.healthreport.logging.consoleEnabled': false,\n      'datareporting.healthreport.service.enabled': false,\n      'datareporting.healthreport.service.firstRun': false,\n      'datareporting.healthreport.uploadEnabled': false,\n      'datareporting.policy.dataSubmissionEnabled': false,\n      'datareporting.policy.dataSubmissionPolicyAccepted': false,\n      'datareporting.policy.dataSubmissionPolicyBypassNotification': true,\n\n      // DevTools JSONViewer sometimes fails to load dependencies with its require.js.\n      // This doesn't affect Puppeteer but spams console (Bug 1424372)\n      'devtools.jsonview.enabled': false,\n\n      // Disable popup-blocker\n      'dom.disable_open_during_load': false,\n\n      // Enable the support for File object creation in the content process\n      // Required for |Page.setFileInputFiles| protocol method.\n      'dom.file.createInChild': true,\n\n      // Disable the ProcessHangMonitor\n      'dom.ipc.reportProcessHangs': false,\n\n      // Disable slow script dialogues\n      'dom.max_chrome_script_run_time': 0,\n      'dom.max_script_run_time': 0,\n\n      // Only load extensions from the application and user profile\n      // AddonManager.SCOPE_PROFILE + AddonManager.SCOPE_APPLICATION\n      'extensions.autoDisableScopes': 0,\n      'extensions.enabledScopes': 5,\n\n      // Disable metadata caching for installed add-ons by default\n      'extensions.getAddons.cache.enabled': false,\n\n      // Disable installing any distribution extensions or add-ons.\n      'extensions.installDistroAddons': false,\n\n      // Disabled screenshots extension\n      'extensions.screenshots.disabled': true,\n\n      // Turn off extension updates so they do not bother tests\n      'extensions.update.enabled': false,\n\n      // Turn off extension updates so they do not bother tests\n      'extensions.update.notifyUser': false,\n\n      // Make sure opening about:addons will not hit the network\n      'extensions.webservice.discoverURL': `http://${server}/dummy/discoveryURL`,\n\n      // Allow the application to have focus even it runs in the background\n      'focusmanager.testmode': true,\n      // Disable useragent updates\n      'general.useragent.updates.enabled': false,\n      // Always use network provider for geolocation tests so we bypass the\n      // macOS dialog raised by the corelocation provider\n      'geo.provider.testing': true,\n      // Do not scan Wifi\n      'geo.wifi.scan': false,\n      // No hang monitor\n      'hangmonitor.timeout': 0,\n      // Show chrome errors and warnings in the error console\n      'javascript.options.showInConsole': true,\n\n      // Disable download and usage of OpenH264: and Widevine plugins\n      'media.gmp-manager.updateEnabled': false,\n      // Prevent various error message on the console\n      // jest-puppeteer asserts that no error message is emitted by the console\n      'network.cookie.cookieBehavior': 0,\n\n      // Do not prompt for temporary redirects\n      'network.http.prompt-temp-redirect': false,\n\n      // Disable speculative connections so they are not reported as leaking\n      // when they are hanging around\n      'network.http.speculative-parallel-limit': 0,\n\n      // Do not automatically switch between offline and online\n      'network.manage-offline-status': false,\n\n      // Make sure SNTP requests do not hit the network\n      'network.sntp.pools': server,\n\n      // Disable Flash.\n      'plugin.state.flash': 0,\n\n      'privacy.trackingprotection.enabled': false,\n\n      // Enable Remote Agent\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1544393\n      'remote.enabled': true,\n\n      // Don't do network connections for mitm priming\n      'security.certerrors.mitm.priming.enabled': false,\n      // Local documents have access to all other local documents,\n      // including directory listings\n      'security.fileuri.strict_origin_policy': false,\n      // Do not wait for the notification button security delay\n      'security.notification_enable_delay': 0,\n\n      // Ensure blocklist updates do not hit the network\n      'services.settings.server': `http://${server}/dummy/blocklist/`,\n\n      // Do not automatically fill sign-in forms with known usernames and\n      // passwords\n      'signon.autofillForms': false,\n      // Disable password capture, so that tests that include forms are not\n      // influenced by the presence of the persistent doorhanger notification\n      'signon.rememberSignons': false,\n\n      // Disable first-run welcome page\n      'startup.homepage_welcome_url': 'about:blank',\n\n      // Disable first-run welcome page\n      'startup.homepage_welcome_url.additional': '',\n\n      // Disable browser animations (tabs, fullscreen, sliding alerts)\n      'toolkit.cosmeticAnimations.enabled': false,\n\n      // We want to collect telemetry, but we don't want to send in the results\n      'toolkit.telemetry.server': `https://${server}/dummy/telemetry/`,\n      // Prevent starting into safe mode after application crashes\n      'toolkit.startup.max_resumed_crashes': -1,\n\n    };\n\n    Object.assign(defaultPreferences, extraPrefs);\n    for (const [key, value] of Object.entries(defaultPreferences))\n      userJS.push(`user_pref(${JSON.stringify(key)}, ${JSON.stringify(value)});`);\n    await writeFileAsync(path.join(profilePath, 'user.js'), userJS.join('\\n'));\n    await writeFileAsync(path.join(profilePath, 'prefs.js'), prefsJS.join('\\n'));\n    return profilePath;\n  }\n}\n\n\n/**\n * @param {!Puppeteer.ChildProcess} browserProcess\n * @param {number} timeout\n * @param {string} preferredRevision\n * @return {!Promise<string>}\n */\nfunction waitForWSEndpoint(browserProcess, timeout, preferredRevision) {\n  return new Promise((resolve, reject) => {\n    const rl = readline.createInterface({ input: browserProcess.stderr });\n    let stderr = '';\n    const listeners = [\n      helper.addEventListener(rl, 'line', onLine),\n      helper.addEventListener(rl, 'close', () => onClose()),\n      helper.addEventListener(browserProcess, 'exit', () => onClose()),\n      helper.addEventListener(browserProcess, 'error', error => onClose(error))\n    ];\n    const timeoutId = timeout ? setTimeout(onTimeout, timeout) : 0;\n\n    /**\n     * @param {!Error=} error\n     */\n    function onClose(error) {\n      cleanup();\n      reject(new Error([\n        'Failed to launch the browser process!' + (error ? ' ' + error.message : ''),\n        stderr,\n        '',\n        'TROUBLESHOOTING: https://github.com/puppeteer/puppeteer/blob/master/docs/troubleshooting.md',\n        '',\n      ].join('\\n')));\n    }\n\n    function onTimeout() {\n      cleanup();\n      reject(new TimeoutError(`Timed out after ${timeout} ms while trying to connect to the browser! Only Chrome at revision r${preferredRevision} is guaranteed to work.`));\n    }\n\n    /**\n     * @param {string} line\n     */\n    function onLine(line) {\n      stderr += line + '\\n';\n      const match = line.match(/^DevTools listening on (ws:\\/\\/.*)$/);\n      if (!match)\n        return;\n      cleanup();\n      resolve(match[1]);\n    }\n\n    function cleanup() {\n      if (timeoutId)\n        clearTimeout(timeoutId);\n      helper.removeEventListeners(listeners);\n    }\n  });\n}\n\n/**\n * @param {string} browserURL\n * @return {!Promise<string>}\n */\nfunction getWSEndpoint(browserURL) {\n  let resolve, reject;\n  const promise = new Promise((res, rej) => { resolve = res; reject = rej; });\n\n  const endpointURL = URL.resolve(browserURL, '/json/version');\n  const protocol = endpointURL.startsWith('https') ? https : http;\n  const requestOptions = Object.assign(URL.parse(endpointURL), { method: 'GET' });\n  const request = protocol.request(requestOptions, res => {\n    let data = '';\n    if (res.statusCode !== 200) {\n      // Consume response data to free up memory.\n      res.resume();\n      reject(new Error('HTTP ' + res.statusCode));\n      return;\n    }\n    res.setEncoding('utf8');\n    res.on('data', chunk => data += chunk);\n    res.on('end', () => resolve(JSON.parse(data).webSocketDebuggerUrl));\n  });\n\n  request.on('error', reject);\n  request.end();\n\n  return promise.catch(e => {\n    e.message = `Failed to fetch browser webSocket url from ${endpointURL}: ` + e.message;\n    throw e;\n  });\n}\n\n/**\n * @param {ChromeLauncher|FirefoxLauncher} launcher\n *\n * @return {{executablePath: string, missingText: ?string}}\n */\nfunction resolveExecutablePath(launcher) {\n  // puppeteer-core doesn't take into account PUPPETEER_* env variables.\n  if (!launcher._isPuppeteerCore) {\n    const executablePath = process.env.PUPPETEER_EXECUTABLE_PATH || process.env.npm_config_puppeteer_executable_path || process.env.npm_package_config_puppeteer_executable_path;\n    if (executablePath) {\n      const missingText = !fs.existsSync(executablePath) ? 'Tried to use PUPPETEER_EXECUTABLE_PATH env variable to launch browser but did not find any executable at: ' + executablePath : null;\n      return { executablePath, missingText };\n    }\n  }\n  const browserFetcher = new BrowserFetcher(launcher._projectRoot);\n  if (!launcher._isPuppeteerCore) {\n    const revision = process.env['PUPPETEER_CHROMIUM_REVISION'];\n    if (revision) {\n      const revisionInfo = browserFetcher.revisionInfo(revision);\n      const missingText = !revisionInfo.local ? 'Tried to use PUPPETEER_CHROMIUM_REVISION env variable to launch browser but did not find executable at: ' + revisionInfo.executablePath : null;\n      return {executablePath: revisionInfo.executablePath, missingText};\n    }\n  }\n  const revisionInfo = browserFetcher.revisionInfo(launcher._preferredRevision);\n  const missingText = !revisionInfo.local ? `Browser is not downloaded. Run \"npm install\" or \"yarn install\"` : null;\n  return {executablePath: revisionInfo.executablePath, missingText};\n}\n\n/**\n * @param {string} projectRoot\n * @param {string} preferredRevision\n * @param {boolean} isPuppeteerCore\n * @param {string=} product\n * @return {!Puppeteer.ProductLauncher}\n */\nfunction Launcher(projectRoot, preferredRevision, isPuppeteerCore, product) {\n  // puppeteer-core doesn't take into account PUPPETEER_* env variables.\n  if (!product && !isPuppeteerCore)\n    product = process.env.PUPPETEER_PRODUCT || process.env.npm_config_puppeteer_product || process.env.npm_package_config_puppeteer_product;\n  switch (product) {\n    case 'firefox':\n      return new FirefoxLauncher(projectRoot, preferredRevision, isPuppeteerCore);\n    case 'chrome':\n    default:\n      return new ChromeLauncher(projectRoot, preferredRevision, isPuppeteerCore);\n  }\n}\n\n\n/**\n * @typedef {Object} Launcher.ChromeArgOptions\n * @property {boolean=} headless\n * @property {Array<string>=} args\n * @property {string=} userDataDir\n * @property {boolean=} devtools\n */\n\n/**\n * @typedef {Object} Launcher.LaunchOptions\n * @property {string=} executablePath\n * @property {boolean|Array<string>=} ignoreDefaultArgs\n * @property {boolean=} handleSIGINT\n * @property {boolean=} handleSIGTERM\n * @property {boolean=} handleSIGHUP\n * @property {number=} timeout\n * @property {boolean=} dumpio\n * @property {!Object<string, string | undefined>=} env\n * @property {boolean=} pipe\n */\n\n/**\n * @typedef {Object} Launcher.BrowserOptions\n * @property {boolean=} ignoreHTTPSErrors\n * @property {(?Puppeteer.Viewport)=} defaultViewport\n * @property {number=} slowMo\n */\n\n\nmodule.exports = Launcher;\n"]},"metadata":{},"sourceType":"script"}