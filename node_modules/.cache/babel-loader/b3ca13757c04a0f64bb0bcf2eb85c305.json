{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/ProfilePage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserStreams } from '../actions/userStreamActions';\nimport Profile from '../components/Profile';\nimport { Auth0Context } from \"../react-auth0-spa\";\nimport { Fragment } from \"react\";\n\nclass ProfilePage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.fetchUserStreams = id => {\n      this.setState({\n        userID: id\n      });\n    };\n\n    this.handleClick = () => {\n      let selectedStreams = document.getElementsByClassName(\"true\");\n      let unSelectedStreams = document.getElementsByClassName(\"false\");\n\n      for (let i = 0, len = selectedStreams.length; i < len; i++) {\n        selectedStreams[i].style.borderStyle = 'inset';\n      }\n\n      for (let i = 0, len = unSelectedStreams.length; i < len; i++) {\n        unSelectedStreams[i].style.borderStyle = 'outset';\n        unSelectedStreams[i].background = \"lightgray\";\n      }\n\n      this.setState({\n        streamEdit: true\n      });\n    };\n\n    this.handleLoading = id => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"Loading Streams...\");\n      } else {\n        return React.createElement(Profile, {\n          userID: id,\n          userStreams: this.props.userStreams,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchUserStreams(this.props.userId);\n  }\n\n  componentDidUpdate(prevProps) {}\n\n  render() {\n    const {\n      loading,\n      user\n    } = this.context;\n    const {\n      isAuthenticated,\n      loginWithRedirect\n    } = this.context;\n\n    if (loading || !user) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: user.picture,\n      alt: \"Profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Hi, \", user.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"email: \", user.email), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Edit Streams\"), this.handleLoading(this.props.userId));\n  }\n\n}\n\nProfilePage.contextType = Auth0Context;\n\nconst mapDispatchToProps = state => {\n  return {\n    userStreams: state.StreamsReducer.streams,\n    loading: state.StreamsReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  fetchUserStreams\n})(ProfilePage);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/ProfilePage.js"],"names":["React","Component","connect","fetchUserStreams","Profile","Auth0Context","Fragment","ProfilePage","id","setState","userID","handleClick","selectedStreams","document","getElementsByClassName","unSelectedStreams","i","len","length","style","borderStyle","background","streamEdit","handleLoading","props","loading","userStreams","componentDidMount","userId","componentDidUpdate","prevProps","render","user","context","isAuthenticated","loginWithRedirect","picture","name","email","contextType","mapDispatchToProps","state","StreamsReducer","streams"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserStreams } from '../actions/userStreamActions'\nimport Profile from '../components/Profile';\nimport { Auth0Context } from \"../react-auth0-spa\";\nimport { Fragment } from \"react\";\n\n\n\nclass ProfilePage extends Component {\n static contextType = Auth0Context;  \n  \n  componentDidMount() {\n    this.props.fetchUserStreams(this.props.userId)\n  }\n\n  componentDidUpdate(prevProps){\n  }\n\n  fetchUserStreams = (id) => {\n    this.setState({\n      userID: id\n    })\n  }\n\n  handleClick = () => {\n    let selectedStreams = document.getElementsByClassName(\"true\");\n    let unSelectedStreams = document.getElementsByClassName(\"false\");\n\n    for (let i = 0, len = selectedStreams.length; i < len; i++) {\n      selectedStreams[i].style.borderStyle = 'inset'\n    }\n\n    for (let i = 0, len = unSelectedStreams.length; i < len; i++) {\n      unSelectedStreams[i].style.borderStyle = 'outset';\n      unSelectedStreams[i].background = \"lightgray\"; \n    }\n\n    this.setState({\n      streamEdit: true\n    })            \n\n  } \n\n  handleLoading = (id) => {\n    if(this.props.loading) {\n      return <div>Loading Streams...</div>\n    } else {\n      return <Profile userID={id} userStreams={this.props.userStreams}/>\n    }\n  }\n\n  render() {\n    const { loading, user } = this.context;\n    const { isAuthenticated, loginWithRedirect} = this.context;\n    \n    if (loading || !user) {\n      return <div>Loading...</div>;\n    }\n\n    return ( \n    \t<div className= \"profile\">\n        <img src={user.picture} alt=\"Profile\" />\n        <h2>Hi, {user.name}</h2>\n        <p>email: {user.email}</p>\n        <button onClick={this.handleClick}>Edit Streams</button>\n        {this.handleLoading(this.props.userId)}\n      </div>        \n\t\t\t\n \t);\n  }\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    userStreams: state.StreamsReducer.streams,\n    loading: state.StreamsReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {fetchUserStreams})(ProfilePage)"]},"metadata":{},"sourceType":"module"}