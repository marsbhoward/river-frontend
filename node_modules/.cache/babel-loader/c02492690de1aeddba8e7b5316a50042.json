{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/ProfilePage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserStreams } from '../actions/userStreamActions';\nimport Profile from '../components/Profile';\nimport { Auth0Context } from \"../react-auth0-spa\";\n\nclass ProfilePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchUserStreams = () => {\n      this.props.fetchUserStreams();\n    };\n\n    this.handler = id => {\n      this.setState({\n        currentUserId: id\n      });\n    };\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \"Loading Profile...\");\n      } else {\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"Hi, \", user.name));\n      }\n    };\n\n    this.handler = this.handler.bind(this);\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps) {}\n\n  render() {\n    const {\n      loading,\n      user\n    } = this.context;\n\n    if (loading || !user) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"Profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.handleLoading());\n  }\n\n}\n\nProfilePage.contextType = Auth0Context;\n\nconst mapDispatchToProps = state => {\n  return {\n    userStreams: state.StreamsReducer.streams,\n    loading: state.StreamsReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  fetchUserStreams\n})(ProfilePage);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/ProfilePage.js"],"names":["React","Component","connect","fetchUserStreams","Profile","Auth0Context","ProfilePage","constructor","props","handler","id","setState","currentUserId","handleLoading","loading","user","name","bind","componentDidMount","componentDidUpdate","prevProps","render","context","contextType","mapDispatchToProps","state","userStreams","StreamsReducer","streams"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAGlCM,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAWlBL,gBAXkB,GAWC,MAAM;AACxB,WAAKK,KAAL,CAAWL,gBAAX;AACA,KAbiB;;AAAA,SAelBM,OAfkB,GAePC,EAAD,IAAQ;AAChB,WAAKC,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAEF;AADH,OAAd;AAGD,KAnBiB;;AAAA,SAqBlBG,aArBkB,GAqBF,MAAM;AACpB,UAAG,KAAKL,KAAL,CAAWM,OAAd,EACA;AACE,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACD,OAHD,MAIK;AACH,eACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAASC,IAAI,CAACC,IAAd,CADA,CADF;AAKD;AACF,KAjCiB;;AAEhB,SAAKP,OAAL,GAAe,KAAKA,OAAL,CAAaQ,IAAb,CAAkB,IAAlB,CAAf;AACD;;AAEDC,EAAAA,iBAAiB,GAAG,CACnB;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAW,CAC5B;;AA0BDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAoB,KAAKO,OAA/B;;AACA,QAAIR,OAAO,IAAI,CAACC,IAAhB,EAAsB;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,WACC;AAAK,MAAA,SAAS,EAAE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD,KAAKF,aAAL,EADC,CADD;AAKD;;AAjDiC;;AAA9BP,W,CACEiB,W,GAAclB,Y;;AAmDtB,MAAMmB,kBAAkB,GAAGC,KAAK,IAAI;AAClC,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACE,cAAN,CAAqBC,OAD7B;AAELd,IAAAA,OAAO,EAAEW,KAAK,CAACE,cAAN,CAAqBb;AAFzB,GAAP;AAID,CALD;;AAOA,eAAeZ,OAAO,CAACsB,kBAAD,EAAqB;AAACrB,EAAAA;AAAD,CAArB,CAAP,CAAgDG,WAAhD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserStreams } from '../actions/userStreamActions'\nimport Profile from '../components/Profile';\nimport { Auth0Context } from \"../react-auth0-spa\";\n\nclass ProfilePage extends Component {\n static contextType = Auth0Context;  \n\n  constructor(props){\n    super(props)\n    this.handler = this.handler.bind(this)\n  }\n  \n  componentDidMount() {\n  }\n\n  componentDidUpdate(prevProps){\n  }\n\n  fetchUserStreams = () => {\n  \tthis.props.fetchUserStreams()\n  }\n\n  handler = (id) => {\n    this.setState({\n      currentUserId: id,\n    })\n  }\n\n  handleLoading = () => {\n    if(this.props.loading) \n    {\n      return <div>Loading Profile...</div>\n    } \n    else {\n      return (\n        <Fragment>\n        <h2>Hi, {user.name}</h2>\n        </Fragment>\n      );\n    }\n  }\n\n  render() {\n    const { loading, user } = this.context;\n    if (loading || !user) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n    \t<div className= \"Profile\">\n\t\t\t{this.handleLoading()}\n\t\t</div>\t\t\t\n \t);\n  }\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    userStreams: state.StreamsReducer.streams,\n    loading: state.StreamsReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {fetchUserStreams})(ProfilePage)"]},"metadata":{},"sourceType":"module"}