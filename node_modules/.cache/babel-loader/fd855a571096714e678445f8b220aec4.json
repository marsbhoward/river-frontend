{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/ProfilePage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserStreams } from '../actions/userStreamActions';\nimport Profile from '../components/Profile';\nimport { Auth0Context } from \"../react-auth0-spa\";\nimport { Fragment } from \"react\";\n\nclass ProfilePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchUserStreams = () => {\n      this.props.fetchUserStreams();\n    };\n\n    this.handler = id => {\n      this.setState({\n        currentUserId: id\n      });\n    };\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"Loading Profile...\");\n      }\n    };\n\n    this.handler = this.handler.bind(this);\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps) {}\n\n  render() {\n    const {\n      loading,\n      user\n    } = this.context;\n\n    if (loading || !user) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"Profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Hi, \", user.name)));\n  }\n\n}\n\nProfilePage.contextType = Auth0Context;\n\nconst mapDispatchToProps = state => {\n  return {\n    userStreams: state.StreamsReducer.streams,\n    loading: state.StreamsReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  fetchUserStreams\n})(ProfilePage);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/ProfilePage.js"],"names":["React","Component","connect","fetchUserStreams","Profile","Auth0Context","Fragment","ProfilePage","constructor","props","handler","id","setState","currentUserId","handleLoading","loading","bind","componentDidMount","componentDidUpdate","prevProps","render","user","context","name","contextType","mapDispatchToProps","state","userStreams","StreamsReducer","streams"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAGlCO,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAWlBN,gBAXkB,GAWC,MAAM;AACxB,WAAKM,KAAL,CAAWN,gBAAX;AACA,KAbiB;;AAAA,SAelBO,OAfkB,GAePC,EAAD,IAAQ;AAChB,WAAKC,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAEF;AADH,OAAd;AAGD,KAnBiB;;AAAA,SAqBlBG,aArBkB,GAqBF,MAAM;AACpB,UAAG,KAAKL,KAAL,CAAWM,OAAd,EACA;AACE,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACD;AAEF,KA3BiB;;AAEhB,SAAKL,OAAL,GAAe,KAAKA,OAAL,CAAaM,IAAb,CAAkB,IAAlB,CAAf;AACD;;AAEDC,EAAAA,iBAAiB,GAAG,CACnB;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAW,CAC5B;;AAoBDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA,OAAF;AAAWM,MAAAA;AAAX,QAAoB,KAAKC,OAA/B;;AACA,QAAIP,OAAO,IAAI,CAACM,IAAhB,EAAsB;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,WACC;AAAK,MAAA,SAAS,EAAE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAASA,IAAI,CAACE,IAAd,CADA,CADH,CADD;AAOD;;AA7CiC;;AAA9BhB,W,CACEiB,W,GAAcnB,Y;;AA+CtB,MAAMoB,kBAAkB,GAAGC,KAAK,IAAI;AAClC,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACE,cAAN,CAAqBC,OAD7B;AAELd,IAAAA,OAAO,EAAEW,KAAK,CAACE,cAAN,CAAqBb;AAFzB,GAAP;AAID,CALD;;AAOA,eAAeb,OAAO,CAACuB,kBAAD,EAAqB;AAACtB,EAAAA;AAAD,CAArB,CAAP,CAAgDI,WAAhD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserStreams } from '../actions/userStreamActions'\nimport Profile from '../components/Profile';\nimport { Auth0Context } from \"../react-auth0-spa\";\nimport { Fragment } from \"react\";\n\n\nclass ProfilePage extends Component {\n static contextType = Auth0Context;  \n\n  constructor(props){\n    super(props)\n    this.handler = this.handler.bind(this)\n  }\n  \n  componentDidMount() {\n  }\n\n  componentDidUpdate(prevProps){\n  }\n\n  fetchUserStreams = () => {\n  \tthis.props.fetchUserStreams()\n  }\n\n  handler = (id) => {\n    this.setState({\n      currentUserId: id,\n    })\n  }\n\n  handleLoading = () => {\n    if(this.props.loading) \n    {\n      return <div>Loading Profile...</div>\n    } \n  \n  }\n\n  render() {\n    const { loading, user } = this.context;\n    if (loading || !user) {\n      return <div>Loading...</div>;\n    }\n\n    return (\n    \t<div className= \"Profile\">\n        <Fragment>\n        <h2>Hi, {user.name}</h2>\n        </Fragment>\n\t\t</div>\t\t\t\n \t);\n  }\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    userStreams: state.StreamsReducer.streams,\n    loading: state.StreamsReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {fetchUserStreams})(ProfilePage)"]},"metadata":{},"sourceType":"module"}