{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/MoviesPage.js\";\nimport React, { useState, useEffect } from 'react'; //import { connect } from 'react-redux';\n//import { fetchMovies } from '../actions/movieActions'\n\nimport MovieList from '../components/MovieList';\nimport { useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction MoviesPage(props) {\n  const movies = useSelector(state => state.movies);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const [clicked, setCliked] = useState('');\n  useEffect(() => {\n    if (location.state !== undefined) {\n      setCliked(location.state.clicked);\n    }\n\n    dispatch({\n      type: 'LOADING_MOVIES'\n    });\n    console.log(props); //props.fetchMovies(localStorage.currentStream)\n  }); //<MovieList streamID={props.handler} movieCards={props.movieCards} movieIds={props.movieIds} trailerID={props.trailerID} currentStream={props.currentStream}/>\n\n  function handleLoading() {\n    if (props.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Loading Movies...\");\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, movies);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"banner-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, localStorage.currentStreamName.toUpperCase()), handleLoading());\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies.sort(),\n    movieIds: state.MoviesReducer.ids,\n    loading: state.MoviesReducer.loading\n  };\n};\n\nexport default MoviesPage;","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/MoviesPage.js"],"names":["React","useState","useEffect","MovieList","useLocation","useSelector","useDispatch","MoviesPage","props","movies","state","dispatch","location","clicked","setCliked","undefined","type","console","log","handleLoading","loading","localStorage","currentStreamName","toUpperCase","mapDispatchToProps","movieCards","MoviesReducer","sort","movieIds","ids"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C,C,CACA;AACA;;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,SAASC,UAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAMC,MAAM,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,MAAhB,CAA1B;AACA,QAAME,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM,CAACS,OAAD,EAAUC,SAAV,IAAuBb,QAAQ,CAAC,EAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,QAAQ,CAACF,KAAT,KAAmBK,SAAvB,EAAiC;AAC/BD,MAAAA,SAAS,CAACF,QAAQ,CAACF,KAAT,CAAeG,OAAhB,CAAT;AACD;;AACDF,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ,EALc,CAOd;AACD,GARQ,CAAT,CAN0B,CAgB1B;;AACA,WAASW,aAAT,GAAyB;AACvB,QAAGX,KAAK,CAACY,OAAT,EAAkB;AAChB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACD,KAFD,MAEO;AACL,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGX,MADH,CADA;AAKD;AACF;;AAGC,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BY,YAAY,CAACC,iBAAb,CAA+BC,WAA/B,EAA3B,CADF,EAEGJ,aAAa,EAFhB,CADF;AAMD;;AAKH,MAAMK,kBAAkB,GAAGd,KAAK,IAAI;AAClC,SAAO;AACLe,IAAAA,UAAU,EAAEf,KAAK,CAACgB,aAAN,CAAoBjB,MAApB,CAA2BkB,IAA3B,EADP;AAELC,IAAAA,QAAQ,EAAElB,KAAK,CAACgB,aAAN,CAAoBG,GAFzB;AAGLT,IAAAA,OAAO,EAAEV,KAAK,CAACgB,aAAN,CAAoBN;AAHxB,GAAP;AAKD,CAND;;AAQA,eAAeb,UAAf","sourcesContent":["import React,{ useState, useEffect } from 'react';\n//import { connect } from 'react-redux';\n//import { fetchMovies } from '../actions/movieActions'\nimport MovieList from '../components/MovieList'\nimport { useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux'\n\nfunction MoviesPage (props) { \n  const movies = useSelector(state => state.movies);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const [clicked, setCliked] = useState('');  \n\n  useEffect(() => {\n    if (location.state !== undefined){\n      setCliked(location.state.clicked)\n    }\n    dispatch({type: 'LOADING_MOVIES'})\n    console.log(props)\n    \n    //props.fetchMovies(localStorage.currentStream)\n  });    \n\n  //<MovieList streamID={props.handler} movieCards={props.movieCards} movieIds={props.movieIds} trailerID={props.trailerID} currentStream={props.currentStream}/>\n  function handleLoading (){\n    if(props.loading) {\n      return <div>Loading Movies...</div>\n    } else {\n      return (\n      <div>\n        {movies}\n      </div>\n      )\n    }\n  }\n\n  \n    return (\n      <div className=\"App\">\n        <div className=\"banner-2\">{localStorage.currentStreamName.toUpperCase()}</div>\n        {handleLoading()}\n      </div>\n    );\n  }\n\n\n\n\nconst mapDispatchToProps = state => {\n  return {\n    movieCards: state.MoviesReducer.movies.sort(),\n    movieIds: state.MoviesReducer.ids,\n    loading: state.MoviesReducer.loading\n  }\n}\n\nexport default(MoviesPage)"]},"metadata":{},"sourceType":"module"}