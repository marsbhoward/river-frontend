{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/river-frontend/src/containers/InfoPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTrailers } from '../actions/trailerActions';\nimport MovieInfo from '../components/MovieInfo';\n\nclass InfoPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLoading = () => {\n      if (this.props.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, \"Loading Movies...\");\n      } else {\n        console.log(this.props.trailer);\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(MovieInfo, {\n          currentMovie: this.props.currentMovie,\n          trailer: this.props.trailer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchTrailers(this.props.currentMovie.Title);\n    console.log(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"banner-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.currentMovie.Title.toUpperCase()), this.handleLoading());\n  }\n\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    trailer: state.TrailersReducer.trailer,\n    loading: state.TrailersReducer.loading\n  };\n};\n\nexport default connect(mapDispatchToProps, {\n  fetchTrailers\n})(InfoPage);","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/containers/InfoPage.js"],"names":["React","Component","connect","fetchTrailers","MovieInfo","InfoPage","handleLoading","props","loading","console","log","trailer","currentMovie","componentDidMount","Title","render","toUpperCase","mapDispatchToProps","state","TrailersReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAS/BK,aAT+B,GASf,MAAM;AACpB,UAAG,KAAKC,KAAL,CAAWC,OAAd,EACA;AACE,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACD,OAHD,MAIK;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,OAAvB;AACA,eACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,oBAAC,SAAD;AAAW,UAAA,YAAY,EAAE,KAAKJ,KAAL,CAAWK,YAApC;AAAkD,UAAA,OAAO,EAAE,KAAKL,KAAL,CAAWI,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,CADD;AAKD;AACF,KAtB8B;AAAA;;AAE/BE,EAAAA,iBAAiB,GAAG;AAEpB,SAAKN,KAAL,CAAWJ,aAAX,CAAyB,KAAKI,KAAL,CAAWK,YAAX,CAAwBE,KAAjD;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AAEC;;AAiBDK,EAAAA,MAAM,GAAG;AACP,WACA;AAAK,MAAA,SAAS,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKR,KAAL,CAAWK,YAAX,CAAwBE,KAAxB,CAA8BE,WAA9B,EAA3B,CADD,EAEE,KAAKV,aAAL,EAFF,CADA;AAMD;;AA/B8B;;AAkCjC,MAAMW,kBAAkB,GAAGC,KAAK,IAAI;AAClC,SAAO;AACLP,IAAAA,OAAO,EAAEO,KAAK,CAACC,eAAN,CAAsBR,OAD1B;AAELH,IAAAA,OAAO,EAAEU,KAAK,CAACC,eAAN,CAAsBX;AAF1B,GAAP;AAID,CALD;;AAOA,eAAeN,OAAO,CAACe,kBAAD,EAAqB;AAACd,EAAAA;AAAD,CAArB,CAAP,CAA6CE,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTrailers } from '../actions/trailerActions'\nimport MovieInfo from '../components/MovieInfo';\n\nclass InfoPage extends Component {  \n  \n  componentDidMount() {\n  \n  this.props.fetchTrailers(this.props.currentMovie.Title)\n  console.log(this)\t\n\n  }\n\n  handleLoading = () => {\n    if(this.props.loading) \n    {\n      return <div>Loading Movies...</div>\n    } \n    else {\n      console.log(this.props.trailer)\n      return (\n      \t<div>\n      \t\t<MovieInfo currentMovie={this.props.currentMovie} trailer={this.props.trailer}/>\n      \t</div>\n      )\n    }\n  }\n\n  render() {\n    return (\n    <div className= \"Info\">\n    \t<div className=\"banner-3\">{this.props.currentMovie.Title.toUpperCase()}</div>\n    \t{this.handleLoading()}\n\t</div>\n \t);\n  }\n}\n\nconst mapDispatchToProps = state => {\n  return {\n    trailer: state.TrailersReducer.trailer,\n    loading: state.TrailersReducer.loading\n  }\n}\n\nexport default connect(mapDispatchToProps, {fetchTrailers})(InfoPage)"]},"metadata":{},"sourceType":"module"}