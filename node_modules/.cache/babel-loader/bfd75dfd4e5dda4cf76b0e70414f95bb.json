{"ast":null,"code":"const URL = \"http://localhost:3000/\";\nlet streamList = [];\nlet movies_list = [];\nvar thestreams;\nvar themovies;\nconst adapter = {\n  getStreams: () => {\n    return fetch(`${URL}/streams`).then(resp => resp.json());\n  },\n  getMovies: stream_id => {\n    return fetch(`${URL}/streams/${stream_id}/movies`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => resp.json());\n  },\n  fetchStreams: () => {\n    adapter.getStreams().then(streams => adapter.retireveStreams(streams));\n  },\n\n  retireveStreams(list) {\n    list.forEach(stream => {\n      streamList.push(stream);\n    });\n    return streamList;\n  }\n\n};\nadapter.fetchStreams();\nmovies_list = [{\n  title: 'Doctor Strange',\n  time: 115,\n  genres: ['Action', 'Adventure', 'Fantasy'],\n  metascore: 74\n}, {\n  title: 'Trolls',\n  time: 92,\n  genres: ['Animation', 'Adventure', 'Comedy', 'Family', 'Fantasy']\n}, {\n  title: 'Jack Reacher: Never Go Back',\n  time: 118,\n  genres: ['Action', 'Adventure', 'Crime', 'Mystery', 'Thriller']\n}];\n\nfunction doThis() {\n  thestreams = streamList;\n  themovies = movies_list;\n  console.log(themovies);\n  console.log(thestreams);\n  console.log(Object.keys(themovies).length);\n  console.log(Object.keys(thestreams).length);\n}\n\nmodule.exports = {\n  thestreams,\n  themovies\n};","map":{"version":3,"sources":["/Users/marshoward/Development/code/river-frontend/src/data.js"],"names":["URL","streamList","movies_list","thestreams","themovies","adapter","getStreams","fetch","then","resp","json","getMovies","stream_id","headers","fetchStreams","streams","retireveStreams","list","forEach","stream","push","title","time","genres","metascore","doThis","console","log","Object","keys","length","module","exports"],"mappings":"AAAA,MAAMA,GAAG,GAAG,wBAAZ;AACA,IAAIC,UAAU,GAAG,EAAjB;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA,IAAIC,UAAJ;AACA,IAAIC,SAAJ;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,UAAU,EAAE,MAAM;AAChB,WAAOC,KAAK,CAAE,GAAEP,GAAI,UAAR,CAAL,CACNQ,IADM,CACDC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADP,CAAP;AAED,GAJa;AAMdC,EAAAA,SAAS,EAAGC,SAAD,IAAe;AACxB,WAAOL,KAAK,CAAE,GAAEP,GAAI,YAAWY,SAAU,SAA7B,EAAsC;AAChDC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AADuC,KAAtC,CAAL,CAGNL,IAHM,CAGDC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAHP,CAAP;AAID,GAXa;AAadI,EAAAA,YAAY,EAAE,MAAM;AACnBT,IAAAA,OAAO,CAACC,UAAR,GACCE,IADD,CACMO,OAAO,IAAIV,OAAO,CAACW,eAAR,CAAwBD,OAAxB,CADjB;AAEA,GAhBa;;AAkBfC,EAAAA,eAAe,CAACC,IAAD,EAAM;AACpBA,IAAAA,IAAI,CAACC,OAAL,CAAaC,MAAM,IAAG;AACpBlB,MAAAA,UAAU,CAACmB,IAAX,CAAgBD,MAAhB;AACD,KAFD;AAGA,WAAOlB,UAAP;AACC;;AAvBa,CAAhB;AA4BCI,OAAO,CAACS,YAAR;AAECZ,WAAW,GAAG,CACd;AACEmB,EAAAA,KAAK,EAAE,gBADT;AAEEC,EAAAA,IAAI,EAAE,GAFR;AAGEC,EAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,WAAX,EAAwB,SAAxB,CAHV;AAIEC,EAAAA,SAAS,EAAE;AAJb,CADc,EAOd;AACEH,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,IAAI,EAAE,EAFR;AAGEC,EAAAA,MAAM,EAAE,CAAC,WAAD,EAAc,WAAd,EAA2B,QAA3B,EAAqC,QAArC,EAA+C,SAA/C;AAHV,CAPc,EAYd;AACEF,EAAAA,KAAK,EAAE,6BADT;AAEEC,EAAAA,IAAI,EAAE,GAFR;AAGEC,EAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,WAAX,EAAwB,OAAxB,EAAiC,SAAjC,EAA4C,UAA5C;AAHV,CAZc,CAAd;;AAoBF,SAASE,MAAT,GAAiB;AACftB,EAAAA,UAAU,GAAGF,UAAb;AACAG,EAAAA,SAAS,GAAIF,WAAb;AACDwB,EAAAA,OAAO,CAACC,GAAR,CAAYvB,SAAZ;AACAsB,EAAAA,OAAO,CAACC,GAAR,CAAYxB,UAAZ;AACAuB,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAYzB,SAAZ,EAAuB0B,MAAnC;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAY1B,UAAZ,EAAwB2B,MAApC;AAEA;;AAMDC,MAAM,CAACC,OAAP,GAAiB;AACf7B,EAAAA,UADe;AAEfC,EAAAA;AAFe,CAAjB","sourcesContent":["const URL = \"http://localhost:3000/\"\nlet streamList = [];\nlet movies_list = [];\nvar thestreams;\nvar themovies ;\n\nconst adapter = {\n  getStreams: () => {\n    return fetch(`${URL}/streams`)\n    .then(resp => resp.json())\n  },\n\n  getMovies: (stream_id) => {\n    return fetch(`${URL}/streams/${stream_id}/movies`,{\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n    .then(resp => resp.json())\n  },\n\n  fetchStreams: () => {\n  \tadapter.getStreams()\n  \t.then(streams => adapter.retireveStreams(streams))\n  },\n\n retireveStreams(list){\n  list.forEach(stream=> {  \n    streamList.push(stream);\n  });\n  return streamList\n  }\t\n}\n\n\n\n\tadapter.fetchStreams();\t\n\t \n\t movies_list = [\n  {\n    title: 'Doctor Strange',\n    time: 115,\n    genres: ['Action', 'Adventure', 'Fantasy'],\n    metascore: 74\n  },\n  {\n    title: 'Trolls',\n    time: 92,\n    genres: ['Animation', 'Adventure', 'Comedy', 'Family', 'Fantasy']\n  },\n  {\n    title: 'Jack Reacher: Never Go Back',\n    time: 118,\n    genres: ['Action', 'Adventure', 'Crime', 'Mystery', 'Thriller']\n  }\n]\n\n\nfunction doThis(){\n\t thestreams = streamList\n\t themovies  = movies_list\t\n\tconsole.log(themovies)\n\tconsole.log(thestreams)\n\tconsole.log(Object.keys(themovies).length)\n\tconsole.log(Object.keys(thestreams).length)\n\n}\n\n\n\n\n\nmodule.exports = {\n  thestreams,\n  themovies\n}"]},"metadata":{},"sourceType":"module"}